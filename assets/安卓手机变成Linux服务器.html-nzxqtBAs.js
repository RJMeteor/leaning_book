import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a,o as n}from"./app-D1MZBOvf.js";const l="/leaning_book/assets/linux_s-B-oa4HMA.png",t="/leaning_book/assets/domain-BiU9Rp2u.png",h={};function d(r,i){return n(),e("div",null,i[0]||(i[0]=[a(`<h1 id="_1-下载termux" tabindex="-1"><a class="header-anchor" href="#_1-下载termux"><span>1. 下载<code>Termux</code></span></a></h1><div class="hint-container tip"><p class="hint-container-title">获取手机root权限</p><p>由于获取手机root权限比较麻烦，这里采用无需root权限的Termux，来把手机改成Linux服务器</p></div><p>下载Termux网址：<a href="https://github.com/termux/termux-app/releases" target="_blank" rel="noopener noreferrer">https://github.com/termux/termux-app/releases</a></p><div class="hint-container tip"><p class="hint-container-title">其他应用</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pkg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lsof</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> net-tools</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>vim</code>：编辑文件</li><li><code>lsof</code>： 查看端口所在pid(进程Id)，如<code>lsof -i :8022</code></li><li><code>net-tools</code>：是来查看手机后台监听的端口号有哪些，如<code>netstat -tuln</code></li></ul></div><h2 id="_1-1-自启动" tabindex="-1"><a class="header-anchor" href="#_1-1-自启动"><span>1.1 自启动</span></a></h2><h3 id="_1-1-1-会话自启动" tabindex="-1"><a class="header-anchor" href="#_1-1-1-会话自启动"><span>1.1.1 会话自启动</span></a></h3><p>在 Termux 中，每次会话都会执行<code>$PREFIX/etc/profile</code>，里面包括了要执行<code>.bashrc</code>,<code>profile.d文件下sh脚本</code>其他服务等</p><p><strong>提到 home目录的 .bashrc/.zshrc 的方式有弊端，每次打开新的终端都会重新执行以下上述脚本</strong></p><p><code>termux</code>官方有 <code>termux-boot</code>组件来设定<code>termux</code>会话开启后自动执行的脚本，然后尝试后发现失效。通过简单地查询，可讲启动脚本放到 <code>$PREFIX/etc/profile.d/</code> 目录下，即可实现打开<code>termux</code>自动执行该脚本。当然也可以直接把脚本内容贴到<code>$PREFIX/etc/profile</code>文件中，但没必要了。需要注意的，脚本后缀名限定为<code>.sh</code>。</p><ol><li><p><strong>创建或编辑 <code>$PREFIX/etc/profile</code></strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">touch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.bash_profile</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nano</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.bash_profile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>将需要在启动时执行的命令移到 <code>$PREFIX/etc/profile</code></strong>：</p><p>如果 <code>-f ~/.bashrc</code> 是文件，条件为真（返回 <code>0</code>），<code>then</code> 块中的命令会执行。</p><p>如果 <code>-f ~/.bashrc</code> 不是文件，条件为假（返回非 <code>0</code>），<code>else</code> 块中的命令会执行。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ~/.bashrc ]; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    .</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.bashrc</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 其他只在启动时执行的命令</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Termux started&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>确保 <code>~/.bashrc</code> 中的命令不会在每次打开新会话时重复执行</strong>：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ~/.bashrc</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 保持 .bashrc 中的命令不变</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_1-1-2-使用-termux-boot" tabindex="-1"><a class="header-anchor" href="#_1-1-2-使用-termux-boot"><span>1.1.2 使用 <code>termux-boot</code></span></a></h3><p>网址：<a href="https://github.com/termux/termux-boot/releases" target="_blank" rel="noopener noreferrer">https://github.com/termux/termux-boot/releases</a></p><p>安装好后第一次需要点击手机上boot应用图标启动一次</p><p>该应用可以在手机启动时启动termux中对应的应用服务</p><p>打开我们的termux</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#创建termux:boot需要执行的目录位置</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.termux/boot</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在boot目录下创建自启动脚本</p><p>注意,我们创建的脚本自启动的应用需要提前在termux中设置好!</p><p>这里我们创建一个开机就自启动的sshd服务：<code>vim ~/.termux/boot/start-sshd.sh</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> pgrep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sshd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/dev/null</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;sshd is stared!&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  sshd</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;start sshd!&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">fi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">重点</p><p>开启手机开机termuxboot自启动</p><p>开启手机开机termux自启动</p></div><p>重启手机，就可以看到<code>~/.termux/boot </code>文件夹下得sh脚本执行了</p><h1 id="_2-下载openssh" tabindex="-1"><a class="header-anchor" href="#_2-下载openssh"><span>2. 下载<code>openssh</code></span></a></h1><blockquote><p>下载<code>openssh</code>目的是以便电脑远程链接该服务器</p></blockquote><h2 id="_2-1-安装openssh命令" tabindex="-1"><a class="header-anchor" href="#_2-1-安装openssh命令"><span>2.1 安装openssh命令：</span></a></h2><div class="language-bin line-numbers-mode" data-highlighter="shiki" data-ext="bin" data-title="bin" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pkg install openssh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_2-2-启动openssh" tabindex="-1"><a class="header-anchor" href="#_2-2-启动openssh"><span>2.2 启动openssh</span></a></h2><p>默认端口：8022</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sshd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_2-3-自启动sshd" tabindex="-1"><a class="header-anchor" href="#_2-3-自启动sshd"><span>2.3 自启动sshd</span></a></h2><blockquote><p>1.登录自启动：</p></blockquote><p>用户登录termux后将会执行 <code>/data/data/com.termux/files/usr/etc/termux-login.sh</code></p><p>编辑：<code>vim /data/data/com.termux/files/usr/etc/termux-login.sh</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> pgrep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sshd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/dev/null</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;sshd is stared!&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  sshd</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;start sshd!&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">fi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>2.应用开机自启动</p></blockquote><p>termux启动后将会执行 <code>/data/data/com.termux/files/home/.bashrc</code></p><p>编辑：<code>vim /data/data/com.termux/files/home/.bashrc</code></p><p>使用nohup命名使应用后台运行</p><p><code>nohup</code> 默认情况下会忽略任何输入，并将标准输入重定向到 <code>/dev/null</code>。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nohup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ngrok</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ssh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nohup.out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 2&gt;&amp;1 &amp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_2-4-远程连接termux搭建的linux服务器" tabindex="-1"><a class="header-anchor" href="#_2-4-远程连接termux搭建的linux服务器"><span>2.4 远程连接Termux搭建的Linux服务器</span></a></h2><ol><li><p>查看手机IP地址：<code>ifconfig</code> -&gt; 192.168.1.6</p></li><li><p>常看用户名：<code>whoami</code> -&gt; u0_a197</p></li><li><p>如果忘了密码，修改密码：<code>passwd</code> -&gt; renjia</p></li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>ssh u0_a197@192.168.1.6 -p 8022</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="_3-修改镜像源" tabindex="-1"><a class="header-anchor" href="#_3-修改镜像源"><span>3. 修改镜像源</span></a></h1><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sed</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;s@^\\(deb.*stable main\\)$@#\\1\\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main@&#39;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $PREFIX</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/apt/sources.list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sed</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;s@^\\(deb.*games stable\\)$@#\\1\\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/game-packages-24 games stable@&#39;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $PREFIX</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/apt/sources.list.d/game.list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sed</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;s@^\\(deb.*science stable\\)$@#\\1\\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/science-packages-24 science stable@&#39;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $PREFIX</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/apt/sources.list.d/science.list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pkg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更换源几秒钟就可以执行完pkg update，就设置成功了。</p><h1 id="_4-内网穿透" tabindex="-1"><a class="header-anchor" href="#_4-内网穿透"><span>4. 内网穿透</span></a></h1><div class="hint-container tip"><p class="hint-container-title">为什么需要内网穿透</p><p>由于用手机作为linux服务器，没有一个公网IP就无法在公网进行外网访问，为了打破外网访问就需要内网穿透。</p><p>所谓的内网访问就是把内网中的服务提供给外网访问的一种技术，而无需内网穿透，如内网穿透有<code>natapp</code>、<code>cpolar</code>、<code>ngrok</code>等，这里用ngrok来讲解，因为ngrok功能比较强大。</p></div><h2 id="_4-1-下载ngrok" tabindex="-1"><a class="header-anchor" href="#_4-1-下载ngrok"><span>4.1 下载ngrok</span></a></h2><p>确定linux架构类型</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uname</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果输出为 <code>aarch64</code>，则表示你的设备是 ARM64 架构；如果输出为 <code>x86_64</code>，则表示你的设备是 AMD64 架构。</p><p>下载网址：<a href="https://dashboard.ngrok.com/get-started/setup/linux" target="_blank" rel="noopener noreferrer">https://dashboard.ngrok.com/get-started/setup/linux</a></p><p>1.解压：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -xvzf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ngrok-v3-stable-linux-arm64.tgz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2.授予执行授权：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ngrok</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>3.移动可执行文件ngrok到用户bin目录下，做为全局命令</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ngrok</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $PREFIX</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/bin/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>4.授权认证</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ngrok</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add-authtoken</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2BeZFB4vuO4yFTCZ9FH7XLeETEr_2Nkv8QwrxGFbQyZmHX4eq</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_4-2-启动ngrok" tabindex="-1"><a class="header-anchor" href="#_4-2-启动ngrok"><span>4.2 启动ngrok</span></a></h2><div class="hint-container warning"><p class="hint-container-title">一直内网穿透不成功的解决办法</p><p>1.安装两个东西：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pkg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> proot</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> resolv-conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2.<strong>重点：在启动服务之前启动一下<code>termux-chroot</code>，不然可能连接不上</strong></p></div><blockquote><p>内网穿透：把ssh给外网访问</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ngrok</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tcp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8022</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>出现<code>Session Status: online</code> 就代表成功</p><figure><img src="`+l+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_4-3-后台启动ngrok" tabindex="-1"><a class="header-anchor" href="#_4-3-后台启动ngrok"><span>4.3 后台启动ngrok</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>大部分情况下，我们使用<code>SSH</code>终端远程连接服务的时候，在界面启动服务并关闭终端后，程序也会停止运行，部分程序在启动后也会一直占用终端布拉布拉打印日志。而<code>screen</code>就可以非常好的解决上述问题，帮助我们在后台运行各项服务和程序。</p></div><p>1.安装</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> screen</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#卸载</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> uninstall</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> screen</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.基本使用</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">screen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 保存离开</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 快捷键：ctrl+A+D</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查询</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">screen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ls</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 进入</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">screen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 停止推出</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">screen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -X</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> quit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-4-关于ngrok" tabindex="-1"><a class="header-anchor" href="#_4-4-关于ngrok"><span>4.4 关于ngrok</span></a></h2><h3 id="_4-4-1-为什么-ngrok-只能穿透一个隧道" tabindex="-1"><a class="header-anchor" href="#_4-4-1-为什么-ngrok-只能穿透一个隧道"><span>4.4.1 为什么 Ngrok 只能穿透一个隧道</span></a></h3><p>Ngrok 的免费版有一些限制，其中之一是每个账户同时只能运行一个代理。这意味着你不能同时启动多个代理去代理多个隧道，例如分开运行 HTTP 和 TCP 隧道。这些限制是为了防止滥用，并确保免费服务的公平使用。</p><p>如果你需要同时运行多个隧道，有最简单的解决方案：</p><p>在<code>ngrok.yml</code>文件配置多个资源，这样不同隧道共用同一个代理。</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;3&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">agent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    authtoken</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">2BeZFB4vuO4yFTCZ9FH7XLeETEr_2Nkv8QwrxGFbQyZmHX4eq</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tunnels</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  ssh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    proto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">tcp</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">22</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    proto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">http</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8080</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ngrok</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ngrok2/ngrok.yml</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ssh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-4-2-在ngrok-yml配http-domain" tabindex="-1"><a class="header-anchor" href="#_4-4-2-在ngrok-yml配http-domain"><span>4.4.2 在ngrok.yml配HTTP domain</span></a></h3><p>在 <code>ngrok.yml</code> 配置文件中指定自定义域名，可以让你更方便地管理和启动多个隧道。以下是如何在 <code>ngrok.yml</code> 文件中配置自定义域名的详细步骤：</p><blockquote><p>1.编辑 <code>ngrok.yml</code> 文件</p></blockquote><p>在 <code>ngrok.yml</code> 文件中，你可以定义多个隧道，并为每个隧道指定自定义域名。以下是一个示例配置文件：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;3&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">agent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    authtoken</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">2BeZFB4vuO4yFTCZ9FH7XLeETEr_2Nkv8QwrxGFbQyZmHX4eq</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tunnels</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    proto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">http</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    addr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8080</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    hostname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">evident-exact-maggot.ngrok-free.app</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+t+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>2.解释配置文件</p></blockquote><ul><li><strong>authtoken</strong>: 你的 Ngrok Authtoken，用于认证你的账户。</li><li><strong>tunnels</strong>: 定义多个隧道。 <ul><li><strong>http</strong>: 定义一个 HTTP 隧道。 <ul><li><strong>proto</strong>: 隧道协议，这里是 <code>http</code>。</li><li><strong>addr</strong>: 本地服务的端口，这里是 8080。</li><li><strong>hostname</strong>: 自定义域名，这里是 <code>foo.example.com</code>。</li></ul></li></ul></li></ul><blockquote><p>3.启动 Ngrok</p></blockquote><p>使用以下命令启动 Ngrok 隧道：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ngrok</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ngrok/ngrok.yml</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="_5-安装其他应用" tabindex="-1"><a class="header-anchor" href="#_5-安装其他应用"><span>5. 安装其他应用</span></a></h1><h2 id="_5-1-安装mysql数据库" tabindex="-1"><a class="header-anchor" href="#_5-1-安装mysql数据库"><span>5.1 安装MySQL数据库</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pkg install mariadb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>运行mysql</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mysqld</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>进入mysql控制台，(root刚开始没有密码)</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mysql -u root -p</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>设置密码</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>use mysql;</span></span>
<span class="line"><span>set password for ‘root’@‘localhost’ = password(‘123456’);</span></span>
<span class="line"><span>flush priviles;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>给远程用户授权</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>CREATE USER &#39;myuser&#39;@&#39;%&#39; IDENTIFIED BY &#39;mypassword&#39;;</span></span>
<span class="line"><span>GRANT ALL PRIVILEGES ON *.* TO &#39;myuser&#39;@&#39;%&#39;;</span></span>
<span class="line"><span>FLUSH PRIVILEGES;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>远程用户连接</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mysql -u myuer -p  -h 127.0.0.1 -P 3306</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_5-2-安装nodejs" tabindex="-1"><a class="header-anchor" href="#_5-2-安装nodejs"><span>5.2 安装nodejs</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pkg install nodejs-lts</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>设置npm远程淘宝镜像</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm config set registry https://registry.npmmirror.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_5-3-nginx" tabindex="-1"><a class="header-anchor" href="#_5-3-nginx"><span>5.3 nginx</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pkg install nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>查看安装nginx产生的文件路径</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pkg files nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>软链接web目录和配置目录</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#nginx 配置目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /data/data/com.termux/files/usr/etc/nginx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /data/data/com.termux/files/home/web/nginx/config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#nginx html目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /data/data/com.termux/files/usr/share/nginx/html</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /data/data/com.termux/files/home/web/nginx/html</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>访问web页面</li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>http://localhost:8080</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_5-4-安装minio" tabindex="-1"><a class="header-anchor" href="#_5-4-安装minio"><span>5.4 安装minio</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pkg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> minio</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>MinIO 需要一个目录来存储对象数据。创建一个目录并设置适当的权限：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /data/data/com.termux/files/home/minio-data</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>启动之前设置环境变量，修改用户名和密码</li></ol><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> MINIO_ACCESS_KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">your_access_key</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> MINIO_SECRET_KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">your_secret_key</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>启动 MinIO 服务器，这里通过nohup是为了让minio在后台启动不占用控制台，并且关闭窗口不会退出服务</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nohup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> minio</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /data/data/com.termux/files/home/minio-data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">minio.log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 2&gt;&amp;1 &amp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="4"><li>访问web页面</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">http://localhost:9000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_5-5-安装redis" tabindex="-1"><a class="header-anchor" href="#_5-5-安装redis"><span>5.5 安装Redis</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pkg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> redis</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>安装好后修改redis的配置文件</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /data/data/com.termux/files/usr/etc/redis.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>主要修改配置文件中的下面几项：</li></ol><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" data-title="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>bind 0.0.0.0 ::1  # 这个配置是可以所有ip都可访问redis</span></span>
<span class="line"><span>daemonize yes     # 可以让redis在后台启动</span></span>
<span class="line"><span>protected-mode no # 关闭安全模式，只有这样才能远程连接redis</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>启动redis</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">redis-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /data/data/com.termux/files/usr/etc/redis.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以通过redis的图形化工具进行连接验证，端口默认6379，ip地址还是手机的ip地址</p><h2 id="_5-6-安装gitea" tabindex="-1"><a class="header-anchor" href="#_5-6-安装gitea"><span>5.6 安装gitea</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pkg install gitea</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>启动服务</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>gitea</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>访问web页面</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>http://localhost:3000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,141)]))}const c=s(h,[["render",d],["__file","安卓手机变成Linux服务器.html.vue"]]),o=JSON.parse('{"path":"/pages/linux/%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E5%8F%98%E6%88%90Linux%E6%9C%8D%E5%8A%A1%E5%99%A8.html","title":"1. 下载Termux","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1.1 自启动","slug":"_1-1-自启动","link":"#_1-1-自启动","children":[{"level":3,"title":"1.1.1 会话自启动","slug":"_1-1-1-会话自启动","link":"#_1-1-1-会话自启动","children":[]},{"level":3,"title":"1.1.2 使用 termux-boot","slug":"_1-1-2-使用-termux-boot","link":"#_1-1-2-使用-termux-boot","children":[]}]},{"level":2,"title":"2.1 安装openssh命令：","slug":"_2-1-安装openssh命令","link":"#_2-1-安装openssh命令","children":[]},{"level":2,"title":"2.2 启动openssh","slug":"_2-2-启动openssh","link":"#_2-2-启动openssh","children":[]},{"level":2,"title":"2.3 自启动sshd","slug":"_2-3-自启动sshd","link":"#_2-3-自启动sshd","children":[]},{"level":2,"title":"2.4 远程连接Termux搭建的Linux服务器","slug":"_2-4-远程连接termux搭建的linux服务器","link":"#_2-4-远程连接termux搭建的linux服务器","children":[]},{"level":2,"title":"4.1 下载ngrok","slug":"_4-1-下载ngrok","link":"#_4-1-下载ngrok","children":[]},{"level":2,"title":"4.2 启动ngrok","slug":"_4-2-启动ngrok","link":"#_4-2-启动ngrok","children":[]},{"level":2,"title":"4.3 后台启动ngrok","slug":"_4-3-后台启动ngrok","link":"#_4-3-后台启动ngrok","children":[]},{"level":2,"title":"4.4 关于ngrok","slug":"_4-4-关于ngrok","link":"#_4-4-关于ngrok","children":[{"level":3,"title":"4.4.1 为什么 Ngrok 只能穿透一个隧道","slug":"_4-4-1-为什么-ngrok-只能穿透一个隧道","link":"#_4-4-1-为什么-ngrok-只能穿透一个隧道","children":[]},{"level":3,"title":"4.4.2 在ngrok.yml配HTTP domain","slug":"_4-4-2-在ngrok-yml配http-domain","link":"#_4-4-2-在ngrok-yml配http-domain","children":[]}]},{"level":2,"title":"5.1 安装MySQL数据库","slug":"_5-1-安装mysql数据库","link":"#_5-1-安装mysql数据库","children":[]},{"level":2,"title":"5.2 安装nodejs","slug":"_5-2-安装nodejs","link":"#_5-2-安装nodejs","children":[]},{"level":2,"title":"5.3 nginx","slug":"_5-3-nginx","link":"#_5-3-nginx","children":[]},{"level":2,"title":"5.4 安装minio","slug":"_5-4-安装minio","link":"#_5-4-安装minio","children":[]},{"level":2,"title":"5.5 安装Redis","slug":"_5-5-安装redis","link":"#_5-5-安装redis","children":[]},{"level":2,"title":"5.6 安装gitea","slug":"_5-6-安装gitea","link":"#_5-6-安装gitea","children":[]}],"git":{"createdTime":1736745529000,"updatedTime":1746376490000,"contributors":[{"name":"RJMeteor","email":"3029364473@qq.com","commits":3}]},"readingTime":{"minutes":7.36,"words":2208},"filePathRelative":"pages/linux/安卓手机变成Linux服务器.md","localizedDate":"2025年1月13日","excerpt":"\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">获取手机root权限</p>\\n<p>由于获取手机root权限比较麻烦，这里采用无需root权限的Termux，来把手机改成Linux服务器</p>\\n</div>\\n<p>下载Termux网址：<a href=\\"https://github.com/termux/termux-app/releases\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/termux/termux-app/releases</a></p>"}');export{c as comp,o as data};
