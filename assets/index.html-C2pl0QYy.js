import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as l}from"./app-xdcQUDNE.js";const e="/assets/zp1-CEFThq6N.jpg",h="/assets/zp2-Cvsedq_8.jpg",t="/assets/zp3-CmxZe-c1.jpg",k="/assets/zp4-DgmfdSHU.jpg",p={};function d(r,s){return l(),a("div",null,s[0]||(s[0]=[n('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>Zookeeper是一个开源的分布式协调服务，最初由Apache软件基金会开发。它主要用于管理大型分布式系统中的配置、同步和命名服务。Zookeeper提供了一种简单的框架，使得分布式应用能够实现各种协调任务，比如：</p><ol><li><strong>配置管理</strong>：集中管理分布式应用中各个节点的配置信息。</li><li><strong>命名服务</strong>：为分布式系统中的各种资源提供唯一的命名。</li><li><strong>分布式锁</strong>：允许多个进程之间进行同步，避免资源冲突。</li><li><strong>集群管理</strong>：监控节点的状态，维护服务的可用性。</li></ol><p>Zookeeper使用一种类似于文件系统的结构来存储数据，数据被组织在一个类似树的层次结构中，应用程序可以通过Zookeeper的API进行读写操作。</p><p>由于其高可用性、易于扩展和可靠性，Zookeeper广泛应用于大规模分布式系统中，如Hadoop、Kafka等。</p></div><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><figure><img src="'+e+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_1-zookeeper-简介" tabindex="-1"><a class="header-anchor" href="#_1-zookeeper-简介"><span><strong>1. ZooKeeper 简介</strong></span></a></h2><p>ZooKeeper（动物园管理者）简称 <strong>ZK</strong>，<strong>一个分布式的，开放源码的分布式应用程序协调服务</strong>，是 Google 的 Chubby 一个开源的实现，是 Hadoop 和 Hbase 的重要组件。ZooKeeper 使用 Java 所编写，但是支持 Java 和 C 两种编程语言。</p><p><img src="'+h+'" alt="" loading="lazy">)</p><p><strong>应用场景</strong>：</p><ul><li>分布式微服务注册中心：Dubbo 框架、Spring Cloud 框架</li><li>集群管理：Hadoop Hbase 组件</li><li>分布式锁</li></ul><hr><h2 id="_2-zookeeper数据结构" tabindex="-1"><a class="header-anchor" href="#_2-zookeeper数据结构"><span>2. Zookeeper数据结构</span></a></h2><p>zookeeper 数据结构和 UNIX 文件系统很类似，整体上可以看做是一棵树，节点被称为 ZNode。每个 ZNode 默认能够存储 1MB 的数据，因为 zookeeper 是 CP 模型，所以它不适合存储大量的数据，只适合存储一些简单的配置信息。此外，每个节点都可以通过路径进行唯一标识，我们通过 ZNode 的路径即可获取某个 ZNode 存储的数据。</p><p><img src="'+t+`" alt="" loading="lazy">)</p><p>ZooKeeper 的数据结构是一种层次化的命名空间，类似于传统的文件系统，但具有特定的特性和用途。以下是 ZooKeeper 数据结构的主要特点和组成部分：</p><h2 id="_3-命名空间-namespace" tabindex="-1"><a class="header-anchor" href="#_3-命名空间-namespace"><span>3. 命名空间（Namespace）</span></a></h2><ul><li><strong>路径表示</strong>：ZooKeeper 中的每个数据节点（ZNode）通过路径进行唯一标识，路径由一系列由斜杠（/）分隔的路径元素组成。例如，/app/config/server1 表示一个名为 server1 的 ZNode，位于 /app/config 这个父节点下。</li><li><strong>层级结构</strong>：如同文件系统的目录树，ZooKeeper 的命名空间支持无限层级的嵌套。这种结构使得数据可以根据逻辑关系组织成层次分明的树状结构。</li></ul><h2 id="_4-znode-数据节点" tabindex="-1"><a class="header-anchor" href="#_4-znode-数据节点"><span>4. ZNode（数据节点)</span></a></h2><ul><li><strong>数据存储</strong>：每个 ZNode 存储一个小型的、字节形式的数据块。虽然实际限制可能随版本和配置有所不同，通常建议每个 ZNode 存储的数据不超过 1 MiB，以保持系统高效运行。ZNode 存储的数据可以是配置信息、状态标志、临时状态等。</li><li><strong>元数据</strong>：除了用户数据外，每个 ZNode 还包含一些元数据，如：</li><li><strong>版本号（version）</strong>：每次对 ZNode 的数据或元数据进行修改时，版本号都会递增，用于实现乐观锁控制。</li><li><strong>时间戳（ctime, mtime）</strong>：分别记录节点创建时间和最近一次修改时间。</li><li><strong>ACL（Access Control List）</strong>：定义了哪些用户或角色对 ZNode 具有何种访问权限。</li><li><strong>临时节点标记</strong>：ZNode 可以是持久的（persistent）或临时的（ephemeral）。临时节点在创建它的会话结束时会被自动删除，常用于表示会话相关状态。</li></ul><h3 id="_4-1-节点类型" tabindex="-1"><a class="header-anchor" href="#_4-1-节点类型"><span>4.1 节点类型</span></a></h3><p>在 ZooKeeper 中，主要存在以下四种类型的 ZNode（数据节点）：</p><h4 id="_4-1-1-持久节点-persistent-node" tabindex="-1"><a class="header-anchor" href="#_4-1-1-持久节点-persistent-node"><span>4.1.1 持久节点（Persistent Node）：</span></a></h4><ul><li><strong>标识</strong>：无特殊标记</li><li><strong>特征</strong>：一旦创建，除非被客户端明确地删除，否则会一直存在于 ZooKeeper 集群中。即使创建该节点的客户端会话结束，持久节点也不会被自动删除。</li><li><strong>用途</strong>：用于存储需要长期保留且不受客户端会话生命周期影响的数据，如系统配置、静态资源映射、固定角色分配等。</li></ul><h4 id="_4-1-2-临时节点-ephemeral-node" tabindex="-1"><a class="header-anchor" href="#_4-1-2-临时节点-ephemeral-node"><span>4.1.2 临时节点（Ephemeral Node）：</span></a></h4><ul><li><strong>标识</strong>：ephemeral</li><li><strong>特征</strong>：与创建它的客户端会话绑定。当客户端会话结束（如客户端主动关闭连接、网络中断或会话超时）时，临时节点会被自动删除。临时节点不能拥有子节点。</li><li><strong>用途</strong>：表示与客户端会话相关的瞬时状态，如客户端在线状态、临时资源分配、会话关联的锁等。临时节点的生命周期与客户端会话一致，有助于实现会话失效时资源的自动清理。</li></ul><h4 id="_4-1-3-顺序节点-sequential-node" tabindex="-1"><a class="header-anchor" href="#_4-1-3-顺序节点-sequential-node"><span>4.1.3 顺序节点（Sequential Node）：</span></a></h4><ul><li><strong>标识</strong>：sequential</li><li><strong>特征</strong>：在创建节点时，ZooKeeper 会在节点名称后面自动追加一个递增的数字后缀，确保节点名称在整个集群中是唯一的。顺序节点可以是持久节点（Persistent Sequential Node）或临时节点（Ephemeral Sequential Node）。</li><li><strong>用途</strong>：用于生成全局唯一的序列号，适用于分布式环境中需要唯一标识的任务、消息、租约等场景。顺序节点还可以用于实现基于节点创建顺序的公平锁、队列等数据结构。</li></ul><h4 id="_4-1-4-带过期时间的节点-ttl-based-node" tabindex="-1"><a class="header-anchor" href="#_4-1-4-带过期时间的节点-ttl-based-node"><span>4.1.4 带过期时间的节点（TTL-based Node）：</span></a></h4><ul><li><strong>标识</strong>：PERSISTENT_SEQUENTIAL_WITH_TTL 或类似的表述，具体取决于 ZooKeeper 版本和 API 实现。</li><li><strong>特征</strong>：除了具备持久节点或临时节点的基本属性外，这类节点还设置了过期时间（Time-to-Live, TTL）。在指定的时间间隔过后，如果节点未被显式更新或删除，ZooKeeper 会自动删除该节点。</li><li><strong>用途</strong>：用于存储具有有效期的临时或持久数据，如定时清理的临时资源、定时任务的注册信息、具有生存周期的会话关联状态等。过期时间机制可以减轻系统中需要定期清理过期数据的负担。</li></ul><p>这四种类型的 ZNode 结合使用，可以满足分布式系统中多样化的数据管理需求，如状态存储、资源分配、协调控制、定时清理等。根据实际应用场景选择合适的节点类型，有助于优化系统设计和提升协调效率。请注意，不同 ZooKeeper 版本或实现可能对节点类型的支持有所差异，具体功能应参考所使用的 ZooKeeper 文档或 API 参考。</p><h2 id="_5-watch-监视器" tabindex="-1"><a class="header-anchor" href="#_5-watch-监视器"><span>5. Watch（监视器）</span></a></h2><blockquote><p>ZooKeeper 提供了一种强大的事件监听机制——Watch（监视器），允许客户端订阅特定节点的变化事件。当订阅的事件发生时，ZooKeeper 服务端会向相应的客户端发送通知。Watch 事件监听是 ZooKeeper 实现分布式协调、状态同步等核心功能的关键手段之一。</p></blockquote><h3 id="_5-1-类型与触发条件" tabindex="-1"><a class="header-anchor" href="#_5-1-类型与触发条件"><span>5.1 类型与触发条件</span></a></h3><p>ZooKeeper 支持两种类型的 Watch 事件：</p><ol><li><strong>数据变更 Watch（Data Watches）</strong>： 当客户端对某个 ZNode 设置数据变更 Watch 后，如果该 ZNode 的数据内容发生任何更改（包括创建、更新、删除），ZooKeeper 会向客户端发送一个通知。注意，数据变更 Watch 是一次性触发器，即触发后需要客户端重新设置才能继续监听后续变化。</li><li><strong>子节点列表变更 Watch（Child Watches）</strong>： 如果客户端对某个 ZNode 设置子节点列表变更 Watch，当该 ZNode 的子节点集发生变化（新增、删除子节点）时，ZooKeeper 会发送通知。同样，子节点列表变更 Watch 也是一次性触发器。</li></ol><h3 id="_5-2-设置-watch" tabindex="-1"><a class="header-anchor" href="#_5-2-设置-watch"><span>5.2 设置 Watch</span></a></h3><p>客户端可以通过以下方式设置 Watch：</p><ul><li><strong>使用 ZooKeeper API</strong>： 在使用 ZooKeeper 客户端库（如 Java 的 org.apache.zookeeper.ZooKeeper 类）编写程序时，可以在相应方法中指定是否设置 Watch。例如，getData() 方法可以设置数据变更 Watch，getChildren() 方法可以设置子节点列表变更 Watch。</li><li><strong>使用 ZooKeeper 命令行工具</strong>： 在 ZooKeeper 命令行客户端（如 <a href="http://zkCli.sh" target="_blank" rel="noopener noreferrer">zkCli.sh</a>）中，通过在命令中添加 watch 参数来设置 Watch。例如，get path watch 会在获取数据的同时设置数据变更 Watch，ls path watch 会在列出子节点的同时设置子节点列表变更 Watch。</li></ul><h3 id="_5-3-事件通知与处理" tabindex="-1"><a class="header-anchor" href="#_5-3-事件通知与处理"><span>5.3 事件通知与处理</span></a></h3><p>当触发 Watch 的事件发生时，ZooKeeper 服务端会通过客户端与服务端之间已建立的连接，向客户端发送一个 Watch 事件通知。通知包含以下信息：</p><ul><li><strong>事件类型</strong>： 指明触发的具体事件类型，如 NodeDataChanged（数据变更）、NodeDeleted（节点删除）、NodeChildrenChanged（子节点列表变更）等。</li><li><strong>节点路径</strong>： 发生事件的 ZNode 的完整路径。</li><li><strong>状态码</strong>： 通常表示事件通知的成功与否，以及可能的错误代码。</li></ul><p>客户端在接收到 Watch 事件通知后，通常会调用预定义的回调函数（使用 ZooKeeper API 时）或在命令行中显示通知（使用命令行工具时），以便应用程序及时响应事件并采取相应的行动。</p><h3 id="_5-4-注意事项" tabindex="-1"><a class="header-anchor" href="#_5-4-注意事项"><span>5.4 注意事项</span></a></h3><ul><li><strong>一次性触发</strong>： Watch 是一次性触发器，这意味着一旦触发事件并发送通知后，该 Watch 就会自动移除。若想继续监听同一事件，客户端需在接收到通知后重新设置 Watch。</li><li><strong>异步通知</strong>： Watch 事件通知是异步发送的，不保证立即送达。客户端在设置 Watch 后，不应假设事件会立即触发或通知会立即到达。</li><li><strong>客户端会话状态</strong>： 如果客户端会话由于网络问题、超时等原因中断，所有与该会话关联的 Watch 将被移除，客户端需要在重新建立会话后重新设置 Watch。</li><li><strong>性能考虑</strong>： 大规模集群中大量使用 Watch 可能会影响 ZooKeeper 服务端的性能。在设计系统时应合理规划 Watch 的使用，避免过度依赖或滥用。</li></ul><h3 id="_5-5-实现节点监听机制" tabindex="-1"><a class="header-anchor" href="#_5-5-实现节点监听机制"><span>5.5 实现节点监听机制</span></a></h3><p>客户端可以监测 <code>znode</code> 节点的变化。<code>znode</code> 节点的变化会触发相应的事件，然后清除对该节点的监测。</p><p>当监测一个 <code>znode</code> 节点时候，Zookeeper 会发送通知给监测节点。<strong>一个 Watch 事件是一个一次性的触发器，当被设置了 Watch 的数据和目录发生了改变的时候，则服务器将这个改变发送给设置了 Watch 的客户端以便通知它们</strong>。</p><blockquote><p>通过事件监听机制，可以很方便实现分布式锁、分布式配置中心等；</p></blockquote><div class="hint-container tip"><p class="hint-container-title">分布式锁</p><p>zookeeper中建立节点时就像linux建文件或文件夹一样，出现相同节点路径(文件或文件夹)就会创建失败，根据这个可以实现一个互斥锁，从而达到分布式锁的效果</p><ol><li>成员1 创建node节点，并监听该节点删除事件</li><li>成员2 也创建该节点，发现创建失败，等待 成员1 删除node节点（释放锁）</li><li>成员1 释放锁，成员2再开始第一步操作</li></ol></div><h2 id="_5-安装" tabindex="-1"><a class="header-anchor" href="#_5-安装"><span>5. 安装</span></a></h2><h3 id="_5-1-linux-系统安装" tabindex="-1"><a class="header-anchor" href="#_5-1-linux-系统安装"><span>5.1 Linux 系统安装</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 1.安装 JDK 并配置环境变量&amp;下载 ZooKeeper 安装包</span></span>
<span class="line"><span>-	https://mirrors.bfsu.edu.cn/apache/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2-bin.tar.gz</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 2.下载安装包上传到 Linux 服务器中，并解压缩</span></span>
<span class="line"><span>-	tar -zxvf zookeeper-3.4.12.tar.gz</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 3.重命名安装目录</span></span>
<span class="line"><span>-	mv zookeeper-3.4.12 zk</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 4.配置 zoo.cfg 配置文件</span></span>
<span class="line"><span>-	1.修改 ZooKeeper 的 conf 目录下的 zoo_simple.cfg，修改完后，重命名为zoo.cfg</span></span>
<span class="line"><span>  tickTime=2000</span></span>
<span class="line"><span>  initLimit=10</span></span>
<span class="line"><span>  syncLimit=5</span></span>
<span class="line"><span>  dataDir=/usr/zookeeper/zkdata</span></span>
<span class="line"><span>  clientPort=2181</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 5.启动 ZooKeeper</span></span>
<span class="line"><span>-	在 ZooKeeper 的 bin 目录下，运行 zkServer.sh</span></span>
<span class="line"><span>	./bin/zkServer.sh start /usr/zookeeper/conf/zoo.cfg</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span># 6.使用 jps 查看启动是否成功</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 7.启动客户端连接到 ZooKeeper</span></span>
<span class="line"><span>- ./bin/zkCli.sh -server 192.168.0.220:2181</span></span>
<span class="line"><span>	注意：可以通过  ./bin/zkCli.sh help 查看客户端所有可以执行的指令</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-docker-安装-zookeeper" tabindex="-1"><a class="header-anchor" href="#_5-2-docker-安装-zookeeper"><span>5.2 Docker 安装 ZooKeeper</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 1.获取 ZooKeeper 的镜像</span></span>
<span class="line"><span>- docker pull zookeeper:3.4.14</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 2.启动 ZooKeeper 服务</span></span>
<span class="line"><span>- docker run --name zk -p 2181:2181 -d zookeeper:3.4.14</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_6-客户端基本指令" tabindex="-1"><a class="header-anchor" href="#_6-客户端基本指令"><span>6. 客户端基本指令</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 1.ls path    							查看特定节点下面的子节点</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 2.create path data   			创建一个节点。并给节点绑定数据（默认是持久性节点）</span></span>
<span class="line"><span>  - create path data								  创建持久节点（默认是持久节点）</span></span>
<span class="line"><span>  - create -s path data 						  创建持久性顺序节点</span></span>
<span class="line"><span>  -	create -e path data 						  创建临时性节点（注意：临时节点不能含有任何子节点）</span></span>
<span class="line"><span>  -	create -e -s path data            创建临时顺序节点（注意：临时节点不能含有任何子节点）</span></span>
<span class="line"><span> </span></span>
<span class="line"><span># 3.stat path                查看节点状态</span></span>
<span class="line"><span># 4.set path data            修改节点数据</span></span>
<span class="line"><span># 5.ls2 path                 查看节点下孩子和当前节点的状态</span></span>
<span class="line"><span># 6.history                  查看操作历史</span></span>
<span class="line"><span># 7.get path                 获得节点上绑定的数据信息</span></span>
<span class="line"><span># 8.delete path              删除节点（注意：删除节点不能含有子节点）</span></span>
<span class="line"><span># 9.rmr  path                递归删除节点（注意：会将当前节点下所有节点删除）</span></span>
<span class="line"><span># 10.quit                    退出当前会话（会话失效）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-java-操作-zookeeper" tabindex="-1"><a class="header-anchor" href="#_7-java-操作-zookeeper"><span><strong>7. Java 操作 ZooKeeper</strong></span></a></h2><h3 id="_7-1-创建项目引入依赖" tabindex="-1"><a class="header-anchor" href="#_7-1-创建项目引入依赖"><span><strong>7.1 创建项目引入依赖</strong></span></a></h3><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;com.101tec&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;zkclient&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;0.10&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-2-获取-zookeeper-客户端对象" tabindex="-1"><a class="header-anchor" href="#_7-2-获取-zookeeper-客户端对象"><span><strong>7.2 获取 ZooKeeper 客户端对象</strong></span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ZkClient</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 获取zk客户端连接</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Before</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Before</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 参数1：服务器的ip和端口</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 参数2：会话的超时时间</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 参数3：回话的连接时间</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 参数4：序列化方式</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    zkClient </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ZkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;192.168.28.132:2181&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 30000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 60000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> SerializableSerializer</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">())</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 关闭资源</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">After</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> after</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(){</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">close</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-3-常用-api" tabindex="-1"><a class="header-anchor" href="#_7-3-常用-api"><span><strong>7.3 常用 API</strong></span></a></h3><ul><li>创建节点</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 创建节点</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> testCreateNode</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //第一中创建方式  返回创建节点的名称</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> nodeName </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/node5&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lisi&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">CreateMode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">PERSISTENT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/node6&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;zhangsan&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">CreateMode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">PERSISTENT_SEQUENTIAL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/node7&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;王五&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">CreateMode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">EPHEMERAL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">create</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/node8&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;xiaozhang&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">CreateMode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">EPHEMERAL_SEQUENTIAL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //第二种创建方式 不会返回创建节点的名称</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createPersistent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/node1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;持久数据&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createPersistentSequential</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/node1/aa&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;持久数据顺序节点&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createEphemeral</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/node2&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;临时节点&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createEphemeralSequential</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/node1/bb&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;临时顺序节点&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>删除节点</li></ul><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span> /**</span></span>
<span class="line"><span> * 删除节点</span></span>
<span class="line"><span> */</span></span>
<span class="line"><span>@Test</span></span>
<span class="line"><span>public void testDeleteNode() {</span></span>
<span class="line"><span>    // 删除没有子节点的节点  返回值：是否删除成功</span></span>
<span class="line"><span>    boolean delete = zkClient.delete(&quot;/node1&quot;);</span></span>
<span class="line"><span>    // 递归删除节点信息 返回值：是否删除成功</span></span>
<span class="line"><span>    boolean recursive = zkClient.deleteRecursive(&quot;/node1&quot;);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看节点的子节点</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 查询节点</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> testFindNodes</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 获取指定路径的节点信息  </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 返回值：为当前节点的子节点信息</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> children </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getChildren</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> child </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> children) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(child);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看当前节点的数据</li></ul><blockquote><p>注意：如果出现：<code>org.I0Itec.zkclient.exception.ZkMarshallingError: java.io.StreamCorruptedException: invalid stream header: 61616161</code>. 异常的原因是：在 Shell 中的数据序列化方式和 Java 代码中使用的序列化方式不一致，因此要解决这个问题只需要<strong>保证序列化一致</strong>即可。</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 获取节点的数据</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> testFindNodeData</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    Object</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> readData </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">readData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/node3&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(readData);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看当前节点的数据并获取状态信息</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 获取数据以及当前节点的状态信息</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> testFindNodeDataAndStat</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    Stat</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> stat </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Stat</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    Object</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> readData </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">readData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/node60000000024&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, stat);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(readData);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(stat);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改节点数据</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 修改节点数据</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> testUpdateNodeData</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">writeData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/node60000000024&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> User</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;121&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;xxx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>监听节点数据的变化</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 监听节点数据的变化</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> testOnNodeDataChange</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">() throws IOException {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">subscribeDataChanges</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/node60000000024&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> IZkDataListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 当节点的值在修改时,会自动调用这个方法  将当前修改节点的名字,和节点变化之后的数据传递给方法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> handleDataChange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> nodeName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Object</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(nodeName);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(result);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 当节点的值被删除的时候,会自动调用这个方法,会将节点的名字已参数形式传递给方法</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> handleDataDeleted</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> nodename</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;节点的名字：&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nodename);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    });</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //阻塞客户端</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>监听节点目录的变化</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * 监听节点的变化</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> testOnNodesChange</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">() throws IOException {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    zkClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">subscribeChildChanges</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/node60000000024&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> IZkChildListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 当节点的发生变化时,会自动调用这个方法</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 参数1：父节点名称</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 参数2：父节点中的所有子节点名称</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> handleChildChange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> nodeName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;父节点名称：&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nodeName);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;发生变更后字节孩子节点名称：&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> list) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(name);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    });</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 阻塞客户端</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_8-zookeeper-的集群" tabindex="-1"><a class="header-anchor" href="#_8-zookeeper-的集群"><span>8. ZooKeeper 的集群</span></a></h2><h3 id="_8-1-集群-cluster" tabindex="-1"><a class="header-anchor" href="#_8-1-集群-cluster"><span>8.1 集群(Cluster)</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 1.集群(Cluster)</span></span>
<span class="line"><span>- 集合同一种软件服务的多个节点同时提供服务</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 2.集群解决问题</span></span>
<span class="line"><span>-  单节点的并发访问的压力问题</span></span>
<span class="line"><span>-  单节点故障问题(如硬件老化、自然灾害等)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-2-集群架构" tabindex="-1"><a class="header-anchor" href="#_8-2-集群架构"><span>8.2 集群架构</span></a></h3><figure><img src="`+k+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_8-3-集群搭建" tabindex="-1"><a class="header-anchor" href="#_8-3-集群搭建"><span>8.3 集群搭建</span></a></h3><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" data-title="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">创建三个 </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dataDir</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">mkdir</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> zkdata1</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> zkdata2</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> zkdata3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">分别在三个dataDir目录下面myid文件</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">touch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ./</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zkdata1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">myid</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    myid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 的内容是 服务器的  表示  </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">在 /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 目录下创建三个 </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ZooKeeper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 配置文件，分别为 </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zoo1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cfg、</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zoo2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cfg、</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zoo3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cfg	</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-	</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zoo1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cfg</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    tickTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2000</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    initLimit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    syncLimit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    dataDir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">root</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zkdata1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    clientPort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3001</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.1=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10.15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.0.5:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3002</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3003</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.2=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10.15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.0.5:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4002</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4003</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.3=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10.15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.0.5:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5002</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5003</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zoo2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cfg</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    tickTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2000</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    initLimit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    syncLimit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    dataDir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">root</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zkdata2</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    clientPort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4001</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.1=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10.15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.0.5:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3002</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3003</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.2=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10.15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.0.5:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4002</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4003</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.3=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10.15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.0.5:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5002</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5003</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zoo3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cfg</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    tickTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2000</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    initLimit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    syncLimit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    dataDir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">root</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zkdata3</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    clientPort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5001</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.1=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10.15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.0.5:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3002</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3003</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.2=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10.15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.0.5:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4002</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4003</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.3=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10.15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.0.5:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5002</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5003</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">解释：</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    1.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">server.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">X</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">x为服务器的唯一标识</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">。</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    2.192</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.168.0.220: 服务器所在的ip地址</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    3.3002</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: 数据同步使用的端口号</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    4.3003</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: 选举使用的端口号</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">分别启动各个 </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ZooKeeper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 服务器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- ./</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zkServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.sh </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">usr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zookeeper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zoo1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cfg </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- ./</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zkServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.sh </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">usr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zookeeper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zoo2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cfg </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- ./</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zkServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.sh </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">usr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zookeeper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zoo3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cfg</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">查看各个 </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ZooKeeper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 服务器的角色信息</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- ./</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zkServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.sh </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">usr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zookeeper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zoo1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cfg</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">客户端连接任意 </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ZooKeeper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 服务器进行节点操作</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- ./</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zkCli</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.sh -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">server</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 192.168</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.0.220:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3001</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">7.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">停止特定 </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ZooKeeper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 服务器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- ./</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zkServer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.sh </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">stop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">usr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zookeeper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">zoo1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cfg</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,86)]))}const c=i(p,[["render",d],["__file","index.html.vue"]]),B=JSON.parse('{"path":"/bigdata/zookeeper/","title":"Zookeeper基础","lang":"zh-CN","frontmatter":{"title":"Zookeeper基础","author":"RJMeteor","createTime":"2024/11/08 04:41:42","permalink":"/bigdata/zookeeper/"},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"1. ZooKeeper 简介","slug":"_1-zookeeper-简介","link":"#_1-zookeeper-简介","children":[]},{"level":2,"title":"2. Zookeeper数据结构","slug":"_2-zookeeper数据结构","link":"#_2-zookeeper数据结构","children":[]},{"level":2,"title":"3. 命名空间（Namespace）","slug":"_3-命名空间-namespace","link":"#_3-命名空间-namespace","children":[]},{"level":2,"title":"4. ZNode（数据节点)","slug":"_4-znode-数据节点","link":"#_4-znode-数据节点","children":[{"level":3,"title":"4.1 节点类型","slug":"_4-1-节点类型","link":"#_4-1-节点类型","children":[]}]},{"level":2,"title":"5. Watch（监视器）","slug":"_5-watch-监视器","link":"#_5-watch-监视器","children":[{"level":3,"title":"5.1 类型与触发条件","slug":"_5-1-类型与触发条件","link":"#_5-1-类型与触发条件","children":[]},{"level":3,"title":"5.2 设置 Watch","slug":"_5-2-设置-watch","link":"#_5-2-设置-watch","children":[]},{"level":3,"title":"5.3 事件通知与处理","slug":"_5-3-事件通知与处理","link":"#_5-3-事件通知与处理","children":[]},{"level":3,"title":"5.4 注意事项","slug":"_5-4-注意事项","link":"#_5-4-注意事项","children":[]},{"level":3,"title":"5.5 实现节点监听机制","slug":"_5-5-实现节点监听机制","link":"#_5-5-实现节点监听机制","children":[]}]},{"level":2,"title":"5. 安装","slug":"_5-安装","link":"#_5-安装","children":[{"level":3,"title":"5.1 Linux 系统安装","slug":"_5-1-linux-系统安装","link":"#_5-1-linux-系统安装","children":[]},{"level":3,"title":"5.2 Docker 安装 ZooKeeper","slug":"_5-2-docker-安装-zookeeper","link":"#_5-2-docker-安装-zookeeper","children":[]}]},{"level":2,"title":"6. 客户端基本指令","slug":"_6-客户端基本指令","link":"#_6-客户端基本指令","children":[]},{"level":2,"title":"7. Java 操作 ZooKeeper","slug":"_7-java-操作-zookeeper","link":"#_7-java-操作-zookeeper","children":[{"level":3,"title":"7.1 创建项目引入依赖","slug":"_7-1-创建项目引入依赖","link":"#_7-1-创建项目引入依赖","children":[]},{"level":3,"title":"7.2 获取 ZooKeeper 客户端对象","slug":"_7-2-获取-zookeeper-客户端对象","link":"#_7-2-获取-zookeeper-客户端对象","children":[]},{"level":3,"title":"7.3 常用 API","slug":"_7-3-常用-api","link":"#_7-3-常用-api","children":[]}]},{"level":2,"title":"8. ZooKeeper 的集群","slug":"_8-zookeeper-的集群","link":"#_8-zookeeper-的集群","children":[{"level":3,"title":"8.1 集群(Cluster)","slug":"_8-1-集群-cluster","link":"#_8-1-集群-cluster","children":[]},{"level":3,"title":"8.2 集群架构","slug":"_8-2-集群架构","link":"#_8-2-集群架构","children":[]},{"level":3,"title":"8.3 集群搭建","slug":"_8-3-集群搭建","link":"#_8-3-集群搭建","children":[]}]}],"git":{"createdTime":1734527070000,"updatedTime":1734527070000,"contributors":[{"name":"RJMeteor","email":"3029364473@qq.com","commits":1}]},"readingTime":{"minutes":14.64,"words":4393},"filePathRelative":"pages/bigdata/Zookeeper/Zookeeper基础.md","localizedDate":"2024年12月18日","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>Zookeeper是一个开源的分布式协调服务，最初由Apache软件基金会开发。它主要用于管理大型分布式系统中的配置、同步和命名服务。Zookeeper提供了一种简单的框架，使得分布式应用能够实现各种协调任务，比如：</p>\\n<ol>\\n<li><strong>配置管理</strong>：集中管理分布式应用中各个节点的配置信息。</li>\\n<li><strong>命名服务</strong>：为分布式系统中的各种资源提供唯一的命名。</li>\\n<li><strong>分布式锁</strong>：允许多个进程之间进行同步，避免资源冲突。</li>\\n<li><strong>集群管理</strong>：监控节点的状态，维护服务的可用性。</li>\\n</ol>\\n<p>Zookeeper使用一种类似于文件系统的结构来存储数据，数据被组织在一个类似树的层次结构中，应用程序可以通过Zookeeper的API进行读写操作。</p>\\n<p>由于其高可用性、易于扩展和可靠性，Zookeeper广泛应用于大规模分布式系统中，如Hadoop、Kafka等。</p>\\n</div>"}');export{c as comp,B as data};
