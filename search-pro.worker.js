const{entries:V}=Object,{fromEntries:et}=Object,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":107,\"nextId\":107,\"documentIds\":{\"0\":\"1\",\"1\":\"1#学习书籍\",\"2\":\"1#面试书籍\",\"3\":\"2\",\"4\":\"2#免密提交和拉取代码\",\"5\":\"3\",\"6\":\"3#xsd\",\"7\":\"3#实战案例\",\"8\":\"3#spring-源码\",\"9\":\"3#java\",\"10\":\"3#基础\",\"11\":\"3#juc\",\"12\":\"3#optional\",\"13\":\"3#设计模式\",\"14\":\"3#面试\",\"15\":\"3#maven\",\"16\":\"3#java工具\",\"17\":\"3#mysql\",\"18\":\"3#spring\",\"19\":\"3#log4j-日志框架\",\"20\":\"3#mybatis\",\"21\":\"3#redis\",\"22\":\"3#nginx\",\"23\":\"3#canel-数据同步\",\"24\":\"3#rabbitmq-消息队列\",\"25\":\"3#minio-资源存储\",\"26\":\"3#elasticsearch-搜索引擎\",\"27\":\"3#shiro-权限认证\",\"28\":\"3#activiti-审批流程\",\"29\":\"4\",\"30\":\"4#其他\",\"31\":\"4#javascript\",\"32\":\"4#npm\",\"33\":\"4#eslint\",\"34\":\"4#vue\",\"35\":\"4#react\",\"36\":\"4#ui-组件库\",\"37\":\"4#vue3\",\"38\":\"4#react-1\",\"39\":\"4#uni-app\",\"40\":\"4#工具库-npm\",\"41\":\"4#资源\",\"42\":\"4#typescript\",\"43\":\"4#构建工具\",\"44\":\"4#跨平台\",\"45\":\"4#部署\",\"46\":\"5\",\"47\":\"5#英语\",\"48\":\"5#算法\",\"49\":\"5#大模型\",\"50\":\"5#ui设计\",\"51\":\"5#工具\",\"52\":\"5#浏览器插件\",\"53\":\"5#其他\",\"54\":\"5#博客\",\"55\":\"5#前端\",\"56\":\"5#视频网站\",\"57\":\"5#git远程仓库\",\"58\":\"5#部署\",\"59\":\"5#docker\",\"60\":\"5#linux\",\"61\":\"5#项目\",\"62\":\"5#论文下载\",\"63\":\"5#变现\",\"64\":\"25\",\"65\":\"25#基本概念\",\"66\":\"25#应用程序的生命周期\",\"67\":\"25#基本ui组件\",\"68\":\"25#布局管理\",\"69\":\"25#事件处理\",\"70\":\"25#样式和皮肤\",\"71\":\"25#动画和过渡效果\",\"72\":\"25#多媒体支持\",\"73\":\"25#集成和部署\",\"74\":\"26\",\"75\":\"27\",\"76\":\"27#flowpane\",\"77\":\"27#‌hbox\",\"78\":\"27#‌-‌vbox-‌\",\"79\":\"27#‌-‌anchorpane-‌\",\"80\":\"27#‌-‌gridpane-‌\",\"81\":\"27#borderpane‌\",\"82\":\"27#‌-‌stackpane-‌\",\"83\":\"28\",\"84\":\"28#按钮-button\",\"85\":\"28#标签-label\",\"86\":\"28#文本框-textfield\",\"87\":\"28#文本区域-textarea\",\"88\":\"28#复选框-checkbox\",\"89\":\"28#单选按钮-radiobutton\",\"90\":\"28#切换按钮-togglebutton\",\"91\":\"28#滑块-slider\",\"92\":\"28#进度条-progressbar\",\"93\":\"28#滚动条-scrollbar\",\"94\":\"28#列表视图-listview\",\"95\":\"28#表视图-tableview\",\"96\":\"28#树视图-treeview\",\"97\":\"28#文件对话框-filechooser\",\"98\":\"29\",\"99\":\"29#fxml布局文件的使用\",\"100\":\"29#scene-builder里构建fxml布局文件\",\"101\":\"29#controller里的initialize方法\",\"102\":\"29#在application里操作controller\",\"103\":\"46\",\"104\":\"47\",\"105\":\"48\",\"106\":\"49\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,21],\"2\":[1,13],\"3\":[1],\"4\":[1,28],\"5\":[1],\"6\":[1,24],\"7\":[1,40],\"8\":[2,71],\"9\":[1,8],\"10\":[1,23],\"11\":[1,22],\"12\":[1,5],\"13\":[1,4],\"14\":[1,38],\"15\":[1,2],\"16\":[1,19],\"17\":[1,9],\"18\":[1,6],\"19\":[2,1],\"20\":[1,3],\"21\":[1,6],\"22\":[1,4],\"23\":[2,1],\"24\":[2,27],\"25\":[2,8],\"26\":[2,7],\"27\":[2,30],\"28\":[2,52],\"29\":[1],\"30\":[1,7],\"31\":[1,7],\"32\":[1,11],\"33\":[1,14],\"34\":[1,11],\"35\":[1,51],\"36\":[2],\"37\":[1,16],\"38\":[1,17],\"39\":[2,9],\"40\":[1,105],\"41\":[1,13],\"42\":[1,24],\"43\":[1],\"44\":[1,2],\"45\":[1,6],\"46\":[1],\"47\":[1,1],\"48\":[1,6],\"49\":[1,5],\"50\":[1,13],\"51\":[1,98],\"52\":[1,7],\"53\":[1,5],\"54\":[1,7],\"55\":[1,2],\"56\":[1,4],\"57\":[1,20],\"58\":[1,8],\"59\":[1,20],\"60\":[1,13],\"61\":[1,18],\"62\":[1,1],\"63\":[1,6],\"64\":[1,2],\"65\":[1,38],\"66\":[1,13],\"67\":[1,40],\"68\":[1,16],\"69\":[1,14],\"70\":[1,11],\"71\":[1,17],\"72\":[1,10],\"73\":[1,19],\"74\":[1,29],\"75\":[1],\"76\":[1,90],\"77\":[1,72],\"78\":[2,3],\"79\":[2,75],\"80\":[2,91],\"81\":[1,124],\"82\":[2,80],\"83\":[1],\"84\":[3,2],\"85\":[3,2],\"86\":[3,2],\"87\":[3,2],\"88\":[3,2],\"89\":[3,2],\"90\":[3,2],\"91\":[3,2],\"92\":[3,2],\"93\":[3,2],\"94\":[3,2],\"95\":[3,2],\"96\":[3,2],\"97\":[3,1],\"98\":[1,11],\"99\":[1,129],\"100\":[2,7],\"101\":[1,131],\"102\":[1,106],\"103\":[1,3],\"104\":[1],\"105\":[1],\"106\":[1]},\"averageFieldLength\":[1.4018691588785048,22.061963033003114],\"storedFields\":{\"0\":{\"h\":\"GitHub\"},\"1\":{\"h\":\"学习书籍\",\"t\":[\" 算法 \",\" 图解HTTP \",\" 深入理解Java虚拟机：JVM高级特性与最佳实践 \",\" 深入浅出MySQL++数据库开发优化与管理维护 \",\" Redis设计与实现 \",\" Spring源码深度解析 \",\" 看透 SpringMVC 源代码分析与实践 \",\" Spring Boot技术内幕架：构设计与实现原理 \",\" Elasticsearch技术解析与实战 \",\" Kafka并不难学！入门、进阶、商业实战 \",\" 深入理解Spring Cloud与微服务构建 \"]},\"2\":{\"h\":\"面试书籍\",\"t\":[\" Java面试常见问题总结（2024最新版） \",\" JVM之问 \",\" 字节大佬总结的Java面试资料 \",\" Redis 阅读笔记 \",\" 2024年Java程序员找工作场景题 \",\" 12万字java面经总结 \",\" 咕泡教育80万字大厂面试真题深度解析 \",\" BATJ2023面试题汇总及详解(进大厂必看)(65页) \"]},\"3\":{\"h\":\"GitHub\"},\"4\":{\"h\":\"\",\"t\":[\"windows/linux 生成密钥对\",\"ssh-keygen -t rsa -C \\\"your_email@example.com\\\"\",\"your_email@example.com为注册github账号（可选）、rsa为加密算法\",\"找到.ssh下的公钥文件id_rsa.pub复制里面的内容。\",\"登录github账号，进入设置面板，添加SSH授权\",\"用SSH地址拉去代码\",\"git clone git@github.com:RJMeteor/handwriting_rpc.git\"]},\"5\":{\"h\":\"GitHub\"},\"6\":{\"h\":\"XSD\",\"t\":[\"XML Schema 参考手册 (w3school.com.cn)\",\"XSD语法解析 - 简书 (jianshu.com)\",\"XSD 文件学习_xsd sequence-CSDN博客\",\"XML之命名空间的作用(xmlns)_xml namespace作用-CSDN博客\",\"XML中的xmlns、xmlns:xsi和xsi:sechemaLoacation的具体含义是什么？ - 知乎 (zhihu.com)\"]},\"7\":{\"h\":\"实战案例\",\"t\":[\"【二十】springboot整合ElasticSearch实战（万字篇）_springboot集成elasticsearch-CSDN博客\",\"【二十四】springboot整合spring事务详解以及实战_springboot实现事务-CSDN博客\",\"Redisson的基本使用 - wq9 - 博客园 (cnblogs.com)\",\"Spring Boot 整合多 Redis 数据源配置及操作_springboot redis多数据源-CSDN博客\",\"【限流】从0开始实现常见的四种限流算法，基于Redis结合AOP实现【固定窗口】、【滑动窗口】、【令牌桶算法】、【漏桶算法】_aop redis滑动时间窗口算法-CSDN博客\",\"基于SpringBoot+Redis实现查找附近用户的功能_redis new circle()-CSDN博客\",\"【二十六】springboot整合jedis和redisson布隆过滤器处理缓存穿透_springboot redisson-CSDN博客\",\"Redis经典问题：缓存击穿 (baidu.com)\"]},\"8\":{\"h\":\"Spring 源码\",\"t\":[\"Vip-Augus/spring-analysis-note: 学习 spring 5 源码分析笔记 (github.com)\",\"wuyouzhuguli/SpringAll: 循序渐进，学习Spring Boot、Spring Boot & Shiro、Spring Batch、Spring Cloud、Spring Cloud Alibaba、Spring Security & Spring Security OAuth2，博客Spring系列源码：https://mrbird.cc (github.com)\",\"coderbruis/JavaSourceCodeLearning: Java流行框架源码分析：Spring源码、SpringBoot源码、SpringAOP源码、SpringSecurity源码、SpringSecurity OAuth2源码、JDK源码、Netty源码 (github.com)\",\"[forezp/SpringCloudLearning: 《史上最简单的Spring Cloud教程源码》 (github.com)](https://github.com/search?q=spring 源码&type=repositories)\",\"spring事务：一文搞通Spring事务的七种传播机制（通俗易懂）_Java-CSDN专栏\",\"REQUIRED：如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。\",\"REQUIRES_NEW：创建一个新的事务,如果当前存在事务,则把当前事务挂起。\",\"SUPPORTS：如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行。\",\"NOT_SUPPORTED：以非事务方式运行，如果当前存在事务，则把当前事务挂起。\",\"MANDATORY：如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常。\",\"NEVER：以非事务方式运行，如果当前存在事务，则抛出异常。\",\"NESTED：：如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于REQUIRED。\"]},\"9\":{\"h\":\"Java\",\"t\":[\"Overview (Java SE 11 & JDK 11 ) (runoob.com)\"]},\"10\":{\"h\":\"基础\",\"t\":[\"Java中的 ＜＜ ， ＞＞ ， 和 ＞＞＞所代表的含义\",\"java精确除法运算（BigDecimal）\",\"java中compareTo()方法使用整理\",\"Java 序列化 之 Serializable\",\"Java函数式编程入门：探索四大函数式接口\",\"Java多线程二： Thread中几个比较重要的方法\",\"Java类加载策略之双亲委派机制全面分析讲解_java_脚本之家 (jb51.net)\",\"Stream流\"]},\"11\":{\"h\":\"JUC\",\"t\":[\"Java多线程：中断机制interrupt以及InterruptedException出现的原因\",\"Java中的juc并发包\",\"Java JUC 笔记(1)\",\"Java JUC 笔记(2)\",\"什么是JUC?\",\"JUC详解\",\"Java处理并发编程工具集合(JUC)详解\",\"线程同步器AQS源码简析/JUC\",\"Java-CAS 原理与 JUC 原子类\",\"深入理解Java中的AQS - 夏末秋涼 - 博客园 (cnblogs.com)\"]},\"12\":{\"h\":\"Optional\",\"t\":[\"理解、学习与使用 JAVA 中的 Optional\"]},\"13\":{\"h\":\"设计模式\",\"t\":[\"免费在线学习代码重构和设计模式\",\"java 23种设计模式 深入理解\"]},\"14\":{\"h\":\"面试\",\"t\":[\"Java学到什么程度可以找工作 - 知乎 (zhihu.com)\",\"小林coding\",\"JavaGuide\",\"CS-Notes 面试笔记\",\"Java 全栈知识体系\",\"方志朋,Java,Spring,Spring Boot,Spring Cloud,Java后端技术 (fangzhipeng.com)https://www.mujicv.com/editor/?id=template-3857ae6041bd6bfehttps://jianli.chinaz.com/editor?mouldId=1https://sky-xl.cn/img-to-pdfhttps://2pdf.com/zh/convert-jpg-to-pdf/\"]},\"15\":{\"h\":\"Maven\",\"t\":[\"Maven\",\"将jar包安装到maven仓库\"]},\"16\":{\"h\":\"Java工具\",\"t\":[\"Hutool\",\"Guava-retrying - 飞书云文档 (feishu.cn)\",\"protobuf: 高性能对象序列化工具\",\"在Java中使用protobuf序列化对象 - 盛夏群岛 - 博客园 (cnblogs.com)\",\"java中使用Protobuf的实例(Demo) - 星朝 - 博客园 (cnblogs.com)\",\"java序列化系列之protobuf (baidu.com)\"]},\"17\":{\"h\":\"MySql\",\"t\":[\"肝了一周，这下彻底把 MySQL的锁搞懂了 - 知乎 (zhihu.com)\",\"MySQL的隔离级别详解_mysql隔离级别-CSDN博客\"]},\"18\":{\"h\":\"Spring\",\"t\":[\"Spring官网\",\"Spring源码编译\",\"设计模式与框架源码 | 理论与实践的完美结合\",\"SpEL表达式总结\"]},\"19\":{\"h\":\"log4j：日志框架\",\"t\":[\"logback配置文件XML详解\"]},\"20\":{\"h\":\"MyBatis\",\"t\":[\"MyBatis教程\",\"MyBatis Puls教程\"]},\"21\":{\"h\":\"Redis\",\"t\":[\"redis的三种集群方案(主从复制、哨兵模式、集群模式) \",\"实现缓存和数据库一致性方案：mysql+canal+rabbitmq+redis\"]},\"22\":{\"h\":\"Nginx\",\"t\":[\"Nginx 基础入门\",\"Lua在Nginx的应用 \",\"nginx中使用lua脚本\"]},\"23\":{\"h\":\"Canel：数据同步\",\"t\":[\"Canal全家桶的安装和配置\"]},\"24\":{\"h\":\"Rabbitmq：消息队列\",\"t\":[\"RabbitMQ核心概念及工作原理\",\"RabbitMQ概念详解\",\"RabbitMQ使用教程\",\"RabbitMQ 之topics (通配符)篇 初学\",\"详解SpringBoot整合RabbitMQ如何实现消息确认\",\"springboot + rabbitmq 消息确认机制（避坑指南）\",\"RabbitMQ手动确认模式(项目开发常用模式)\",\"SpringBoot RabbitMQ死信队列\",\"SpringBoot集成RabbitMQ实现消息重试机制，消息重试3次失败后写入死信队列，消息重试3次失败后入库\",\"SpringBoot 集成 RabbitMq 消费者手动确认消息，失败重试后发送至死信队列\",\"RabbitMQ 如何实现延迟队列？\"]},\"25\":{\"h\":\"minio：资源存储\",\"t\":[\"SpringBoot集成Minio入门教程：示例代码厂库\",\"Minio入门系列【16】Minio分片上传文件putObject接口流程源码分析\",\"Minio分片上传\",\"MinIO 介绍使用\"]},\"26\":{\"h\":\"Elasticsearch：搜索引擎\",\"t\":[\"Easy es\",\"ElasticSearch入门篇（保姆级教程） \",\"采用Canal进行Mysql to ElasticSearch数据同步\"]},\"27\":{\"h\":\"Shiro：权限认证\",\"t\":[\"Shiro (yuque.com)\",\"shiro授权认证原理分析 (yuque.com)\",\"Shiro框架 (yuque.com)\",\"Shiro (yuque.com)\",\"Springboot整合Shiro后对登录session超时自动跳转登录页、异地登录提醒、权限控制的使用 (yuque.com)\",\"理解这9大内置过滤器，才算是精通Shiro - 知乎 (zhihu.com)\",\"一文搞定Shiro - 知乎 (zhihu.com)\",\"Shiro安全框架详解及springboot使用示例-CSDN博客\",\"Shiro超详细学习笔记(附源码)-阿里云开发者社区 (aliyun.com)\",\"Shiro之注解篇_shiro常用注解-CSDN博客\",\"Shiro之并发在线篇_shiro并发请求-CSDN博客\",\"shiro源码全面分析 - 掘金 (juejin.cn)\",\"Shiro 入门到实战_哔哩哔哩_bilibili\"]},\"28\":{\"h\":\"Activiti：审批流程\",\"t\":[\"解决idea2020.3.3版本无法使用actiBPM插件问题-CSDN博客\",\"JetBrains Marketplace\",\"Activiti入门体验 (yuque.com)\",\"认识Activiti (yuque.com)\",\"Activiti 组任务 (cnblogs.com)\",\"Activiti7工作流引擎_activity7下载-CSDN博客\",\"activiti（十）组任务Group_activiti group-CSDN博客\",\"Activiti7并行子流程的使用 - SpringBoot_activiti7在哪里设置collection-CSDN博客\",\"activiti学习之task与execution的关系 - Alfresco技术博客 (alfrescocn.com)\",\"Activiti架构分析及源码详解 - 个人文章 - SegmentFault 思否\",\"【完整版】2021最新工作流引擎Activiti7最全讲解，从基础到进阶_哔哩哔哩_bilibili\",\"类说明：\",\"ExecutionEntity：正在执行的活动信息\",\"Activiti流程引擎 - 知乎 (zhihu.com)\",\"ProcessDefinitionEntity：ProcessDefinitionEntity就是获取xml内容的对象\",\"Activiti5 学习笔记（三）—— 流程元素_processdefinitionentity-CSDN博客\",\"PvmTransition、PvmActivity等\",\"activiti源码学习之pvm篇 (360doc.com)\"]},\"29\":{\"h\":\"GitHub\"},\"30\":{\"h\":\"其他\",\"t\":[\"vue3 + ts + vite 移动端适配_vue3移动端项目尺寸适配-CSDN博客\"]},\"31\":{\"h\":\"JavaScript\",\"t\":[\"MDN\",\"现代 JavaScript 教程\",\"ECMAScript 6 入门\"]},\"32\":{\"h\":\"npm\",\"t\":[\"npx和npm的区别 - 大熊丨rapper - 博客园 (cnblogs.com)\",\"npx详细使用 - 简书 (jianshu.com)\",\"Yarn (yarnpkg.com)\"]},\"33\":{\"h\":\"EsLint\",\"t\":[\"前端代码规范工具ESLint和Prettier_prettier官网-CSDN博客\",\"ESLint 中文网 (nodejs.cn)\",\"一文了解VsCode、Eslint、Prettier、Husky相关配置 - 掘金 (juejin.cn)\"]},\"34\":{\"h\":\"Vue\",\"t\":[\"Vite官网\",\"Vue官网\",\"VSCode开发 Vue3 建议必备的插件_vscode vue3插件-CSDN博客\",\"Vue3配置tailwindcss并在vscode中智能提示_vscode vue css提示-CSDN博客\"]},\"35\":{\"h\":\"react\",\"t\":[\"快速入门 – React 中文文档 (docschina.org)\",\"Hook API 索引 – React (xiniushu.com)\",\"React Router 使用教程 - 阮一峰的网络日志 (ruanyifeng.com)\",\"Feature Overview v6.25.1 | React Router\",\"解决vscode开发react项目没有代码提示问题 - 琴时 - 博客园 (cnblogs.com)\",\"vite+react项目配置 tailwind css 不生效_react tailwind css 不生效-CSDN博客\",\"react开发者必备vscode插件【2024最新】_vscode react插件-CSDN博客\",\"2分钟学会react-router（v6版） - 个人文章 - SegmentFault 思否\",\"React Router 中文文档（v5 ） - 掘金 (juejin.cn)\",\"React 之 Router - 路由详解_react-router-CSDN博客\",\"React项目-路由配置_react项目路由配置-CSDN博客\",\"关于useNavigate及useLocation的使用_usenavigation-CSDN博客\"]},\"36\":{\"h\":\"UI 组件库\"},\"37\":{\"h\":\"vue3\",\"t\":[\"Naive UI\",\"daisy UI \",\"Tdesign\",\"Tuniao UI_UniApp\",\"面向 Vue3 的 Material 风格移动端组件库 (varlet-varletjs.vercel.app)\"]},\"38\":{\"h\":\"react\",\"t\":[\"组件总览 - Ant Design (antgroup.com)\",\"Lucide 反应 |琉璃酮 --- Lucide React | Lucide(图标库)\",\"🚀🚀🚀 量大管饱，一次性推荐20个React组件库！！-阿里云开发者社区 (aliyun.com)\"]},\"39\":{\"h\":\"Uni App\",\"t\":[\"[uview 对标Vue2(https://v1.uviewui.com/)\",\"uview Plus 对标Vue3\"]},\"40\":{\"h\":\"\",\"t\":[\"Editor.js (editorjs.io)\",\"配置 - Tailwind CSS 中文网 (nodejs.cn)\",\"TailwindCSS_页面布局\",\"Hover.css_移入动画\",\"Magic CSS3 一款独特的CSS3动画特效包\",\"Animate.css 一款强大的预设css3动画库\",\"Pinia\",\"其他：\",\"Pinia使用指南\",\"Vue-Router\",\"其他:\",\"vue-router中的param跟query的区别\",\"vue2进阶篇：vue-router之路由的query参数(https://blog.csdn.net/a924382407/article/details/125682536)\",\"vue2进阶篇：vue-router之路由的params参数\",\"VueUse\",\"Day.js\",\"Echarts\",\"nprogress 进度条使用 \",\"看板娘\",\"Vditor 一款浏览器端的 Markdown 编辑器，支持所见即所得（富文本）、即时渲染（类似 Typora）和分屏预览模式。\",\"vue3 预览照片的插件 v-viewer：npm地址\",\"GSAP-强大的js动画库\",\"其他：\",\"GSAP从入门到精通\",\"GSAP（GreenSock）：最健全的web动画库之一\",\"Driver.js是一个轻量级的Javascript类库，可用于产品导览、亮点、上下文帮助等，从而一步一步地导览用户快速熟悉产品功能。\",\"Vue-Default-Page一个 Vue 3.0 自定义指令包插件，内置 v-loading，v-skeleton，v-skeleton-avatar，v-skeleton-list，v-error，v-empty 等指令，专注解决网络请求时等待、回显和报错等场景\",\"Timeagejs格式化日期时间。例如：3小时前\",\"filesizejs让文件大小变成人类可读的字符串，例如：256KB\",\"highlight.js (highlightjs.org)代码高亮\",\"Highlight.JS — color theme, language brush, and customization (tiddlyhost.com)\"]},\"41\":{\"h\":\"资源\",\"t\":[\"首页 - FontAwesome 字体图标中文Icon\",\"RemixIcon_GIT图标库-官网\",\"有字库\",\"Liblib\",\"Emoji大全 | Emoji表情符号词典 📓 | EmojiAll中文官方网站\"]},\"42\":{\"h\":\"TypeScript\",\"t\":[\"TypeScript官网\",\"一文盘点Typescript中23个内置类型工具! (建议收藏) - 知乎 (zhihu.com)\",\"TS之keyof,typeof,in,extends的用法 - 知乎 (zhihu.com)\",\"TypeScript的值类型-unknow 、any、void、never区别及场景 - PerfectLi - 博客园 (cnblogs.com)\",\"ts在项目中的使用-三斜线引入 与 import区别 - 吃个石头 - 博客园 (cnblogs.com)\"]},\"43\":{\"h\":\"构建工具\"},\"44\":{\"h\":\"跨平台\",\"t\":[\"UniApp\",\"Tauri\"]},\"45\":{\"h\":\"部署\",\"t\":[\"vercel\",\"vercel是什么神仙网站？ - 知乎 (zhihu.com)\"]},\"46\":{\"h\":\"GitHub\"},\"47\":{\"h\":\"英语\",\"t\":[\"在线网页免费学英语\"]},\"48\":{\"h\":\"算法\",\"t\":[\"Hello 算法 (hello-algo.com)\"]},\"49\":{\"h\":\"大模型\",\"t\":[\"Docker+Ollama+WebUI+AnythingLLM，构建企业本地AI大模型_anythingllm docker-CSDN博客\"]},\"50\":{\"h\":\"UI设计\",\"t\":[\"UI大师 - 节省80%的设计时间\",\"搜索-UICN用户体验设计平台\",\"优设网官网 - UISDC - 国内专业设计师平台 - 看设计文章，学AIGC教程，找灵感素材，尽在优设网！\"]},\"51\":{\"h\":\"工具\",\"t\":[\"GitHub加速器\",\"uTools官网 - 新一代效率工具平台\",\"Cloudflare | Web Performance & Security\",\"智谱AI开放平台 (aminer.cn)\",\"WindTerm SSH工具\",\"LocalSend将文件共享到附近的设备。免费、开源、跨平台\",\"Apifox API 设计、开发、测试一体化协作平台\",\"SQLyog - Download (softonic.com) 数据库工具\",\"draw.io 画图软件\",\"RedisInsight - The Best Redis GUI 连接Redis\",\"Office\",\"Office Tool Plus | 一键部署 Office\",\"在线PS\",\"notepad 文本编辑器\",\"Send and Transfer Large Files Online - Free up to 2GB\",\"Typora1.4.8保姆式安装教程，超详细；附安装包_typora安装教程-CSDN博客\",\"Jmeter压测工具详解_jemeter-CSDN博客\",\"瓦特工具箱(Steam++官网) - Watt Toolkit【GitHub加速器】 (steampp.net)\",\"webstorm2023.3.4安装_webstorm-2023.3.4-CSDN博客\",\"idea彻底卸载安装及配置笔记_idea卸载干净并重新安装-CSDN博客\",\"IDEA激活教程（任意版本2024）激活至2099年（激活工具免费分享）_哔哩哔哩_bilibili\",\"JProfiler 11 安装与破解 - 哑吧 - 博客园 (cnblogs.com)\",\"【JVM 监控工具】性能诊断--JProfiler的使用-CSDN博客\",\"EcoPaste: 🎉跨平台的剪贴板管理工具 | Cross-platform clipboard management tool\"]},\"52\":{\"h\":\"浏览器插件\",\"t\":[\"edge 浏览器扩展在线安装 | nbtab新标签页\",\"FeHelper(前端助手)-Web开发者常用工具集\"]},\"53\":{\"h\":\"其他\",\"t\":[\"电脑任务栏卡死是什么原因 电脑下方的任务栏没反应怎么办 (baidu.com)\"]},\"54\":{\"h\":\"博客\",\"t\":[\"OSCHINA - 中文开源技术交流社区\",\"语雀，为每一个人提供优秀的文档和知识库工具\",\"稀土掘金\",\"博客园\",\"编程导航\"]},\"55\":{\"h\":\"前端\",\"t\":[\"JavaScript 框架语法特性对比\"]},\"56\":{\"h\":\"视频网站\",\"t\":[\"哔哩哔哩 (゜-゜)つロ 干杯\"]},\"57\":{\"h\":\"Git远程仓库\",\"t\":[\"在线网页练习Git\",\"适合初学者的简单 Git 教程与您的团队一起开始使用 Git 进行版本控制\",\"GitLab\",\"其他:\",\"GitLab 内置了一个非常强大的 CI/CD 功能\",\"GitLab CICD - 使用 SSH 连接服务器\",\"GitLab CI/CD：使用docker镜像部署前端项目\",\"GitLab CI/CD：使用SSH keys将项目部署到远程服务器\",\"GitHub\",\"Gitee\"]},\"58\":{\"h\":\"部署\",\"t\":[\"Q云\",\"雨云\",\"微信云托管 (qq.com)\",\"阿里云\",\"腾讯云\",\"七牛云\"]},\"59\":{\"h\":\"Docker\",\"t\":[\"Windows安装Docker\",\"Docker Desktop汉化\",\"DockerHub\",\"Docker — 从入门到实践\",\"Docker命令大全\",\"Docker最全讲解\",\"编写Dockerfile\",\"Docker 容器编排利器 Docker Compose\",\"Linux安装最新版本Docker-Compose - 哔哩哔哩 (bilibili.com)\",\"docker-compose教程（安装，使用, 快速入门）\"]},\"60\":{\"h\":\"Linux\",\"t\":[\"Linux就该这么学\",\"网道 - 互联网开发文档 \",\"查看 Linux 系统服务的 5 大方法 - 良许Linux - 博客园 (cnblogs.com)\"]},\"61\":{\"h\":\"项目\",\"t\":[\"文档协作工具 - OnlyOffice\",\"参考项目地址：onlyofficeDemo: onlyoffice 案例 (gitee.com)\",\"视频讲解：\",\"代码沙箱\",\"参考项目地址：sspuoj_code_sandbox: 编程题目的代码沙箱代码，集成了Java安全管理器、Docker等安保技术 (gitee.com)\",\"视频讲解:瞧！多语言代码沙箱的设计与实现~\"]},\"62\":{\"h\":\"论文下载\",\"t\":[\"知网论文下载\"]},\"63\":{\"h\":\"变现\",\"t\":[\"文字转语音 - 在线配音工具 - 免费在线工具\",\"模力视频-AI剪辑\",\"66影视解说网\"]},\"64\":{\"h\":\"基础\",\"t\":[\"学习博客\",\"学习视频\"]},\"65\":{\"h\":\"基本概念\",\"t\":[\"应用程序一次只能显示一个Scene\",\"场景（Scene）：JavaFX 应用程序的主要容器，用于存放和管理所有的 UI 组件。\",\"所有视觉组件（控件、布局等）都必须附加到要显示的场景，并且该场景必须附加到舞台才能使整个场景可见。附加到场景的所有控件、布局等的总对象图称为场景图。\",\"节点（Node）：JavaFX 应用程序的基本构建块，如按钮、标签、文本框等。\",\"布局容器（Layout Container）：用于组织和管理节点的容器，如 HBox、VBox、GridPane 等。\",\"应用程序（Application）：JavaFX 应用程序的入口类，需要继承 javafx.application.Application 类。\"]},\"66\":{\"h\":\"应用程序的生命周期\",\"t\":[\"初始化（init）：在应用程序启动之前执行的方法，用于初始化资源。\",\"启动（start）：应用程序的主入口方法，用于创建场景和显示主窗口。\",\"停止（stop）：在应用程序关闭时执行的方法，用于释放资源。\"]},\"67\":{\"h\":\"基本UI组件\",\"t\":[\"按钮（Button）：用于触发特定操作的组件。\",\"标签（Label）：用于显示文本的组件。\",\"文本框（TextField）：用于输入单行文本的组件。\",\"文本区域（TextArea）：用于输入多行文本的组件。\",\"复选框（CheckBox）：用于表示选中或未选中状态的组件。\",\"单选按钮（RadioButton）：用于在多个选项中选择一个的组件。\",\"切换按钮（ToggleButton）：用于在选中和未选中状态之间切换的组件。\",\"滑块（Slider）：用于选择范围内的数值的组件。\",\"进度条（ProgressBar）：用于显示进度的组件。\",\"滚动条（ScrollBar）：用于在大量内容中导航的组件。\",\"列表视图（ListView）：用于显示列表形式的数据的组件。\",\"表视图（TableView）：用于显示表格形式的数据的组件。\",\"树视图（TreeView）：用于显示层次结构数据的组件。\"]},\"68\":{\"h\":\"布局管理\",\"t\":[\"布局容器（Layout Container）：用于组织和管理节点的容器，如 HBox、VBox、GridPane、BorderPane、FlowPane、TilePane 等。\",\"布局约束（Layout Constraints）：用于控制节点在布局容器中的位置和大小的属性。\"]},\"69\":{\"h\":\"事件处理\",\"t\":[\"事件（Event）：用户与 UI 组件交互产生的动作，如鼠标点击、键盘输入等。\",\"事件处理器（Event Handler）：用于响应事件的方法或对象。\",\"事件过滤器（Event Filter）：用于在事件到达事件处理器之前对事件进行处理的方法或对象。\",\"JavaFx应用里的事件驱动编程\"]},\"70\":{\"h\":\"样式和皮肤\",\"t\":[\"CSS（层叠样式表）：用于定义 JavaFX 应用程序的外观和样式的语言。\",\"皮肤（Skin）：用于自定义 UI 组件外观的类。\"]},\"71\":{\"h\":\"动画和过渡效果\",\"t\":[\"动画（Animation）：用于创建动态效果的类，如 Timeline、Transition、AnimationTimer 等。\",\"过渡效果（Transition Effect）：用于在 UI 组件之间创建过渡效果的类，如 FadeTransition、ScaleTransition、RotateTransition 等。\"]},\"72\":{\"h\":\"多媒体支持\",\"t\":[\"图像（Image）：用于加载和显示图像的类。\",\"音频（Audio）：用于播放音频文件的类。\",\"视频（Video）：用于播放视频文件的类。\"]},\"73\":{\"h\":\"集成和部署\",\"t\":[\"JavaFX 与 Swing 集成：可以在 Swing 应用程序中使用 JavaFX 组件。\",\"JavaFX 与 Web 集成：可以在 Web 页面中使用 JavaFX 应用程序。\",\"JavaFX 应用程序的打包和部署：可以将 JavaFX 应用程序打包为 JAR、EXE、DMG 等格式，以便在不同平台上运行。\"]},\"74\":{\"h\":\"开始工作\",\"t\":[\"安装jdk18版本（默认jdk18集成了JavaFX）\",\"启动创建Java普通项目\",\"import javafx.application.Application; import javafx.stage.Stage; public class Main extends Application { public static void main(String[] args) { //启动JavaFx应用程序 launch(args); } @Override public void init() throws Exception { super.init(); } @Override public void start(Stage primaryStage) throws Exception { } @Override public void stop() throws Exception { super.stop(); } }\"]},\"75\":{\"h\":\"布局容器\"},\"76\":{\"h\":\"\",\"t\":[\"FlowPane是一个容器，它在一行上排列连续的子组件，如果当前行填满了，则自动将子组件向下推到新的一行。\",\"效果图\",\"import javafx.application.Application; import javafx.geometry.Insets; import javafx.scene.Scene; import javafx.scene.control.Button; import javafx.scene.control.CheckBox; import javafx.scene.control.RadioButton; import javafx.scene.control.TextField; import javafx.scene.layout.FlowPane; import javafx.stage.Stage; public class Main extends Application { public static void main(String[] args) { //启动JavaFx应用程序 launch(args); } @Override public void init() throws Exception { super.init(); } @Override public void start(Stage primaryStage) throws Exception { FlowPane root = new FlowPane(); //设置垂直方向每个元素的相隔距离 root.setHgap(10); //设置水平方向每个元素的相隔距离 root.setVgap(20); // 四个方向的内边距 root.setPadding(new Insets(15,15,15,15)); Button button2 = new Button(\\\"Button2\\\"); // 设置元素的大小 button2.setPrefSize(100, 100); // 添加到布局容器中 root.getChildren().add(button2); TextField textField = new TextField(\\\"Text Field\\\"); // 设置元素宽度 textField.setPrefWidth(110); root.getChildren().add(textField); // 多选按钮 CheckBox checkBox = new CheckBox(\\\"Check Box\\\"); root.getChildren().add(checkBox); // 单选按钮 RadioButton radioButton = new RadioButton(\\\"Radio Button\\\"); root.getChildren().add(radioButton); // 布局容器管理 Scene scene = new Scene(root, 550, 250); //设置窗口标题 primaryStage.setTitle(\\\"FlowPane Layout Demo\\\"); // 将布局容器管理添加到窗口中 primaryStage.setScene(scene); primaryStage.setWidth(800d); primaryStage.setHeight(500d); // 显示窗口 primaryStage.show(); } @Override public void stop() throws Exception { super.stop(); } }\"]},\"77\":{\"h\":\"\",\"t\":[\"水平布局容器，用于水平排列子节点。\",\"import javafx.application.Application; import javafx.geometry.Insets; import javafx.scene.Scene; import javafx.scene.control.Button; import javafx.scene.control.CheckBox; import javafx.scene.control.RadioButton; import javafx.scene.control.TextField; import javafx.scene.layout.FlowPane; import javafx.scene.layout.HBox; import javafx.scene.layout.Priority; import javafx.scene.paint.Color; import javafx.scene.shape.Rectangle; import javafx.stage.Stage; public class Main extends Application { public static void main(String[] args) { //启动JavaFx应用程序 launch(args); } @Override public void init() throws Exception { super.init(); } @Override public void start(Stage primaryStage) throws Exception { //HBox内部控件之间的间隔 （hbox.setSpacing(25);） HBox hbox = new HBox(25); hbox.setPadding(new Insets(1)); TextField myTextField = new TextField(); hbox.getChildren().add(myTextField); // 给容器内某个元素单独设置随父节点水平增长 HBox.setHgrow(myTextField, Priority.ALWAYS); //矩形块 Rectangle r1 = new Rectangle(10, 10); // 给容器内某个元素单独设置外边距 HBox.setMargin(r1, new Insets(2, 2, 2, 2)); hbox.getChildren().addAll(r1); Scene scene = new Scene(hbox, 320, 112, Color.rgb(0, 0, 0, 0)); primaryStage.setScene(scene); primaryStage.show(); } @Override public void stop() throws Exception { super.stop(); } }\"]},\"78\":{\"h\":\"**‌\",\"t\":[\"垂直布局容器，用于垂直排列子节点。\"]},\"79\":{\"h\":\"**‌\",\"t\":[\"锚定布局容器，可以同时使用多个锚点来定位一个子节点，通常与其他布局一起使用。\",\"和Pane不同的是AnchorPane可以设置子节点的相对位置，并且能改变子节点大小\",\"import javafx.application.Application; import javafx.scene.Scene; import javafx.scene.control.Button; import javafx.scene.layout.AnchorPane; import javafx.scene.paint.Color; import javafx.stage.Stage; public class Main extends Application { public static void main(String[] args) { //启动JavaFx应用程序 launch(args); } @Override public void init() throws Exception { super.init(); } @Override public void start(Stage primaryStage) throws Exception { AnchorPane anchorPane=new AnchorPane(); //设置容器大小 anchorPane.setPrefSize(300, 300); //设置容器样式 anchorPane.setStyle(\\\"-fx-background-color:#1E90FF;\\\"); Button button=new Button(\\\"button\\\"); // 添加，默认添加于（0,0）处，多个将重叠在一起。 anchorPane.getChildren().add(button); // 设置容器中的元素的相对位置 anchorPane.setTopAnchor(button, 50.0); // 添加到渲染类中 Scene scene = new Scene(anchorPane, 320, 112, Color.rgb(0, 0, 0, 0)); // 把渲染类添加到窗口中 primaryStage.setScene(scene); primaryStage.setHeight(500d); primaryStage.setWidth(800d); primaryStage.show(); } @Override public void stop() throws Exception { super.stop(); } }\"]},\"80\":{\"h\":\"**‌\",\"t\":[\"网格布局容器，用于在网格中排列子节点\",\"import javafx.application.Application; import javafx.geometry.HPos; import javafx.geometry.Insets; import javafx.geometry.Pos; import javafx.scene.Scene; import javafx.scene.control.Button; import javafx.scene.control.Label; import javafx.scene.control.TextField; import javafx.scene.layout.AnchorPane; import javafx.scene.layout.GridPane; import javafx.scene.paint.Color; import javafx.stage.Stage; public class Main extends Application { public static void main(String[] args) { //启动JavaFx应用程序 launch(args); } @Override public void init() throws Exception { super.init(); } @Override public void start(Stage primaryStage) throws Exception { GridPane pane = new GridPane(); //设置对齐 pane.setAlignment(Pos.BASELINE_CENTER); //设置上右下左的内边距 pane.setPadding(new Insets(12,13,14,15)); // 显示单元格调试 pane.setGridLinesVisible(true); pane.setHgap(10); pane.setVgap(10); //将节点放入pane 0行0列 中 pane.add(new Label(\\\"First name:\\\"), 0, 0); pane.add(new TextField(), 1,0); Label mi = new Label(\\\"MI:\\\"); pane.add(new Label(\\\"MI:\\\"), 0,1); //控件在单元格的对齐方式 GridPane.setHalignment(mi, HPos.RIGHT); pane.add(new TextField(), 1,1); pane.add(new Label(\\\"Last name:\\\"), 0,2); pane.add(new TextField(), 1,2); Button add=new Button(\\\"Add name\\\"); pane.add(add, 1,3); GridPane.setHalignment(add, HPos.RIGHT); // 添加到渲染类中 Scene scene = new Scene(pane, 320, 112, Color.rgb(0, 0, 0, 0)); // 把渲染类添加到窗口中 primaryStage.setScene(scene); primaryStage.setHeight(500d); primaryStage.setWidth(800d); primaryStage.show(); } @Override public void stop() throws Exception { super.stop(); } }\"]},\"81\":{\"h\":\"‌\",\"t\":[\"边框布局容器，用于将界面分为上、下、左、右和中心五个区域。\",\"import javafx.application.Application; import javafx.geometry.HPos; import javafx.geometry.Insets; import javafx.geometry.Orientation; import javafx.geometry.Pos; import javafx.scene.Scene; import javafx.scene.control.*; import javafx.scene.layout.AnchorPane; import javafx.scene.layout.BorderPane; import javafx.scene.layout.FlowPane; import javafx.scene.layout.GridPane; import javafx.scene.paint.Color; import javafx.stage.Stage; public class Main extends Application { public static void main(String[] args) { //启动JavaFx应用程序 launch(args); } @Override public void init() throws Exception { super.init(); } @Override public void start(Stage primaryStage) throws Exception { BorderPane pane = new BorderPane(); // top MenuBar menuBar = new MenuBar(); menuBar.setStyle(\\\"-fx-background-color: pink;\\\"); Menu file = new Menu(\\\"文件\\\"); file.getItems().add(new Menu(\\\"新建\\\")); file.getItems().add(new Menu(\\\"打开\\\")); menuBar.getMenus().add(file); menuBar.getMenus().add(new Menu(\\\"编辑\\\")); pane.setTop(menuBar); // center TabPane tabPane = new TabPane(); tabPane.setStyle(\\\"-fx-background-color: blue;\\\"); Tab tab1 = new Tab(\\\"Untitled Tab 1\\\"); tab1.setContent(new FlowPane()); tabPane.getTabs().add(tab1); Tab tab2 = new Tab(\\\"Untitled Tab 2\\\"); tab2.setContent(new FlowPane()); tabPane.getTabs().add(tab2); pane.setCenter(tabPane); // bottom FlowPane flowPaneBottom = new FlowPane(); flowPaneBottom.setStyle(\\\"-fx-background-color: red;\\\"); flowPaneBottom.setAlignment(Pos.CENTER); flowPaneBottom.getChildren().add(new Label(\\\"底部数据\\\")); pane.setBottom(flowPaneBottom); // left TreeItem<String> root = new TreeItem<String>(\\\"root\\\"); root.getChildren().add(new TreeItem<String>(\\\"一级目录\\\")); root.getChildren().add(new TreeItem<String>(\\\"二级目录\\\")); root.getChildren().add(new TreeItem<String>(\\\"三级目录\\\")); TreeView<String> treeView = new TreeView<String>(root); treeView.setPrefWidth(100); pane.setLeft(treeView); // right FlowPane flowPaneRight = new FlowPane(); flowPaneRight.setStyle(\\\"-fx-background-color: green;\\\"); flowPaneRight.setOrientation(Orientation.VERTICAL); flowPaneRight.setAlignment(Pos.CENTER); flowPaneRight.getChildren().add(new Button(\\\"操作1\\\")); flowPaneRight.getChildren().add(new Button(\\\"操作2\\\")); flowPaneRight.getChildren().add(new Button(\\\"操作3\\\")); flowPaneRight.getChildren().add(new Button(\\\"操作4\\\")); flowPaneRight.getChildren().add(new Button(\\\"操作5\\\")); pane.setRight(flowPaneRight); // 添加到渲染类中 Scene scene = new Scene(pane, 320, 112, Color.rgb(0, 0, 0, 0)); // 把渲染类添加到窗口中 primaryStage.setScene(scene); primaryStage.setHeight(500d); primaryStage.setWidth(800d); primaryStage.show(); } @Override public void stop() throws Exception { super.stop(); } }\"]},\"82\":{\"h\":\"**‌\",\"t\":[\"堆叠布局容器，用于将子节点堆叠在一起，并可以控制哪个节点在上\",\"import javafx.application.Application; import javafx.geometry.Insets; import javafx.geometry.Pos; import javafx.scene.Scene; import javafx.scene.control.Button; import javafx.scene.layout.StackPane; import javafx.scene.paint.Color; import javafx.scene.shape.Circle; import javafx.scene.shape.Rectangle; import javafx.stage.Stage; public class Main extends Application { public static void main(String[] args) { //启动JavaFx应用程序 launch(args); } @Override public void init() throws Exception { super.init(); } @Override public void start(Stage primaryStage) throws Exception { // 创建StackPane StackPane stackPane = new StackPane(); // 对齐方式 stackPane.setAlignment(Pos.CENTER); // 内边距 stackPane.setPadding(new Insets(10, 10, 10, 10)); // 圆形 Circle circle = new Circle(100, Color.RED); // 矩形 Rectangle rectangle = new Rectangle(120, 100, Color.BLUE); // 按钮 Button button = new Button(\\\"Button 1\\\"); // 添加子节点，后者覆盖前面 stackPane.getChildren().addAll(circle, rectangle, button); // 添加到渲染类中 Scene scene = new Scene(stackPane, 320, 112, Color.rgb(0, 0, 0, 0)); // 把渲染类添加到窗口中 primaryStage.setScene(scene); primaryStage.setHeight(500d); primaryStage.setWidth(800d); primaryStage.show(); } @Override public void stop() throws Exception { super.stop(); } }\"]},\"83\":{\"h\":\"UI组件\"},\"84\":{\"h\":\"按钮（Button）：\",\"t\":[\"用于触发特定操作的组件。\"]},\"85\":{\"h\":\"标签（Label）：\",\"t\":[\"用于显示文本的组件。\"]},\"86\":{\"h\":\"文本框（TextField）：\",\"t\":[\"用于输入单行文本的组件。\"]},\"87\":{\"h\":\"文本区域（TextArea）：\",\"t\":[\"用于输入多行文本的组件。\"]},\"88\":{\"h\":\"复选框（CheckBox）：\",\"t\":[\"用于表示选中或未选中状态的组件。\"]},\"89\":{\"h\":\"单选按钮（RadioButton）：\",\"t\":[\"用于在多个选项中选择一个的组件。\"]},\"90\":{\"h\":\"切换按钮（ToggleButton）：\",\"t\":[\"用于在选中和未选中状态之间切换的组件。\"]},\"91\":{\"h\":\"滑块（Slider）：\",\"t\":[\"用于选择范围内的数值的组件。\"]},\"92\":{\"h\":\"进度条（ProgressBar）：\",\"t\":[\"用于显示进度的组件。\"]},\"93\":{\"h\":\"滚动条（ScrollBar）：\",\"t\":[\"用于在大量内容中导航的组件。\"]},\"94\":{\"h\":\"列表视图（ListView）：\",\"t\":[\"用于显示列表形式的数据的组件。\"]},\"95\":{\"h\":\"表视图（TableView）：\",\"t\":[\"用于显示表格形式的数据的组件。\"]},\"96\":{\"h\":\"树视图（TreeView）：\",\"t\":[\"用于显示层次结构数据的组件。\"]},\"97\":{\"h\":\"文件对话框（FileChooser）：\",\"t\":[\"FileChooser控件表示用户可以从中选择文件的对话窗口\"]},\"98\":{\"h\":\"FXML\",\"t\":[\"FXML是一种可编写的、基于XML的用于构造JavaFX场景图的标记语言。在FXML中，一个FXML标签代表以下类型之一：\",\"某个类的实例\",\"某个类实例的属性\",\"某个静态属性\",\"一个定义代码块\",\"一个脚本代码块\",\"一个FXML属性表示以下类型之一：\",\"某个类实例的属性\",\"某个静态属性\",\"事件处理程序\"]},\"99\":{\"h\":\"FXML布局文件的使用\",\"t\":[\"案例演示：将下面的JavaFx文件代码中的容器、组件和监听事件，改写为FXML文件的格式，简化和方便管理JavaFx类的编写。\",\"public class Main extends Application { public static void main(String[] args) { Application.launch(args); } @Override public void start(Stage primaryStage) throws Exception { AnchorPane root = new AnchorPane(); Scene scene = new Scene(root, 500, 500); Label label = new Label(\\\"按键盘↓向下移动\\\"); label.setLayoutX(100); label.setLayoutY(150); label.setFont(new Font(30)); Button button = new Button(\\\"点击按钮向上移动\\\"); button.setLayoutX(350); button.setLayoutY(200); button.setOnAction(new EventHandler<ActionEvent>() { @Override public void handle(ActionEvent event) { label.setLayoutY(label.getLayoutY() - 5); } }); scene.setOnKeyReleased(new EventHandler<KeyEvent>() { @Override public void handle(KeyEvent event) { KeyCode keyCode = event.getCode(); if (keyCode.equals(KeyCode.DOWN)) { label.setLayoutY(label.getLayoutY() + 5); } } }); root.getChildren().addAll(label, button); primaryStage.setScene(scene); primaryStage.show(); } }\",\"改写为FXML：\",\"public class Demo extends Application { public static void main(String[] args) { Application.launch(args); } @Override public void start(Stage primaryStage) throws Exception { // 使用FXMLLoader类的load方法来加载FXML文件，并将其与Controller类进行关联。 Pane root = FXMLLoader.load(getClass().getClassLoader().getResource(\\\"com/aizen/javafx/fxml/demo.fxml\\\")); Pane root = FXMLLoader.load(getClass().getResource(\\\"demo.fxml\\\")); Scene scene = new Scene(root, 500, 500); primaryStage.setScene(scene); primaryStage.show(); } } public class DemoController { @FXML Label la; @FXML Button bu; public void handleButtonAction() { la.setLayoutY(la.getLayoutY() - 5); } public void handleKeyReleased(KeyEvent event) { KeyCode keyCode = event.getCode(); if (keyCode.equals(KeyCode.DOWN)) { la.setLayoutY(la.getLayoutY() + 5); } } }\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <?import java.lang.*?> <?import java.util.*?> <?import javafx.scene.*?> <?import javafx.scene.control.*?> <?import javafx.scene.layout.*?> <?import javafx.scene.text.Font?> <AnchorPane xmlns=\\\"http://javafx.com/javafx\\\" xmlns:fx=\\\"http://javafx.com/fxml\\\" fx:controller=\\\"com.aizen.javafx.fxml.DemoController\\\" onKeyReleased=\\\"#handleKeyReleased\\\" prefHeight=\\\"400.0\\\" prefWidth=\\\"600.0\\\"> <children> <Label fx:id=\\\"la\\\" text=\\\"按键盘↓向下移动\\\" layoutX=\\\"100\\\" layoutY=\\\"150\\\"> <font> <Font size=\\\"30\\\"/> </font> </Label> <Button fx:id=\\\"bu\\\" text=\\\"点击按钮向上移动\\\" layoutX=\\\"350\\\" layoutY=\\\"200\\\" onAction=\\\"#handleButtonAction\\\"/> </children> </AnchorPane>\"]},\"100\":{\"h\":\"Scene Builder里构建fxml布局文件\",\"t\":[\"官方下载链接：https://openjfx.cn/scene-builder/\"]},\"101\":{\"h\":\"Controller里的initialize方法\",\"t\":[\"有时我们是无法在fxml文件里填充数据的，并且有些内容需要初始化时就填充（如表格），而不是触发事件后填充，此时就可以使用initialize方法，做一些初始化的工作。\",\"initialize()方法需要自定义，定义完之后会自动调用，该方法调用的时机是加载好fxml文件，并绑定好控件id之后，才会自动调用一次。\",\"需要注意的是在initialize()方法中是无法访问Scene场景的。\",\"演示案例：使用initialize()方法初始化时填充完TableView的数据。\",\"public class Main extends Application { public static void main(String[] args) { Application.launch(args); } @Override public void start(Stage primaryStage) throws Exception { Pane root = FXMLLoader.load(getClass().getResource(\\\"hello.fxml\\\")); primaryStage.setScene(new Scene(root)); primaryStage.show(); } } public class Person { private String name; private int age; public Person(String name, int age) { this.name = name; this.age = age; } public String getName() { return name; } public void setName(String name) { this.name = name; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } } public class Controller { @FXML private TableView<Person> tableView; @FXML private TableColumn<Person, String> name; @FXML private TableColumn<Person, Integer> age; public void initialize() { ObservableList<Person> cellDate = FXCollections.observableArrayList(); name.setCellValueFactory(new PropertyValueFactory<Person, String>(\\\"name\\\")); age.setCellValueFactory(new PropertyValueFactory<Person, Integer>(\\\"age\\\")); cellDate.add(new Person(\\\"张三\\\", 18)); cellDate.add(new Person(\\\"李四\\\", 19)); cellDate.add(new Person(\\\"王五\\\", 23)); cellDate.add(new Person(\\\"赵六\\\", 15)); tableView.setItems(cellDate); } }\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <?import javafx.scene.control.TableColumn?> <?import javafx.scene.control.TableView?> <?import javafx.scene.layout.AnchorPane?> <AnchorPane fx:controller=\\\"com.aizen.javafx.fxml_02.Controller\\\" maxHeight=\\\"-Infinity\\\" maxWidth=\\\"-Infinity\\\" minHeight=\\\"-Infinity\\\" minWidth=\\\"-Infinity\\\" prefHeight=\\\"400.0\\\" prefWidth=\\\"600.0\\\" xmlns=\\\"http://javafx.com/javafx/8.0.171\\\" xmlns:fx=\\\"http://javafx.com/fxml/1\\\"> <children> <TableView fx:id=\\\"tableView\\\" prefHeight=\\\"400.0\\\" prefWidth=\\\"600.0\\\"> <columns> <TableColumn fx:id=\\\"name\\\" prefWidth=\\\"75.0\\\" text=\\\"name\\\" /> <TableColumn fx:id=\\\"age\\\" prefWidth=\\\"75.0\\\" text=\\\"age\\\" /> </columns> </TableView> </children> </AnchorPane>\",\"效果图：\"]},\"102\":{\"h\":\"在Application里操作Controller\",\"t\":[\"案例演示：和之前圆的案例一样，要求圆的中心点自适应边框大小，使用fxml实现。\",\"public class JavaFxApplication extends Application { public static void main(String[] args) { launch(args); } @Override public void start(Stage primaryStage) throws IOException { FXMLLoader fxmlLoader = new FXMLLoader(); // 使用FXMLLoader获取布局里面的Controller的引用 fxmlLoader.setLocation(getClass().getResource(\\\"hello.fxml\\\")); Parent root = fxmlLoader.load(); Scene scene = new Scene(root); // 在Application中操作Controller进行属性绑定 Controller controller = fxmlLoader.getController(); controller.circleLocationBind(scene); primaryStage.setScene(scene); primaryStage.show(); } } public class Controller { @FXML private Circle ci; public void circleLocationBind(Scene scene) { // 获得X和Y中心点的可绑定对象，设置中心点自适应边框大小 ci.centerXProperty().bind(scene.widthProperty().divide(2)); ci.centerYProperty().bind(scene.heightProperty().divide(2)); } }\",\" <?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <?import javafx.scene.layout.AnchorPane?> <?import javafx.scene.shape.Circle?> <AnchorPane fx:controller=\\\"com.aizen.javafx.fxml_03.Controller\\\" maxHeight=\\\"-Infinity\\\" maxWidth=\\\"-Infinity\\\" minHeight=\\\"-Infinity\\\" minWidth=\\\"-Infinity\\\" prefHeight=\\\"488.0\\\" prefWidth=\\\"496.0\\\" xmlns=\\\"http://javafx.com/javafx/8.0.171\\\" xmlns:fx=\\\"http://javafx.com/fxml/1\\\"> <children> <Circle fx:id=\\\"ci\\\" centerX=\\\"250.0\\\" centerY=\\\"250.0\\\" fill=\\\"DODGERBLUE\\\" radius=\\\"100.0\\\" stroke=\\\"BLACK\\\" strokeType=\\\"INSIDE\\\" /> </children> </AnchorPane>\"]},\"103\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"104\":{\"h\":\"Others\"},\"105\":{\"h\":\"Basic\"},\"106\":{\"h\":\"Java\"}},\"dirtCount\":0,\"index\":[[\"获得x和y中心点的可绑定对象\",{\"1\":{\"102\":1}}],[\"要求圆的中心点自适应边框大小\",{\"1\":{\"102\":1}}],[\"75\",{\"1\":{\"101\":2}}],[\"赵六\",{\"1\":{\"101\":1}}],[\"王五\",{\"1\":{\"101\":1}}],[\"李四\",{\"1\":{\"101\":1}}],[\"张三\",{\"1\":{\"101\":1}}],[\"演示案例\",{\"1\":{\"101\":1}}],[\"需要注意的是在initialize\",{\"1\":{\"101\":1}}],[\"需要继承\",{\"1\":{\"65\":1}}],[\"才会自动调用一次\",{\"1\":{\"101\":1}}],[\"才算是精通shiro\",{\"1\":{\"27\":1}}],[\"该方法调用的时机是加载好fxml文件\",{\"1\":{\"101\":1}}],[\"定义完之后会自动调用\",{\"1\":{\"101\":1}}],[\"做一些初始化的工作\",{\"1\":{\"101\":1}}],[\"此时就可以使用initialize方法\",{\"1\":{\"101\":1}}],[\"而不是触发事件后填充\",{\"1\":{\"101\":1}}],[\"有时我们是无法在fxml文件里填充数据的\",{\"1\":{\"101\":1}}],[\"有字库\",{\"1\":{\"41\":1}}],[\"官方下载链接\",{\"1\":{\"100\":1}}],[\"官网\",{\"1\":{\"41\":1}}],[\">\",{\"1\":{\"99\":11,\"101\":8,\"102\":5}}],[\"<tablecolumn\",{\"1\":{\"101\":2}}],[\"<tableview\",{\"1\":{\"101\":1}}],[\"<circle\",{\"1\":{\"102\":1}}],[\"<columns>\",{\"1\":{\"101\":1}}],[\"<children>\",{\"1\":{\"99\":1,\"101\":1,\"102\":1}}],[\"<button\",{\"1\":{\"99\":1}}],[\"<font\",{\"1\":{\"99\":1}}],[\"<font>\",{\"1\":{\"99\":1}}],[\"<label\",{\"1\":{\"99\":1}}],[\"<anchorpane\",{\"1\":{\"99\":1,\"101\":1,\"102\":1}}],[\"<\",{\"1\":{\"99\":11,\"101\":8,\"102\":5}}],[\"改写为fxml\",{\"1\":{\"99\":1}}],[\"改写为fxml文件的格式\",{\"1\":{\"99\":1}}],[\"点击按钮向上移动\",{\"1\":{\"99\":2}}],[\"按键盘↓向下移动\",{\"1\":{\"99\":2}}],[\"按钮\",{\"0\":{\"84\":1},\"1\":{\"67\":1,\"82\":1}}],[\"简化和方便管理javafx类的编写\",{\"1\":{\"99\":1}}],[\"简书\",{\"1\":{\"6\":1,\"32\":1}}],[\"某个静态属性\",{\"1\":{\"98\":2}}],[\"某个类实例的属性\",{\"1\":{\"98\":2}}],[\"某个类的实例\",{\"1\":{\"98\":1}}],[\"后者覆盖前面\",{\"1\":{\"82\":1}}],[\"矩形\",{\"1\":{\"82\":1}}],[\"矩形块\",{\"1\":{\"77\":1}}],[\"圆形\",{\"1\":{\"82\":1}}],[\"内边距\",{\"1\":{\"82\":1}}],[\"内置了一个非常强大的\",{\"1\":{\"57\":1}}],[\"内置\",{\"1\":{\"40\":1}}],[\"对齐方式\",{\"1\":{\"82\":1}}],[\"对标vue3\",{\"1\":{\"39\":1}}],[\"对标vue2\",{\"1\":{\"39\":1}}],[\"创建stackpane\",{\"1\":{\"82\":1}}],[\"创建一个新的事务\",{\"1\":{\"8\":1}}],[\"并绑定好控件id之后\",{\"1\":{\"101\":1}}],[\"并将其与controller类进行关联\",{\"1\":{\"99\":1}}],[\"并可以控制哪个节点在上\",{\"1\":{\"82\":1}}],[\"并且有些内容需要初始化时就填充\",{\"1\":{\"101\":1}}],[\"并且能改变子节点大小\",{\"1\":{\"79\":1}}],[\"并且该场景必须附加到舞台才能使整个场景可见\",{\"1\":{\"65\":1}}],[\"堆叠布局容器\",{\"1\":{\"82\":1}}],[\"操作5\",{\"1\":{\"81\":1}}],[\"操作4\",{\"1\":{\"81\":1}}],[\"操作3\",{\"1\":{\"81\":1}}],[\"操作2\",{\"1\":{\"81\":1}}],[\"操作1\",{\"1\":{\"81\":1}}],[\"二级目录\",{\"1\":{\"81\":1}}],[\"二十六\",{\"1\":{\"7\":1}}],[\"二十四\",{\"1\":{\"7\":1}}],[\"二十\",{\"1\":{\"7\":1}}],[\"底部数据\",{\"1\":{\"81\":1}}],[\"打开\",{\"1\":{\"81\":1}}],[\"新建\",{\"1\":{\"81\":1}}],[\"新一代效率工具平台\",{\"1\":{\"51\":1}}],[\"右和中心五个区域\",{\"1\":{\"81\":1}}],[\"左\",{\"1\":{\"81\":1}}],[\"下\",{\"1\":{\"81\":1}}],[\"边框布局容器\",{\"1\":{\"81\":1}}],[\"显示单元格调试\",{\"1\":{\"80\":1}}],[\"显示窗口\",{\"1\":{\"76\":1}}],[\"网格布局容器\",{\"1\":{\"80\":1}}],[\"网道\",{\"1\":{\"60\":1}}],[\"把渲染类添加到窗口中\",{\"1\":{\"79\":1,\"80\":1,\"81\":1,\"82\":1}}],[\"处\",{\"1\":{\"79\":1}}],[\"默认添加于\",{\"1\":{\"79\":1}}],[\"默认jdk18集成了javafx\",{\"1\":{\"74\":1}}],[\"锚定布局容器\",{\"1\":{\"79\":1}}],[\"垂直布局容器\",{\"1\":{\"78\":1}}],[\"‌\",{\"0\":{\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1}}],[\"给容器内某个元素单独设置外边距\",{\"1\":{\"77\":1}}],[\"给容器内某个元素单独设置随父节点水平增长\",{\"1\":{\"77\":1}}],[\"水平布局容器\",{\"1\":{\"77\":1}}],[\"8\",{\"1\":{\"99\":1,\"101\":2,\"102\":2}}],[\"800d\",{\"1\":{\"76\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1}}],[\"8保姆式安装教程\",{\"1\":{\"51\":1}}],[\"将下面的javafx文件代码中的容器\",{\"1\":{\"99\":1}}],[\"将节点放入pane\",{\"1\":{\"80\":1}}],[\"将布局容器管理添加到窗口中\",{\"1\":{\"76\":1}}],[\"将jar包安装到maven仓库\",{\"1\":{\"15\":1}}],[\"添加子节点\",{\"1\":{\"82\":1}}],[\"添加到渲染类中\",{\"1\":{\"79\":1,\"80\":1,\"81\":1,\"82\":1}}],[\"添加到布局容器中\",{\"1\":{\"76\":1}}],[\"添加\",{\"1\":{\"79\":1}}],[\"添加ssh授权\",{\"1\":{\"4\":1}}],[\"四个方向的内边距\",{\"1\":{\"76\":1}}],[\"设置中心点自适应边框大小\",{\"1\":{\"102\":1}}],[\"设置上右下左的内边距\",{\"1\":{\"80\":1}}],[\"设置对齐\",{\"1\":{\"80\":1}}],[\"设置容器中的元素的相对位置\",{\"1\":{\"79\":1}}],[\"设置容器样式\",{\"1\":{\"79\":1}}],[\"设置容器大小\",{\"1\":{\"79\":1}}],[\"设置窗口标题\",{\"1\":{\"76\":1}}],[\"设置元素宽度\",{\"1\":{\"76\":1}}],[\"设置元素的大小\",{\"1\":{\"76\":1}}],[\"设置水平方向每个元素的相隔距离\",{\"1\":{\"76\":1}}],[\"设置垂直方向每个元素的相隔距离\",{\"1\":{\"76\":1}}],[\"设计\",{\"1\":{\"51\":1}}],[\"设计模式与框架源码\",{\"1\":{\"18\":1}}],[\"设计模式\",{\"0\":{\"13\":1}}],[\"=\",{\"1\":{\"76\":6,\"77\":4,\"79\":1,\"80\":3,\"81\":11,\"82\":5,\"99\":9,\"101\":6,\"102\":4}}],[\"效果图\",{\"1\":{\"76\":1,\"101\":1}}],[\"它在一行上排列连续的子组件\",{\"1\":{\"76\":1}}],[\"以便在不同平台上运行\",{\"1\":{\"73\":1}}],[\"以非事务方式运行\",{\"1\":{\"8\":2}}],[\"页面中使用\",{\"1\":{\"73\":1}}],[\"页面布局\",{\"1\":{\"40\":1}}],[\"音频\",{\"1\":{\"72\":1}}],[\"多个将重叠在一起\",{\"1\":{\"79\":1}}],[\"多选按钮\",{\"1\":{\"76\":1}}],[\"多媒体支持\",{\"0\":{\"72\":1}}],[\"多语言代码沙箱的设计与实现~\",{\"1\":{\"61\":1}}],[\"过渡效果\",{\"1\":{\"71\":1}}],[\"动画\",{\"1\":{\"71\":1}}],[\"动画和过渡效果\",{\"0\":{\"71\":1}}],[\"皮肤\",{\"1\":{\"70\":1}}],[\"层叠样式表\",{\"1\":{\"70\":1}}],[\"样式和皮肤\",{\"0\":{\"70\":1}}],[\"键盘输入等\",{\"1\":{\"69\":1}}],[\"事件过滤器\",{\"1\":{\"69\":1}}],[\"事件\",{\"1\":{\"69\":1}}],[\"事件处理程序\",{\"1\":{\"98\":1}}],[\"事件处理器\",{\"1\":{\"69\":1}}],[\"事件处理\",{\"0\":{\"69\":1}}],[\"树视图\",{\"0\":{\"96\":1},\"1\":{\"67\":1}}],[\"表视图\",{\"0\":{\"95\":1},\"1\":{\"67\":1}}],[\"列表视图\",{\"0\":{\"94\":1},\"1\":{\"67\":1}}],[\"滚动条\",{\"0\":{\"93\":1},\"1\":{\"67\":1}}],[\"滑块\",{\"0\":{\"91\":1},\"1\":{\"67\":1}}],[\"滑动窗口\",{\"1\":{\"7\":1}}],[\"切换按钮\",{\"0\":{\"90\":1},\"1\":{\"67\":1}}],[\"单选按钮\",{\"0\":{\"89\":1},\"1\":{\"67\":1,\"76\":1}}],[\"复选框\",{\"0\":{\"88\":1},\"1\":{\"67\":1}}],[\"停止\",{\"1\":{\"66\":1}}],[\"启动javafx应用程序\",{\"1\":{\"74\":1,\"76\":1,\"77\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1}}],[\"启动创建java普通项目\",{\"1\":{\"74\":1}}],[\"启动\",{\"1\":{\"66\":1}}],[\"初始化\",{\"1\":{\"66\":1}}],[\"初学\",{\"1\":{\"24\":1}}],[\"等格式\",{\"1\":{\"73\":1}}],[\"等\",{\"1\":{\"65\":1,\"68\":1,\"71\":2}}],[\"等指令\",{\"1\":{\"40\":1}}],[\"布局约束\",{\"1\":{\"68\":1}}],[\"布局管理\",{\"0\":{\"68\":1}}],[\"布局容器管理\",{\"1\":{\"76\":1}}],[\"布局容器\",{\"0\":{\"75\":1},\"1\":{\"65\":1,\"68\":1}}],[\"布局等的总对象图称为场景图\",{\"1\":{\"65\":1}}],[\"布局等\",{\"1\":{\"65\":1}}],[\"标签\",{\"0\":{\"85\":1},\"1\":{\"65\":1,\"67\":1}}],[\"节点\",{\"1\":{\"65\":1}}],[\"节省80\",{\"1\":{\"50\":1}}],[\"都必须附加到要显示的场景\",{\"1\":{\"65\":1}}],[\"控件在单元格的对齐方式\",{\"1\":{\"80\":1}}],[\"控件\",{\"1\":{\"65\":1}}],[\"所有视觉组件\",{\"1\":{\"65\":1}}],[\"用户与\",{\"1\":{\"69\":1}}],[\"用于将子节点堆叠在一起\",{\"1\":{\"82\":1}}],[\"用于将界面分为上\",{\"1\":{\"81\":1}}],[\"用于垂直排列子节点\",{\"1\":{\"78\":1}}],[\"用于水平排列子节点\",{\"1\":{\"77\":1}}],[\"用于播放视频文件的类\",{\"1\":{\"72\":1}}],[\"用于播放音频文件的类\",{\"1\":{\"72\":1}}],[\"用于加载和显示图像的类\",{\"1\":{\"72\":1}}],[\"用于创建动态效果的类\",{\"1\":{\"71\":1}}],[\"用于创建场景和显示主窗口\",{\"1\":{\"66\":1}}],[\"用于自定义\",{\"1\":{\"70\":1}}],[\"用于定义\",{\"1\":{\"70\":1}}],[\"用于响应事件的方法或对象\",{\"1\":{\"69\":1}}],[\"用于控制节点在布局容器中的位置和大小的属性\",{\"1\":{\"68\":1}}],[\"用于显示层次结构数据的组件\",{\"1\":{\"67\":1,\"96\":1}}],[\"用于显示表格形式的数据的组件\",{\"1\":{\"67\":1,\"95\":1}}],[\"用于显示列表形式的数据的组件\",{\"1\":{\"67\":1,\"94\":1}}],[\"用于显示进度的组件\",{\"1\":{\"67\":1,\"92\":1}}],[\"用于显示文本的组件\",{\"1\":{\"67\":1,\"85\":1}}],[\"用于选择范围内的数值的组件\",{\"1\":{\"67\":1,\"91\":1}}],[\"用于在网格中排列子节点\",{\"1\":{\"80\":1}}],[\"用于在\",{\"1\":{\"71\":1}}],[\"用于在事件到达事件处理器之前对事件进行处理的方法或对象\",{\"1\":{\"69\":1}}],[\"用于在大量内容中导航的组件\",{\"1\":{\"67\":1,\"93\":1}}],[\"用于在选中和未选中状态之间切换的组件\",{\"1\":{\"67\":1,\"90\":1}}],[\"用于在多个选项中选择一个的组件\",{\"1\":{\"67\":1,\"89\":1}}],[\"用于表示选中或未选中状态的组件\",{\"1\":{\"67\":1,\"88\":1}}],[\"用于输入多行文本的组件\",{\"1\":{\"67\":1,\"87\":1}}],[\"用于输入单行文本的组件\",{\"1\":{\"67\":1,\"86\":1}}],[\"用于触发特定操作的组件\",{\"1\":{\"67\":1,\"84\":1}}],[\"用于释放资源\",{\"1\":{\"66\":1}}],[\"用于初始化资源\",{\"1\":{\"66\":1}}],[\"用于组织和管理节点的容器\",{\"1\":{\"65\":1,\"68\":1}}],[\"用于存放和管理所有的\",{\"1\":{\"65\":1}}],[\"用ssh地址拉去代码\",{\"1\":{\"4\":1}}],[\"应用程序打包为\",{\"1\":{\"73\":1}}],[\"应用程序中使用\",{\"1\":{\"73\":1}}],[\"应用程序\",{\"1\":{\"65\":1,\"73\":1}}],[\"应用程序的打包和部署\",{\"1\":{\"73\":1}}],[\"应用程序的外观和样式的语言\",{\"1\":{\"70\":1}}],[\"应用程序的主入口方法\",{\"1\":{\"66\":1}}],[\"应用程序的主要容器\",{\"1\":{\"65\":1}}],[\"应用程序的生命周期\",{\"0\":{\"66\":1}}],[\"应用程序的入口类\",{\"1\":{\"65\":1}}],[\"应用程序的基本构建块\",{\"1\":{\"65\":1}}],[\"应用程序一次只能显示一个scene\",{\"1\":{\"65\":1}}],[\"场景\",{\"1\":{\"65\":1}}],[\"模力视频\",{\"1\":{\"63\":1}}],[\"变现\",{\"0\":{\"63\":1}}],[\"知网论文下载\",{\"1\":{\"62\":1}}],[\"知乎\",{\"1\":{\"6\":1,\"14\":1,\"17\":1,\"27\":2,\"28\":1,\"42\":2,\"45\":1}}],[\"论文下载\",{\"0\":{\"62\":1}}],[\"瞧\",{\"1\":{\"61\":1}}],[\"代码沙箱\",{\"1\":{\"61\":1}}],[\"代码高亮\",{\"1\":{\"40\":1}}],[\"视频\",{\"1\":{\"72\":1}}],[\"视频讲解\",{\"1\":{\"61\":2}}],[\"视频网站\",{\"0\":{\"56\":1}}],[\"案例演示\",{\"1\":{\"99\":1,\"102\":1}}],[\"案例\",{\"1\":{\"61\":1}}],[\"参考项目地址\",{\"1\":{\"61\":2}}],[\"参考手册\",{\"1\":{\"6\":1}}],[\"项目\",{\"0\":{\"61\":1}}],[\"项目开发常用模式\",{\"1\":{\"24\":1}}],[\"良许linux\",{\"1\":{\"60\":1}}],[\"系统服务的\",{\"1\":{\"60\":1}}],[\"查看\",{\"1\":{\"60\":1}}],[\"互联网开发文档\",{\"1\":{\"60\":1}}],[\"安装jdk18版本\",{\"1\":{\"74\":1}}],[\"安装\",{\"1\":{\"59\":1}}],[\"安装与破解\",{\"1\":{\"51\":1}}],[\"容器编排利器\",{\"1\":{\"59\":1}}],[\"七牛云\",{\"1\":{\"58\":1}}],[\"腾讯云\",{\"1\":{\"58\":1}}],[\"阿里云\",{\"1\":{\"58\":1}}],[\"阿里云开发者社区\",{\"1\":{\"27\":1,\"38\":1}}],[\"微信云托管\",{\"1\":{\"58\":1}}],[\"雨云\",{\"1\":{\"58\":1}}],[\"qq\",{\"1\":{\"58\":1}}],[\"q云\",{\"1\":{\"58\":1}}],[\"q=spring\",{\"1\":{\"8\":1}}],[\"连接服务器\",{\"1\":{\"57\":1}}],[\"连接redis\",{\"1\":{\"51\":1}}],[\"使用fxmlloader获取布局里面的controller的引用\",{\"1\":{\"102\":1}}],[\"使用fxmlloader类的load方法来加载fxml文件\",{\"1\":{\"99\":1}}],[\"使用fxml实现\",{\"1\":{\"102\":1}}],[\"使用initialize\",{\"1\":{\"101\":1}}],[\"使用ssh\",{\"1\":{\"57\":1}}],[\"使用docker镜像部署前端项目\",{\"1\":{\"57\":1}}],[\"使用\",{\"1\":{\"57\":1,\"59\":1}}],[\"使用教程\",{\"1\":{\"35\":1}}],[\"功能\",{\"1\":{\"57\":1}}],[\"适合初学者的简单\",{\"1\":{\"57\":1}}],[\"干杯\",{\"1\":{\"56\":1}}],[\"つロ\",{\"1\":{\"56\":1}}],[\"゜\",{\"1\":{\"56\":2}}],[\"框架语法特性对比\",{\"1\":{\"55\":1}}],[\"编辑\",{\"1\":{\"81\":1}}],[\"编辑器\",{\"1\":{\"40\":1}}],[\"编程题目的代码沙箱代码\",{\"1\":{\"61\":1}}],[\"编程导航\",{\"1\":{\"54\":1}}],[\"编写dockerfile\",{\"1\":{\"59\":1}}],[\"稀土掘金\",{\"1\":{\"54\":1}}],[\"为每一个人提供优秀的文档和知识库工具\",{\"1\":{\"54\":1}}],[\"语雀\",{\"1\":{\"54\":1}}],[\"电脑下方的任务栏没反应怎么办\",{\"1\":{\"53\":1}}],[\"电脑任务栏卡死是什么原因\",{\"1\":{\"53\":1}}],[\"前端\",{\"0\":{\"55\":1}}],[\"前端助手\",{\"1\":{\"52\":1}}],[\"前端代码规范工具eslint和prettier\",{\"1\":{\"33\":1}}],[\"浏览器扩展在线安装\",{\"1\":{\"52\":1}}],[\"浏览器插件\",{\"0\":{\"52\":1}}],[\"🎉跨平台的剪贴板管理工具\",{\"1\":{\"51\":1}}],[\"性能诊断\",{\"1\":{\"51\":1}}],[\"监控工具\",{\"1\":{\"51\":1}}],[\"哑吧\",{\"1\":{\"51\":1}}],[\"激活工具免费分享\",{\"1\":{\"51\":1}}],[\"激活至2099年\",{\"1\":{\"51\":1}}],[\"任意版本2024\",{\"1\":{\"51\":1}}],[\"瓦特工具箱\",{\"1\":{\"51\":1}}],[\"附加到场景的所有控件\",{\"1\":{\"65\":1}}],[\"附安装包\",{\"1\":{\"51\":1}}],[\"附源码\",{\"1\":{\"27\":1}}],[\"超详细\",{\"1\":{\"51\":1}}],[\"404\",{\"1\":{\"103\":1}}],[\"400\",{\"1\":{\"99\":1,\"101\":2}}],[\"496\",{\"1\":{\"102\":1}}],[\"488\",{\"1\":{\"102\":1}}],[\"4安装\",{\"1\":{\"51\":1}}],[\"4\",{\"1\":{\"51\":2}}],[\"文件对话框\",{\"0\":{\"97\":1}}],[\"文件\",{\"1\":{\"81\":1}}],[\"文件学习\",{\"1\":{\"6\":1}}],[\"文本区域\",{\"0\":{\"87\":1},\"1\":{\"67\":1}}],[\"文本框\",{\"0\":{\"86\":1},\"1\":{\"67\":1}}],[\"文本框等\",{\"1\":{\"65\":1}}],[\"文本编辑器\",{\"1\":{\"51\":1}}],[\"文字转语音\",{\"1\":{\"63\":1}}],[\"文档协作工具\",{\"1\":{\"61\":1}}],[\"画图软件\",{\"1\":{\"51\":1}}],[\"测试一体化协作平台\",{\"1\":{\"51\":1}}],[\"开始工作\",{\"0\":{\"74\":1}}],[\"开发\",{\"1\":{\"51\":1}}],[\"开源\",{\"1\":{\"51\":1}}],[\"免费在线工具\",{\"1\":{\"63\":1}}],[\"免费在线学习代码重构和设计模式\",{\"1\":{\"13\":1}}],[\"免费\",{\"1\":{\"51\":1}}],[\"智谱ai开放平台\",{\"1\":{\"51\":1}}],[\"工具\",{\"0\":{\"51\":1}}],[\"尽在优设网\",{\"1\":{\"50\":1}}],[\"找灵感素材\",{\"1\":{\"50\":1}}],[\"找到\",{\"1\":{\"4\":1}}],[\"学aigc教程\",{\"1\":{\"50\":1}}],[\"学习视频\",{\"1\":{\"64\":1}}],[\"学习博客\",{\"1\":{\"64\":1}}],[\"学习笔记\",{\"1\":{\"28\":1}}],[\"学习与使用\",{\"1\":{\"12\":1}}],[\"学习spring\",{\"1\":{\"8\":1}}],[\"学习\",{\"1\":{\"8\":1}}],[\"学习书籍\",{\"0\":{\"1\":1}}],[\"国内专业设计师平台\",{\"1\":{\"50\":1}}],[\"优设网官网\",{\"1\":{\"50\":1}}],[\"搜索\",{\"1\":{\"50\":1}}],[\"搜索引擎\",{\"0\":{\"26\":1}}],[\"大方法\",{\"1\":{\"60\":1}}],[\"大模型\",{\"0\":{\"49\":1}}],[\"大熊丨rapper\",{\"1\":{\"32\":1}}],[\"在application中操作controller进行属性绑定\",{\"1\":{\"102\":1}}],[\"在application里操作controller\",{\"0\":{\"102\":1}}],[\"在fxml中\",{\"1\":{\"98\":1}}],[\"在应用程序关闭时执行的方法\",{\"1\":{\"66\":1}}],[\"在应用程序启动之前执行的方法\",{\"1\":{\"66\":1}}],[\"在线配音工具\",{\"1\":{\"63\":1}}],[\"在线网页练习git\",{\"1\":{\"57\":1}}],[\"在线网页免费学英语\",{\"1\":{\"47\":1}}],[\"在线ps\",{\"1\":{\"51\":1}}],[\"在java中使用protobuf序列化对象\",{\"1\":{\"16\":1}}],[\"英语\",{\"0\":{\"47\":1}}],[\"部署\",{\"0\":{\"45\":1,\"58\":1}}],[\"跨平台\",{\"0\":{\"44\":1},\"1\":{\"51\":1}}],[\"构建企业本地ai大模型\",{\"1\":{\"49\":1}}],[\"构建工具\",{\"0\":{\"43\":1}}],[\"构设计与实现原理\",{\"1\":{\"1\":1}}],[\"吃个石头\",{\"1\":{\"42\":1}}],[\"与\",{\"1\":{\"42\":1,\"73\":2}}],[\"建议收藏\",{\"1\":{\"42\":1}}],[\"建议必备的插件\",{\"1\":{\"34\":1}}],[\"📓\",{\"1\":{\"41\":1}}],[\"🚀🚀🚀\",{\"1\":{\"38\":1}}],[\"字体图标中文icon\",{\"1\":{\"41\":1}}],[\"字节大佬总结的java面试资料\",{\"1\":{\"2\":1}}],[\"首页\",{\"1\":{\"41\":1}}],[\"资源\",{\"0\":{\"41\":1}}],[\"资源存储\",{\"0\":{\"25\":1}}],[\"例如\",{\"1\":{\"40\":2}}],[\"回显和报错等场景\",{\"1\":{\"40\":1}}],[\"专注解决网络请求时等待\",{\"1\":{\"40\":1}}],[\"自定义指令包插件\",{\"1\":{\"40\":1}}],[\"03\",{\"1\":{\"102\":1}}],[\"02\",{\"1\":{\"101\":1}}],[\"0行0列\",{\"1\":{\"80\":1}}],[\"0\",{\"1\":{\"40\":1,\"77\":4,\"79\":7,\"80\":9,\"81\":4,\"82\":4,\"99\":3,\"101\":8,\"102\":7}}],[\"上下文帮助等\",{\"1\":{\"40\":1}}],[\"亮点\",{\"1\":{\"40\":1}}],[\"可以同时使用多个锚点来定位一个子节点\",{\"1\":{\"79\":1}}],[\"可以将\",{\"1\":{\"73\":1}}],[\"可以在\",{\"1\":{\"73\":2}}],[\"可用于产品导览\",{\"1\":{\"40\":1}}],[\"可选\",{\"1\":{\"4\":1}}],[\"最健全的web动画库之一\",{\"1\":{\"40\":1}}],[\"强大的js动画库\",{\"1\":{\"40\":1}}],[\"预览照片的插件\",{\"1\":{\"40\":1}}],[\"类\",{\"1\":{\"65\":1}}],[\"类似\",{\"1\":{\"40\":1}}],[\"类说明\",{\"1\":{\"28\":1}}],[\"即时渲染\",{\"1\":{\"40\":1}}],[\"富文本\",{\"1\":{\"40\":1}}],[\"支持所见即所得\",{\"1\":{\"40\":1}}],[\"看设计文章\",{\"1\":{\"50\":1}}],[\"看板娘\",{\"1\":{\"40\":1}}],[\"看透\",{\"1\":{\"1\":1}}],[\"移入动画\",{\"1\":{\"40\":1}}],[\"移动端适配\",{\"1\":{\"30\":1}}],[\"配置\",{\"1\":{\"40\":1}}],[\"一个fxml属性表示以下类型之一\",{\"1\":{\"98\":1}}],[\"一个fxml标签代表以下类型之一\",{\"1\":{\"98\":1}}],[\"一个脚本代码块\",{\"1\":{\"98\":1}}],[\"一个定义代码块\",{\"1\":{\"98\":1}}],[\"一级目录\",{\"1\":{\"81\":1}}],[\"一键部署\",{\"1\":{\"51\":1}}],[\"一款浏览器端的\",{\"1\":{\"40\":1}}],[\"一款强大的预设css3动画库\",{\"1\":{\"40\":1}}],[\"一款独特的css3动画特效包\",{\"1\":{\"40\":1}}],[\"一次性推荐20个react组件库\",{\"1\":{\"38\":1}}],[\"一文盘点typescript中23个内置类型工具\",{\"1\":{\"42\":1}}],[\"一文了解vscode\",{\"1\":{\"33\":1}}],[\"一文搞定shiro\",{\"1\":{\"27\":1}}],[\"一文搞通spring事务的七种传播机制\",{\"1\":{\"8\":1}}],[\"量大管饱\",{\"1\":{\"38\":1}}],[\"图像\",{\"1\":{\"72\":1}}],[\"图标库\",{\"1\":{\"38\":1}}],[\"图解http\",{\"1\":{\"1\":1}}],[\"反应\",{\"1\":{\"38\":1}}],[\"风格移动端组件库\",{\"1\":{\"37\":1}}],[\"的设计时间\",{\"1\":{\"50\":1}}],[\"的\",{\"1\":{\"37\":1}}],[\"面向\",{\"1\":{\"37\":1}}],[\"面试笔记\",{\"1\":{\"14\":1}}],[\"面试\",{\"0\":{\"14\":1}}],[\"面试书籍\",{\"0\":{\"2\":1}}],[\"组件和监听事件\",{\"1\":{\"99\":1}}],[\"组件之间创建过渡效果的类\",{\"1\":{\"71\":1}}],[\"组件外观的类\",{\"1\":{\"70\":1}}],[\"组件交互产生的动作\",{\"1\":{\"69\":1}}],[\"组件\",{\"1\":{\"65\":1,\"73\":1}}],[\"组件总览\",{\"1\":{\"38\":1}}],[\"组件库\",{\"0\":{\"36\":1}}],[\"组任务group\",{\"1\":{\"28\":1}}],[\"组任务\",{\"1\":{\"28\":1}}],[\"util\",{\"1\":{\"99\":1}}],[\"utf\",{\"1\":{\"99\":1,\"101\":1,\"102\":1}}],[\"utools官网\",{\"1\":{\"51\":1}}],[\"up\",{\"1\":{\"51\":1}}],[\"untitled\",{\"1\":{\"81\":2}}],[\"unknow\",{\"1\":{\"42\":1}}],[\"uni\",{\"0\":{\"39\":1}}],[\"uniapp\",{\"1\":{\"37\":1,\"44\":1}}],[\"uviewui\",{\"1\":{\"39\":1}}],[\"uview\",{\"1\":{\"39\":2}}],[\"ui组件\",{\"0\":{\"83\":1}}],[\"uisdc\",{\"1\":{\"50\":1}}],[\"uicn用户体验设计平台\",{\"1\":{\"50\":1}}],[\"ui大师\",{\"1\":{\"50\":1}}],[\"ui设计\",{\"0\":{\"50\":1}}],[\"ui\",{\"0\":{\"36\":1},\"1\":{\"37\":3,\"65\":1,\"69\":1,\"70\":1,\"71\":1}}],[\"usenavigation\",{\"1\":{\"35\":1}}],[\"关于usenavigate及uselocation的使用\",{\"1\":{\"35\":1}}],[\"路由配置\",{\"1\":{\"35\":1}}],[\"路由详解\",{\"1\":{\"35\":1}}],[\"不生效\",{\"1\":{\"35\":2}}],[\"琴时\",{\"1\":{\"35\":1}}],[\"解决vscode开发react项目没有代码提示问题\",{\"1\":{\"35\":1}}],[\"解决idea2020\",{\"1\":{\"28\":1}}],[\"阮一峰的网络日志\",{\"1\":{\"35\":1}}],[\"索引\",{\"1\":{\"35\":1}}],[\"divide\",{\"1\":{\"102\":2}}],[\"dmg\",{\"1\":{\"73\":1}}],[\"draw\",{\"1\":{\"51\":1}}],[\"driver\",{\"1\":{\"40\":1}}],[\"dodgerblue\",{\"1\":{\"102\":1}}],[\"down\",{\"1\":{\"99\":2}}],[\"download\",{\"1\":{\"51\":1}}],[\"docker等安保技术\",{\"1\":{\"61\":1}}],[\"docker最全讲解\",{\"1\":{\"59\":1}}],[\"docker命令大全\",{\"1\":{\"59\":1}}],[\"dockerhub\",{\"1\":{\"59\":1}}],[\"docker\",{\"0\":{\"59\":1},\"1\":{\"49\":1,\"59\":5}}],[\"docker+ollama+webui+anythingllm\",{\"1\":{\"49\":1}}],[\"docschina\",{\"1\":{\"35\":1}}],[\"day\",{\"1\":{\"40\":1}}],[\"daisy\",{\"1\":{\"37\":1}}],[\"desktop汉化\",{\"1\":{\"59\":1}}],[\"design\",{\"1\":{\"38\":1}}],[\"default\",{\"1\":{\"40\":1}}],[\"details\",{\"1\":{\"40\":1}}],[\"democontroller\",{\"1\":{\"99\":2}}],[\"demo\",{\"1\":{\"16\":1,\"76\":1,\"99\":3}}],[\"快速入门\",{\"1\":{\"35\":1,\"59\":1}}],[\"600\",{\"1\":{\"99\":1,\"101\":2}}],[\"66影视解说网\",{\"1\":{\"63\":1}}],[\"6\",{\"1\":{\"31\":1}}],[\"65页\",{\"1\":{\"2\":1}}],[\"教程与您的团队一起开始使用\",{\"1\":{\"57\":1}}],[\"教程\",{\"1\":{\"31\":1}}],[\"现代\",{\"1\":{\"31\":1}}],[\"version=\",{\"1\":{\"99\":1,\"101\":1,\"102\":1}}],[\"vertical\",{\"1\":{\"81\":1}}],[\"vercel是什么神仙网站\",{\"1\":{\"45\":1}}],[\"vercel\",{\"1\":{\"37\":1,\"45\":1}}],[\"vbox\",{\"1\":{\"65\":1,\"68\":1}}],[\"void\",{\"1\":{\"42\":1,\"74\":4,\"76\":4,\"77\":4,\"79\":4,\"80\":4,\"81\":4,\"82\":4,\"99\":8,\"101\":5,\"102\":3}}],[\"v\",{\"1\":{\"40\":7}}],[\"vditor\",{\"1\":{\"40\":1}}],[\"v1\",{\"1\":{\"39\":1}}],[\"varletjs\",{\"1\":{\"37\":1}}],[\"varlet\",{\"1\":{\"37\":1}}],[\"v5\",{\"1\":{\"35\":1}}],[\"v6版\",{\"1\":{\"35\":1}}],[\"v6\",{\"1\":{\"35\":1}}],[\"vscode\",{\"1\":{\"34\":2,\"35\":1}}],[\"vscode开发\",{\"1\":{\"34\":1}}],[\"vueuse\",{\"1\":{\"40\":1}}],[\"vue2进阶篇\",{\"1\":{\"40\":2}}],[\"vue官网\",{\"1\":{\"34\":1}}],[\"vue\",{\"0\":{\"34\":1},\"1\":{\"34\":1,\"40\":6}}],[\"vue3配置tailwindcss并在vscode中智能提示\",{\"1\":{\"34\":1}}],[\"vue3插件\",{\"1\":{\"34\":1}}],[\"vue3移动端项目尺寸适配\",{\"1\":{\"30\":1}}],[\"vue3\",{\"0\":{\"37\":1},\"1\":{\"30\":1,\"34\":1,\"37\":1,\"40\":1}}],[\"video\",{\"1\":{\"72\":1}}],[\"viewer\",{\"1\":{\"40\":1}}],[\"vite+react项目配置\",{\"1\":{\"35\":1}}],[\"vite官网\",{\"1\":{\"34\":1}}],[\"vite\",{\"1\":{\"30\":1}}],[\"vip\",{\"1\":{\"8\":1}}],[\"其他\",{\"0\":{\"30\":1,\"53\":1},\"1\":{\"40\":3,\"57\":1}}],[\"流程元素\",{\"1\":{\"28\":1}}],[\"三级目录\",{\"1\":{\"81\":1}}],[\"三斜线引入\",{\"1\":{\"42\":1}}],[\"三\",{\"1\":{\"28\":1}}],[\"正在执行的活动信息\",{\"1\":{\"28\":1}}],[\"从入门到实践\",{\"1\":{\"59\":1}}],[\"从而一步一步地导览用户快速熟悉产品功能\",{\"1\":{\"40\":1}}],[\"从基础到进阶\",{\"1\":{\"28\":1}}],[\"从0开始实现常见的四种限流算法\",{\"1\":{\"7\":1}}],[\"完整版\",{\"1\":{\"28\":1}}],[\"思否\",{\"1\":{\"28\":1,\"35\":1}}],[\"个人文章\",{\"1\":{\"28\":1,\"35\":1}}],[\"十\",{\"1\":{\"28\":1}}],[\"认识activiti\",{\"1\":{\"28\":1}}],[\"350\",{\"1\":{\"99\":2}}],[\"30\",{\"1\":{\"99\":2}}],[\"300\",{\"1\":{\"79\":2}}],[\"320\",{\"1\":{\"77\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1}}],[\"3小时前\",{\"1\":{\"40\":1}}],[\"360doc\",{\"1\":{\"28\":1}}],[\"3版本无法使用actibpm插件问题\",{\"1\":{\"28\":1}}],[\"3\",{\"1\":{\"28\":1,\"40\":1,\"51\":2,\"80\":1}}],[\"3857ae6041bd6bfehttps\",{\"1\":{\"14\":1}}],[\"审批流程\",{\"0\":{\"28\":1}}],[\"哔哩哔哩\",{\"1\":{\"27\":1,\"28\":1,\"51\":1,\"56\":1,\"59\":1}}],[\"掘金\",{\"1\":{\"27\":1,\"33\":1,\"35\":1}}],[\"权限控制的使用\",{\"1\":{\"27\":1}}],[\"权限认证\",{\"0\":{\"27\":1}}],[\"异地登录提醒\",{\"1\":{\"27\":1}}],[\"yarnpkg\",{\"1\":{\"32\":1}}],[\"yarn\",{\"1\":{\"32\":1}}],[\"yuque\",{\"1\":{\"27\":5,\"28\":2}}],[\"your\",{\"1\":{\"4\":2}}],[\"采用canal进行mysql\",{\"1\":{\"26\":1}}],[\"保姆级教程\",{\"1\":{\"26\":1}}],[\"介绍使用\",{\"1\":{\"25\":1}}],[\"示例代码厂库\",{\"1\":{\"25\":1}}],[\"如表格\",{\"1\":{\"101\":1}}],[\"如鼠标点击\",{\"1\":{\"69\":1}}],[\"如\",{\"1\":{\"65\":1,\"68\":1,\"71\":2}}],[\"如按钮\",{\"1\":{\"65\":1}}],[\"如何实现延迟队列\",{\"1\":{\"24\":1}}],[\"如果当前行填满了\",{\"1\":{\"76\":1}}],[\"如果当前没有事务\",{\"1\":{\"8\":4}}],[\"如果当前存在事务\",{\"1\":{\"8\":7}}],[\"失败重试后发送至死信队列\",{\"1\":{\"24\":1}}],[\"消费者手动确认消息\",{\"1\":{\"24\":1}}],[\"消息重试3次失败后入库\",{\"1\":{\"24\":1}}],[\"消息重试3次失败后写入死信队列\",{\"1\":{\"24\":1}}],[\"消息确认机制\",{\"1\":{\"24\":1}}],[\"消息队列\",{\"0\":{\"24\":1}}],[\"集成和部署\",{\"0\":{\"73\":1}}],[\"集成了java安全管理器\",{\"1\":{\"61\":1}}],[\"集成\",{\"1\":{\"24\":1,\"73\":2}}],[\"集群模式\",{\"1\":{\"21\":1}}],[\"避坑指南\",{\"1\":{\"24\":1}}],[\"+\",{\"1\":{\"24\":1,\"30\":2,\"99\":2}}],[\"篇\",{\"1\":{\"24\":1}}],[\"通常与其他布局一起使用\",{\"1\":{\"79\":1}}],[\"通配符\",{\"1\":{\"24\":1}}],[\"通俗易懂\",{\"1\":{\"8\":1}}],[\"数据库工具\",{\"1\":{\"51\":1}}],[\"数据同步\",{\"0\":{\"23\":1}}],[\"数据源配置及操作\",{\"1\":{\"7\":1}}],[\"实现缓存和数据库一致性方案\",{\"1\":{\"21\":1}}],[\"实战案例\",{\"0\":{\"7\":1}}],[\"哨兵模式\",{\"1\":{\"21\":1}}],[\"主从复制\",{\"1\":{\"21\":1}}],[\"日志框架\",{\"0\":{\"19\":1}}],[\"left\",{\"1\":{\"81\":1}}],[\"lang\",{\"1\":{\"99\":1}}],[\"language\",{\"1\":{\"40\":1}}],[\"la\",{\"1\":{\"99\":6}}],[\"last\",{\"1\":{\"80\":1}}],[\"launch\",{\"1\":{\"74\":1,\"76\":1,\"77\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"99\":2,\"101\":1,\"102\":1}}],[\"label>\",{\"1\":{\"99\":1}}],[\"label\",{\"0\":{\"85\":1},\"1\":{\"67\":1,\"80\":6,\"81\":1,\"99\":12}}],[\"layouty=\",{\"1\":{\"99\":2}}],[\"layoutx=\",{\"1\":{\"99\":2}}],[\"layout\",{\"1\":{\"65\":1,\"68\":2,\"76\":2,\"77\":3,\"79\":1,\"80\":2,\"81\":4,\"82\":1,\"99\":1,\"101\":1,\"102\":1}}],[\"large\",{\"1\":{\"51\":1}}],[\"liblib\",{\"1\":{\"41\":1}}],[\"listview\",{\"0\":{\"94\":1},\"1\":{\"67\":1}}],[\"list\",{\"1\":{\"40\":1}}],[\"linux就该这么学\",{\"1\":{\"60\":1}}],[\"linux安装最新版本docker\",{\"1\":{\"59\":1}}],[\"linux\",{\"0\":{\"60\":1},\"1\":{\"4\":1,\"60\":1}}],[\"load\",{\"1\":{\"99\":2,\"101\":1,\"102\":1}}],[\"loading\",{\"1\":{\"40\":1}}],[\"localsend将文件共享到附近的设备\",{\"1\":{\"51\":1}}],[\"logback配置文件xml详解\",{\"1\":{\"19\":1}}],[\"log4j\",{\"0\":{\"19\":1}}],[\"lucide\",{\"1\":{\"38\":3}}],[\"lua在nginx的应用\",{\"1\":{\"22\":1}}],[\"理论与实践的完美结合\",{\"1\":{\"18\":1}}],[\"理解这9大内置过滤器\",{\"1\":{\"27\":1}}],[\"理解\",{\"1\":{\"12\":1}}],[\"|琉璃酮\",{\"1\":{\"38\":1}}],[\"|\",{\"1\":{\"18\":1,\"35\":1,\"38\":1,\"41\":2,\"51\":3,\"52\":1}}],[\"这下彻底把\",{\"1\":{\"17\":1}}],[\"肝了一周\",{\"1\":{\"17\":1}}],[\"星朝\",{\"1\":{\"16\":1}}],[\"盛夏群岛\",{\"1\":{\"16\":1}}],[\"高性能对象序列化工具\",{\"1\":{\"16\":1}}],[\"飞书云文档\",{\"1\":{\"16\":1}}],[\"getage\",{\"1\":{\"101\":1}}],[\"getname\",{\"1\":{\"101\":1}}],[\"getresource\",{\"1\":{\"99\":2,\"101\":1,\"102\":1}}],[\"getcontroller\",{\"1\":{\"102\":1}}],[\"getcode\",{\"1\":{\"99\":2}}],[\"getclassloader\",{\"1\":{\"99\":1}}],[\"getclass\",{\"1\":{\"99\":2,\"101\":1,\"102\":1}}],[\"getchildren\",{\"1\":{\"76\":4,\"77\":2,\"79\":1,\"81\":9,\"82\":1,\"99\":1}}],[\"getlayouty\",{\"1\":{\"99\":4}}],[\"gettabs\",{\"1\":{\"81\":2}}],[\"getmenus\",{\"1\":{\"81\":2}}],[\"getitems\",{\"1\":{\"81\":2}}],[\"geometry\",{\"1\":{\"76\":1,\"77\":1,\"80\":3,\"81\":4,\"82\":2}}],[\"gui\",{\"1\":{\"51\":1}}],[\"guava\",{\"1\":{\"16\":1}}],[\"green\",{\"1\":{\"81\":1}}],[\"greensock\",{\"1\":{\"40\":1}}],[\"gridpane\",{\"1\":{\"65\":1,\"68\":1,\"80\":5,\"81\":1}}],[\"group\",{\"1\":{\"28\":1}}],[\"gsap从入门到精通\",{\"1\":{\"40\":1}}],[\"gsap\",{\"1\":{\"40\":2}}],[\"gitee\",{\"1\":{\"57\":1,\"61\":2}}],[\"gitlab\",{\"1\":{\"57\":5}}],[\"git远程仓库\",{\"0\":{\"57\":1}}],[\"git图标库\",{\"1\":{\"41\":1}}],[\"git\",{\"1\":{\"4\":3,\"57\":2}}],[\"github加速器\",{\"1\":{\"51\":2}}],[\"github\",{\"0\":{\"0\":1,\"3\":1,\"5\":1,\"29\":1,\"46\":1},\"1\":{\"4\":1,\"8\":5,\"57\":1}}],[\"zh\",{\"1\":{\"14\":1}}],[\"zhihu\",{\"1\":{\"6\":1,\"14\":1,\"17\":1,\"27\":2,\"28\":1,\"42\":2,\"45\":1}}],[\"person\",{\"1\":{\"101\":6}}],[\"performance\",{\"1\":{\"51\":1}}],[\"perfectli\",{\"1\":{\"42\":1}}],[\"pink\",{\"1\":{\"81\":1}}],[\"pinia使用指南\",{\"1\":{\"40\":1}}],[\"pinia\",{\"1\":{\"40\":1}}],[\"pos\",{\"1\":{\"80\":2,\"81\":3,\"82\":2}}],[\"parent\",{\"1\":{\"102\":1}}],[\"pane\",{\"1\":{\"80\":14,\"81\":7,\"99\":2,\"101\":1}}],[\"paint\",{\"1\":{\"77\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1}}],[\"page一个\",{\"1\":{\"40\":1}}],[\"platform\",{\"1\":{\"51\":1}}],[\"plus\",{\"1\":{\"39\":1,\"51\":1}}],[\"prefwidth=\",{\"1\":{\"99\":1,\"101\":4,\"102\":1}}],[\"prefheight=\",{\"1\":{\"99\":1,\"101\":2,\"102\":1}}],[\"prettier\",{\"1\":{\"33\":1}}],[\"prettier官网\",{\"1\":{\"33\":1}}],[\"private\",{\"1\":{\"101\":5,\"102\":1}}],[\"priority\",{\"1\":{\"77\":2}}],[\"primarystage\",{\"1\":{\"74\":1,\"76\":6,\"77\":3,\"79\":5,\"80\":5,\"81\":5,\"82\":5,\"99\":6,\"101\":3,\"102\":3}}],[\"propertyvaluefactory<person\",{\"1\":{\"101\":2}}],[\"progressbar\",{\"0\":{\"92\":1},\"1\":{\"67\":1}}],[\"processdefinitionentity就是获取xml内容的对象\",{\"1\":{\"28\":1}}],[\"processdefinitionentity\",{\"1\":{\"28\":2}}],[\"protobuf\",{\"1\":{\"16\":1}}],[\"pvmactivity等\",{\"1\":{\"28\":1}}],[\"pvmtransition\",{\"1\":{\"28\":1}}],[\"public\",{\"1\":{\"74\":5,\"76\":5,\"77\":5,\"79\":5,\"80\":5,\"81\":5,\"82\":5,\"99\":11,\"101\":11,\"102\":5}}],[\"pub复制里面的内容\",{\"1\":{\"4\":1}}],[\"puls教程\",{\"1\":{\"20\":1}}],[\"pdf\",{\"1\":{\"14\":1}}],[\"pdfhttps\",{\"1\":{\"14\":1}}],[\"if\",{\"1\":{\"99\":2}}],[\"id=\",{\"1\":{\"99\":2,\"101\":3,\"102\":1}}],[\"id=template\",{\"1\":{\"14\":1}}],[\"idea激活教程\",{\"1\":{\"51\":1}}],[\"idea卸载干净并重新安装\",{\"1\":{\"51\":1}}],[\"idea彻底卸载安装及配置笔记\",{\"1\":{\"51\":1}}],[\"import\",{\"1\":{\"74\":2,\"76\":9,\"77\":13,\"79\":6,\"80\":12,\"81\":13,\"82\":10,\"99\":6,\"101\":3,\"102\":2}}],[\"import区别\",{\"1\":{\"42\":1}}],[\"image\",{\"1\":{\"72\":1}}],[\"img\",{\"1\":{\"14\":1}}],[\"inside\",{\"1\":{\"102\":1}}],[\"insets\",{\"1\":{\"76\":2,\"77\":3,\"80\":2,\"81\":1,\"82\":2}}],[\"infinity\",{\"1\":{\"101\":4,\"102\":4}}],[\"integer>\",{\"1\":{\"101\":2}}],[\"int\",{\"1\":{\"101\":4}}],[\"initialize\",{\"1\":{\"101\":2}}],[\"init\",{\"1\":{\"66\":1,\"74\":2,\"76\":2,\"77\":2,\"79\":2,\"80\":2,\"81\":2,\"82\":2}}],[\"in\",{\"1\":{\"42\":1}}],[\"ioexception\",{\"1\":{\"102\":1}}],[\"io\",{\"1\":{\"40\":1,\"51\":1}}],[\"fxcollections\",{\"1\":{\"101\":1}}],[\"fx=\",{\"1\":{\"99\":1,\"101\":1,\"102\":1}}],[\"fxmlloader\",{\"1\":{\"99\":2,\"101\":1,\"102\":6}}],[\"fxml布局文件的使用\",{\"0\":{\"99\":1}}],[\"fxml是一种可编写的\",{\"1\":{\"98\":1}}],[\"fxml\",{\"0\":{\"98\":1},\"1\":{\"99\":7,\"101\":6,\"102\":4}}],[\"fx\",{\"1\":{\"79\":1,\"81\":4,\"99\":3,\"101\":4,\"102\":2}}],[\"first\",{\"1\":{\"80\":1}}],[\"field\",{\"1\":{\"76\":1}}],[\"fill=\",{\"1\":{\"102\":1}}],[\"filechooser控件表示用户可以从中选择文件的对话窗口\",{\"1\":{\"97\":1}}],[\"filechooser\",{\"0\":{\"97\":1}}],[\"file\",{\"1\":{\"81\":4}}],[\"files\",{\"1\":{\"51\":1}}],[\"filesizejs让文件大小变成人类可读的字符串\",{\"1\":{\"40\":1}}],[\"filter\",{\"1\":{\"69\":1}}],[\"fadetransition\",{\"1\":{\"71\":1}}],[\"fangzhipeng\",{\"1\":{\"14\":1}}],[\"flowpaneright\",{\"1\":{\"81\":10}}],[\"flowpanebottom\",{\"1\":{\"81\":5}}],[\"flowpane是一个容器\",{\"1\":{\"76\":1}}],[\"flowpane\",{\"1\":{\"68\":1,\"76\":4,\"77\":1,\"81\":7}}],[\"free\",{\"1\":{\"51\":1}}],[\"found\",{\"1\":{\"103\":1}}],[\"font>\",{\"1\":{\"99\":1}}],[\"font\",{\"1\":{\"99\":2}}],[\"fontawesome\",{\"1\":{\"41\":1}}],[\"forezp\",{\"1\":{\"8\":1}}],[\"fehelper\",{\"1\":{\"52\":1}}],[\"feature\",{\"1\":{\"35\":1}}],[\"feishu\",{\"1\":{\"16\":1}}],[\"方法初始化时填充完tableview的数据\",{\"1\":{\"101\":1}}],[\"方法中是无法访问scene场景的\",{\"1\":{\"101\":1}}],[\"方法需要自定义\",{\"1\":{\"101\":1}}],[\"方法使用整理\",{\"1\":{\"10\":1}}],[\"方志朋\",{\"1\":{\"14\":1}}],[\"全栈知识体系\",{\"1\":{\"14\":1}}],[\"小林coding\",{\"1\":{\"14\":1}}],[\"中\",{\"1\":{\"80\":1}}],[\"中文开源技术交流社区\",{\"1\":{\"54\":1}}],[\"中文文档\",{\"1\":{\"35\":2}}],[\"中文网\",{\"1\":{\"33\":1,\"40\":1}}],[\"中的\",{\"1\":{\"12\":1}}],[\"中断机制interrupt以及interruptedexception出现的原因\",{\"1\":{\"11\":1}}],[\"夏末秋涼\",{\"1\":{\"11\":1}}],[\"原子类\",{\"1\":{\"11\":1}}],[\"原理与\",{\"1\":{\"11\":1}}],[\"线程同步器aqs源码简析\",{\"1\":{\"11\":1}}],[\"详解springboot整合rabbitmq如何实现消息确认\",{\"1\":{\"24\":1}}],[\"详解\",{\"1\":{\"11\":1}}],[\"什么是juc\",{\"1\":{\"11\":1}}],[\"23\",{\"1\":{\"101\":1}}],[\"23种设计模式\",{\"1\":{\"13\":1}}],[\"200\",{\"1\":{\"99\":2}}],[\"20\",{\"1\":{\"76\":1}}],[\"2023\",{\"1\":{\"51\":1}}],[\"2021最新工作流引擎activiti7最全讲解\",{\"1\":{\"28\":1}}],[\"2024最新\",{\"1\":{\"35\":1}}],[\"2024最新版\",{\"1\":{\"2\":1}}],[\"2024年java程序员找工作场景题\",{\"1\":{\"2\":1}}],[\"2gb\",{\"1\":{\"51\":1}}],[\"2分钟学会react\",{\"1\":{\"35\":1}}],[\"250\",{\"1\":{\"76\":1,\"102\":2}}],[\"256kb\",{\"1\":{\"40\":1}}],[\"25\",{\"1\":{\"35\":1,\"77\":2}}],[\"2pdf\",{\"1\":{\"14\":1}}],[\"2\",{\"1\":{\"11\":1,\"77\":4,\"80\":2,\"81\":1,\"102\":2}}],[\"笔记\",{\"1\":{\"11\":2}}],[\"脚本之家\",{\"1\":{\"10\":1}}],[\"探索四大函数式接口\",{\"1\":{\"10\":1}}],[\"之topics\",{\"1\":{\"24\":1}}],[\"之\",{\"1\":{\"10\":1,\"35\":1}}],[\"序列化\",{\"1\":{\"10\":1}}],[\"和之前圆的案例一样\",{\"1\":{\"102\":1}}],[\"和pane不同的是anchorpane可以设置子节点的相对位置\",{\"1\":{\"79\":1}}],[\"和分屏预览模式\",{\"1\":{\"40\":1}}],[\"和\",{\"1\":{\"10\":1}}],[\"＞＞＞所代表的含义\",{\"1\":{\"10\":1}}],[\"＞＞\",{\"1\":{\"10\":1}}],[\"＜＜\",{\"1\":{\"10\":1}}],[\"基本ui组件\",{\"0\":{\"67\":1}}],[\"基本概念\",{\"0\":{\"65\":1}}],[\"基础入门\",{\"1\":{\"22\":1}}],[\"基础\",{\"0\":{\"10\":1,\"64\":1}}],[\"基于xml的用于构造javafx场景图的标记语言\",{\"1\":{\"98\":1}}],[\"基于springboot+redis实现查找附近用户的功能\",{\"1\":{\"7\":1}}],[\"基于redis结合aop实现\",{\"1\":{\"7\":1}}],[\"171\",{\"1\":{\"101\":1,\"102\":1}}],[\"19\",{\"1\":{\"101\":1}}],[\"18\",{\"1\":{\"101\":1}}],[\"14\",{\"1\":{\"80\":1}}],[\"13\",{\"1\":{\"80\":1}}],[\"1e90ff\",{\"1\":{\"79\":1}}],[\"150\",{\"1\":{\"99\":2}}],[\"15\",{\"1\":{\"76\":4,\"80\":1,\"101\":1}}],[\"100\",{\"1\":{\"76\":2,\"81\":1,\"82\":2,\"99\":2,\"102\":1}}],[\"10\",{\"1\":{\"76\":1,\"77\":2,\"80\":2,\"82\":4}}],[\"120\",{\"1\":{\"82\":1}}],[\"12\",{\"1\":{\"80\":1}}],[\"125682536\",{\"1\":{\"40\":1}}],[\"12万字java面经总结\",{\"1\":{\"2\":1}}],[\"16\",{\"1\":{\"25\":1}}],[\"1\",{\"1\":{\"11\":1,\"35\":1,\"77\":1,\"80\":6,\"81\":1,\"82\":1,\"99\":1,\"101\":2,\"102\":2}}],[\"112\",{\"1\":{\"77\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1}}],[\"110\",{\"1\":{\"76\":1}}],[\"11\",{\"1\":{\"9\":2,\"51\":1}}],[\"others\",{\"0\":{\"104\":1}}],[\"observablearraylist\",{\"1\":{\"101\":1}}],[\"observablelist<person>\",{\"1\":{\"101\":1}}],[\"openjfx\",{\"1\":{\"100\":1}}],[\"optional\",{\"0\":{\"12\":1},\"1\":{\"12\":1}}],[\"onaction=\",{\"1\":{\"99\":1}}],[\"onkeyreleased=\",{\"1\":{\"99\":1}}],[\"onlyofficedemo\",{\"1\":{\"61\":1}}],[\"onlyoffice\",{\"1\":{\"61\":2}}],[\"online\",{\"1\":{\"51\":1}}],[\"orientation\",{\"1\":{\"81\":2}}],[\"org\",{\"1\":{\"35\":1,\"40\":1}}],[\"override\",{\"1\":{\"74\":3,\"76\":3,\"77\":3,\"79\":3,\"80\":3,\"81\":3,\"82\":3,\"99\":4,\"101\":1,\"102\":1}}],[\"overview\",{\"1\":{\"9\":1,\"35\":1}}],[\"oschina\",{\"1\":{\"54\":1}}],[\"office\",{\"1\":{\"51\":3}}],[\"oauth2源码\",{\"1\":{\"8\":1}}],[\"oauth2\",{\"1\":{\"8\":1}}],[\"menu\",{\"1\":{\"81\":5}}],[\"menubar\",{\"1\":{\"81\":7}}],[\"minwidth=\",{\"1\":{\"101\":1,\"102\":1}}],[\"minheight=\",{\"1\":{\"101\":1,\"102\":1}}],[\"minio分片上传\",{\"1\":{\"25\":1}}],[\"minio分片上传文件putobject接口流程源码分析\",{\"1\":{\"25\":1}}],[\"minio入门系列\",{\"1\":{\"25\":1}}],[\"minio\",{\"0\":{\"25\":1},\"1\":{\"25\":1}}],[\"mi\",{\"1\":{\"80\":4}}],[\"mdn\",{\"1\":{\"31\":1}}],[\"mytextfield\",{\"1\":{\"77\":3}}],[\"mybatis教程\",{\"1\":{\"20\":1}}],[\"mybatis\",{\"0\":{\"20\":1},\"1\":{\"20\":1}}],[\"mysql+canal+rabbitmq+redis\",{\"1\":{\"21\":1}}],[\"mysql隔离级别\",{\"1\":{\"17\":1}}],[\"mysql的隔离级别详解\",{\"1\":{\"17\":1}}],[\"mysql的锁搞懂了\",{\"1\":{\"17\":1}}],[\"mysql\",{\"0\":{\"17\":1}}],[\"maxwidth=\",{\"1\":{\"101\":1,\"102\":1}}],[\"maxheight=\",{\"1\":{\"101\":1,\"102\":1}}],[\"main\",{\"1\":{\"74\":2,\"76\":2,\"77\":2,\"79\":2,\"80\":2,\"81\":2,\"82\":2,\"99\":3,\"101\":2,\"102\":1}}],[\"management\",{\"1\":{\"51\":1}}],[\"mandatory\",{\"1\":{\"8\":1}}],[\"markdown\",{\"1\":{\"40\":1}}],[\"marketplace\",{\"1\":{\"28\":1}}],[\"magic\",{\"1\":{\"40\":1}}],[\"material\",{\"1\":{\"37\":1}}],[\"maven\",{\"0\":{\"15\":1},\"1\":{\"15\":1}}],[\"mouldid=1https\",{\"1\":{\"14\":1}}],[\"mujicv\",{\"1\":{\"14\":1}}],[\"mrbird\",{\"1\":{\"8\":1}}],[\"则自动将子组件向下推到新的一行\",{\"1\":{\"76\":1}}],[\"则该取值等价于required\",{\"1\":{\"8\":1}}],[\"则创建一个事务作为当前事务的嵌套事务来运行\",{\"1\":{\"8\":1}}],[\"则创建一个新的事务\",{\"1\":{\"8\":1}}],[\"则抛出异常\",{\"1\":{\"8\":2}}],[\"则以非事务的方式继续运行\",{\"1\":{\"8\":1}}],[\"则把当前事务挂起\",{\"1\":{\"8\":2}}],[\"则加入该事务\",{\"1\":{\"8\":3}}],[\"史上最简单的spring\",{\"1\":{\"8\":1}}],[\"heightproperty\",{\"1\":{\"102\":1}}],[\"hello\",{\"1\":{\"48\":2,\"101\":1,\"102\":1}}],[\"http\",{\"1\":{\"99\":2,\"101\":2,\"102\":2}}],[\"https\",{\"1\":{\"8\":2,\"14\":1,\"39\":1,\"40\":1,\"100\":1}}],[\"hpos\",{\"1\":{\"80\":3,\"81\":1}}],[\"handlekeyreleased\",{\"1\":{\"99\":2}}],[\"handlebuttonaction\",{\"1\":{\"99\":2}}],[\"handle\",{\"1\":{\"99\":2}}],[\"handler\",{\"1\":{\"69\":1}}],[\"handwriting\",{\"1\":{\"4\":1}}],[\"hbox内部控件之间的间隔\",{\"1\":{\"77\":1}}],[\"hbox\",{\"1\":{\"65\":1,\"68\":1,\"77\":11}}],[\"highlightjs\",{\"1\":{\"40\":1}}],[\"highlight\",{\"1\":{\"40\":2}}],[\"hover\",{\"1\":{\"40\":1}}],[\"hook\",{\"1\":{\"35\":1}}],[\"husky相关配置\",{\"1\":{\"33\":1}}],[\"hutool\",{\"1\":{\"16\":1}}],[\"博客\",{\"0\":{\"54\":1}}],[\"博客spring系列源码\",{\"1\":{\"8\":1}}],[\"博客园\",{\"1\":{\"7\":1,\"11\":1,\"16\":2,\"32\":1,\"35\":1,\"42\":2,\"51\":1,\"54\":1,\"60\":1}}],[\"循序渐进\",{\"1\":{\"8\":1}}],[\"500\",{\"1\":{\"99\":4}}],[\"500d\",{\"1\":{\"76\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1}}],[\"50\",{\"1\":{\"79\":1}}],[\"550\",{\"1\":{\"76\":1}}],[\"5\",{\"1\":{\"8\":1,\"60\":1,\"99\":4}}],[\"age\",{\"1\":{\"101\":13}}],[\"aizen\",{\"1\":{\"99\":2,\"101\":1,\"102\":1}}],[\"ai剪辑\",{\"1\":{\"63\":1}}],[\"actionevent\",{\"1\":{\"99\":1}}],[\"activity7下载\",{\"1\":{\"28\":1}}],[\"activiti源码学习之pvm篇\",{\"1\":{\"28\":1}}],[\"activiti5\",{\"1\":{\"28\":1}}],[\"activiti流程引擎\",{\"1\":{\"28\":1}}],[\"activiti架构分析及源码详解\",{\"1\":{\"28\":1}}],[\"activiti学习之task与execution的关系\",{\"1\":{\"28\":1}}],[\"activiti7在哪里设置collection\",{\"1\":{\"28\":1}}],[\"activiti7并行子流程的使用\",{\"1\":{\"28\":1}}],[\"activiti7工作流引擎\",{\"1\":{\"28\":1}}],[\"activiti入门体验\",{\"1\":{\"28\":1}}],[\"activiti\",{\"0\":{\"28\":1},\"1\":{\"28\":3}}],[\"add=new\",{\"1\":{\"80\":1}}],[\"addall\",{\"1\":{\"77\":1,\"82\":1,\"99\":1}}],[\"add\",{\"1\":{\"76\":4,\"77\":1,\"79\":1,\"80\":10,\"81\":15,\"101\":4}}],[\"args\",{\"1\":{\"74\":2,\"76\":2,\"77\":2,\"79\":2,\"80\":2,\"81\":2,\"82\":2,\"99\":4,\"101\":2,\"102\":2}}],[\"article\",{\"1\":{\"40\":1}}],[\"audio\",{\"1\":{\"72\":1}}],[\"augus\",{\"1\":{\"8\":1}}],[\"aminer\",{\"1\":{\"51\":1}}],[\"avatar\",{\"1\":{\"40\":1}}],[\"a924382407\",{\"1\":{\"40\":1}}],[\"anchorpane>\",{\"1\":{\"99\":1,\"101\":1,\"102\":1}}],[\"anchorpane=new\",{\"1\":{\"79\":1}}],[\"anchorpane\",{\"1\":{\"79\":8,\"80\":1,\"81\":1,\"99\":2,\"101\":1,\"102\":1}}],[\"animationtimer\",{\"1\":{\"71\":1}}],[\"animation\",{\"1\":{\"71\":1}}],[\"animate\",{\"1\":{\"40\":1}}],[\"anythingllm\",{\"1\":{\"49\":1}}],[\"any\",{\"1\":{\"42\":1}}],[\"and\",{\"1\":{\"40\":1,\"51\":1}}],[\"antgroup\",{\"1\":{\"38\":1}}],[\"ant\",{\"1\":{\"38\":1}}],[\"analysis\",{\"1\":{\"8\":1}}],[\"application\",{\"1\":{\"65\":3,\"74\":3,\"76\":3,\"77\":3,\"79\":3,\"80\":3,\"81\":3,\"82\":3,\"99\":4,\"101\":2,\"102\":1}}],[\"app\",{\"0\":{\"39\":1},\"1\":{\"37\":1}}],[\"apifox\",{\"1\":{\"51\":1}}],[\"api\",{\"1\":{\"35\":1,\"51\":1}}],[\"always\",{\"1\":{\"77\":1}}],[\"algo\",{\"1\":{\"48\":1}}],[\"alfrescocn\",{\"1\":{\"28\":1}}],[\"alfresco技术博客\",{\"1\":{\"28\":1}}],[\"aliyun\",{\"1\":{\"27\":1,\"38\":1}}],[\"alibaba\",{\"1\":{\"8\":1}}],[\"aop\",{\"1\":{\"7\":1}}],[\"源码分析笔记\",{\"1\":{\"8\":1}}],[\"源码\",{\"0\":{\"8\":1},\"1\":{\"8\":1}}],[\"源代码分析与实践\",{\"1\":{\"1\":1}}],[\"缓存击穿\",{\"1\":{\"7\":1}}],[\"nbtab新标签页\",{\"1\":{\"52\":1}}],[\"name\",{\"1\":{\"80\":3,\"101\":13}}],[\"namespace作用\",{\"1\":{\"6\":1}}],[\"naive\",{\"1\":{\"37\":1}}],[\"node\",{\"1\":{\"65\":1}}],[\"nodejs\",{\"1\":{\"33\":1,\"40\":1}}],[\"not\",{\"1\":{\"8\":1,\"103\":1}}],[\"notepad\",{\"1\":{\"51\":1}}],[\"notes\",{\"1\":{\"14\":1}}],[\"note\",{\"1\":{\"8\":1}}],[\"nprogress\",{\"1\":{\"40\":1}}],[\"npx详细使用\",{\"1\":{\"32\":1}}],[\"npx和npm的区别\",{\"1\":{\"32\":1}}],[\"npm地址\",{\"1\":{\"40\":1}}],[\"npm\",{\"0\":{\"32\":1}}],[\"nginx中使用lua脚本\",{\"1\":{\"22\":1}}],[\"nginx\",{\"0\":{\"22\":1},\"1\":{\"22\":1}}],[\"net\",{\"1\":{\"10\":1,\"40\":1,\"51\":1}}],[\"netty源码\",{\"1\":{\"8\":1}}],[\"nested\",{\"1\":{\"8\":1}}],[\"never区别及场景\",{\"1\":{\"42\":1}}],[\"never\",{\"1\":{\"8\":1}}],[\"new\",{\"1\":{\"7\":1,\"8\":1,\"76\":7,\"77\":6,\"79\":1,\"80\":10,\"81\":25,\"82\":6,\"99\":8,\"101\":7,\"102\":2}}],[\"漏桶算法\",{\"1\":{\"7\":1}}],[\"令牌桶算法\",{\"1\":{\"7\":1}}],[\"固定窗口\",{\"1\":{\"7\":1}}],[\"限流\",{\"1\":{\"7\":1}}],[\"整合多\",{\"1\":{\"7\":1}}],[\"万字篇\",{\"1\":{\"7\":1}}],[\"widthproperty\",{\"1\":{\"102\":1}}],[\"windterm\",{\"1\":{\"51\":1}}],[\"windows安装docker\",{\"1\":{\"59\":1}}],[\"windows\",{\"1\":{\"4\":1}}],[\"watt\",{\"1\":{\"51\":1}}],[\"web开发者常用工具集\",{\"1\":{\"52\":1}}],[\"webstorm\",{\"1\":{\"51\":1}}],[\"webstorm2023\",{\"1\":{\"51\":1}}],[\"web\",{\"1\":{\"51\":1,\"73\":2}}],[\"www\",{\"1\":{\"14\":1}}],[\"wuyouzhuguli\",{\"1\":{\"8\":1}}],[\"wq9\",{\"1\":{\"7\":1}}],[\"w3school\",{\"1\":{\"6\":1}}],[\"xiniushu\",{\"1\":{\"35\":1}}],[\"xl\",{\"1\":{\"14\":1}}],[\"xsi和xsi\",{\"1\":{\"6\":1}}],[\"xsd语法解析\",{\"1\":{\"6\":1}}],[\"xsd\",{\"0\":{\"6\":1},\"1\":{\"6\":2}}],[\"xml中的xmlns\",{\"1\":{\"6\":1}}],[\"xmlns=\",{\"1\":{\"99\":1,\"101\":1,\"102\":1}}],[\"xmlns\",{\"1\":{\"6\":2,\"99\":1,\"101\":1,\"102\":1}}],[\"xml之命名空间的作用\",{\"1\":{\"6\":1}}],[\"xml\",{\"1\":{\"6\":2,\"99\":1,\"101\":1,\"102\":1}}],[\"登录github账号\",{\"1\":{\"4\":1}}],[\"encoding=\",{\"1\":{\"99\":1,\"101\":1,\"102\":1}}],[\"equals\",{\"1\":{\"99\":2}}],[\"effect\",{\"1\":{\"71\":1}}],[\"eventhandler<keyevent>\",{\"1\":{\"99\":1}}],[\"eventhandler<actionevent>\",{\"1\":{\"99\":1}}],[\"event\",{\"1\":{\"69\":3,\"99\":5}}],[\"edge\",{\"1\":{\"52\":1}}],[\"editorjs\",{\"1\":{\"40\":1}}],[\"editor\",{\"1\":{\"14\":2,\"40\":1}}],[\"emojiall中文官方网站\",{\"1\":{\"41\":1}}],[\"emoji表情符号词典\",{\"1\":{\"41\":1}}],[\"emoji大全\",{\"1\":{\"41\":1}}],[\"empty\",{\"1\":{\"40\":1}}],[\"email\",{\"1\":{\"4\":2}}],[\"error\",{\"1\":{\"40\":1}}],[\"ecopaste\",{\"1\":{\"51\":1}}],[\"echarts\",{\"1\":{\"40\":1}}],[\"ecmascript\",{\"1\":{\"31\":1}}],[\"exception\",{\"1\":{\"74\":3,\"76\":3,\"77\":3,\"79\":3,\"80\":3,\"81\":3,\"82\":3,\"99\":2,\"101\":1}}],[\"extends\",{\"1\":{\"74\":1,\"76\":1,\"77\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"99\":2,\"101\":1,\"102\":1}}],[\"extends的用法\",{\"1\":{\"42\":1}}],[\"exe\",{\"1\":{\"73\":1}}],[\"executionentity\",{\"1\":{\"28\":1}}],[\"example\",{\"1\":{\"4\":2}}],[\"eslint\",{\"0\":{\"33\":1},\"1\":{\"33\":2}}],[\"es\",{\"1\":{\"26\":1}}],[\"easy\",{\"1\":{\"26\":1}}],[\"elasticsearch数据同步\",{\"1\":{\"26\":1}}],[\"elasticsearch入门篇\",{\"1\":{\"26\":1}}],[\"elasticsearch\",{\"0\":{\"26\":1}}],[\"elasticsearch技术解析与实战\",{\"1\":{\"1\":1}}],[\"celldate\",{\"1\":{\"101\":6}}],[\"centery=\",{\"1\":{\"102\":1}}],[\"centeryproperty\",{\"1\":{\"102\":1}}],[\"centerx=\",{\"1\":{\"102\":1}}],[\"centerxproperty\",{\"1\":{\"102\":1}}],[\"center\",{\"1\":{\"80\":1,\"81\":3,\"82\":1}}],[\"children>\",{\"1\":{\"99\":1,\"101\":1,\"102\":1}}],[\"chinaz\",{\"1\":{\"14\":1}}],[\"check\",{\"1\":{\"76\":1}}],[\"checkbox\",{\"0\":{\"88\":1},\"1\":{\"67\":1,\"76\":5,\"77\":1}}],[\"cd\",{\"1\":{\"57\":3}}],[\"cicd\",{\"1\":{\"57\":1}}],[\"ci\",{\"1\":{\"57\":3,\"102\":4}}],[\"circlelocationbind\",{\"1\":{\"102\":2}}],[\"circle\",{\"1\":{\"7\":1,\"82\":5,\"102\":2}}],[\"class\",{\"1\":{\"74\":1,\"76\":1,\"77\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"99\":3,\"101\":3,\"102\":2}}],[\"clipboard\",{\"1\":{\"51\":1}}],[\"cloudflare\",{\"1\":{\"51\":1}}],[\"cloud教程源码\",{\"1\":{\"8\":1}}],[\"cloud\",{\"1\":{\"8\":2,\"14\":1}}],[\"cloud与微服务构建\",{\"1\":{\"1\":1}}],[\"clone\",{\"1\":{\"4\":1}}],[\"cross\",{\"1\":{\"51\":1}}],[\"customization\",{\"1\":{\"40\":1}}],[\"canal全家桶的安装和配置\",{\"1\":{\"23\":1}}],[\"canel\",{\"0\":{\"23\":1}}],[\"cas\",{\"1\":{\"11\":1}}],[\"css3\",{\"1\":{\"40\":1}}],[\"css\",{\"1\":{\"35\":2,\"40\":3,\"70\":1}}],[\"css提示\",{\"1\":{\"34\":1}}],[\"cs\",{\"1\":{\"14\":1}}],[\"csdn\",{\"1\":{\"40\":1}}],[\"csdn专栏\",{\"1\":{\"8\":1}}],[\"csdn博客\",{\"1\":{\"6\":2,\"7\":6,\"17\":1,\"27\":3,\"28\":5,\"30\":1,\"33\":1,\"34\":2,\"35\":5,\"49\":1,\"51\":5}}],[\"columns>\",{\"1\":{\"101\":1}}],[\"color\",{\"1\":{\"40\":1,\"77\":2,\"79\":3,\"80\":2,\"81\":6,\"82\":4}}],[\"controller\",{\"1\":{\"101\":2,\"102\":5}}],[\"controller里的initialize方法\",{\"0\":{\"101\":1}}],[\"controller=\",{\"1\":{\"99\":1,\"101\":1,\"102\":1}}],[\"control\",{\"1\":{\"76\":4,\"77\":4,\"79\":1,\"80\":3,\"81\":1,\"82\":1,\"99\":1,\"101\":2}}],[\"container\",{\"1\":{\"65\":1,\"68\":1}}],[\"constraints\",{\"1\":{\"68\":1}}],[\"convert\",{\"1\":{\"14\":1}}],[\"code\",{\"1\":{\"61\":1}}],[\"coderbruis\",{\"1\":{\"8\":1}}],[\"compose教程\",{\"1\":{\"59\":1}}],[\"compose\",{\"1\":{\"59\":2}}],[\"com为注册github账号\",{\"1\":{\"4\":1}}],[\"com\",{\"1\":{\"4\":2,\"6\":3,\"7\":2,\"8\":5,\"9\":1,\"11\":1,\"14\":5,\"16\":3,\"17\":1,\"27\":8,\"28\":6,\"32\":3,\"35\":3,\"38\":2,\"39\":1,\"40\":1,\"42\":4,\"45\":1,\"48\":1,\"51\":2,\"53\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":2,\"99\":4,\"101\":3,\"102\":3}}],[\"cc\",{\"1\":{\"8\":1}}],[\"cnblogs\",{\"1\":{\"7\":1,\"11\":1,\"16\":2,\"28\":1,\"32\":1,\"35\":1,\"42\":2,\"51\":1,\"60\":1}}],[\"cn\",{\"1\":{\"6\":1,\"14\":1,\"16\":1,\"27\":1,\"33\":2,\"35\":1,\"40\":1,\"51\":1,\"100\":1}}],[\"c\",{\"1\":{\"4\":1}}],[\"right\",{\"1\":{\"80\":2,\"81\":1}}],[\"rgb\",{\"1\":{\"77\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1}}],[\"r1\",{\"1\":{\"77\":3}}],[\"root\",{\"1\":{\"76\":9,\"81\":6,\"99\":6,\"101\":2,\"102\":2}}],[\"rotatetransition\",{\"1\":{\"71\":1}}],[\"router之路由的params参数\",{\"1\":{\"40\":1}}],[\"router之路由的query参数\",{\"1\":{\"40\":1}}],[\"router中的param跟query的区别\",{\"1\":{\"40\":1}}],[\"router\",{\"1\":{\"35\":6,\"40\":1}}],[\"radius=\",{\"1\":{\"102\":1}}],[\"radio\",{\"1\":{\"76\":1}}],[\"radiobutton\",{\"0\":{\"89\":1},\"1\":{\"67\":1,\"76\":5,\"77\":1}}],[\"rabbitmq死信队列\",{\"1\":{\"24\":1}}],[\"rabbitmq手动确认模式\",{\"1\":{\"24\":1}}],[\"rabbitmq使用教程\",{\"1\":{\"24\":1}}],[\"rabbitmq概念详解\",{\"1\":{\"24\":1}}],[\"rabbitmq核心概念及工作原理\",{\"1\":{\"24\":1}}],[\"rabbitmq\",{\"0\":{\"24\":1},\"1\":{\"24\":4}}],[\"ruanyifeng\",{\"1\":{\"35\":1}}],[\"runoob\",{\"1\":{\"9\":1}}],[\"return\",{\"1\":{\"101\":2}}],[\"retrying\",{\"1\":{\"16\":1}}],[\"red\",{\"1\":{\"81\":1,\"82\":1}}],[\"redisinsight\",{\"1\":{\"51\":1}}],[\"redis的三种集群方案\",{\"1\":{\"21\":1}}],[\"redis经典问题\",{\"1\":{\"7\":1}}],[\"redisson\",{\"1\":{\"7\":1}}],[\"redisson的基本使用\",{\"1\":{\"7\":1}}],[\"redis滑动时间窗口算法\",{\"1\":{\"7\":1}}],[\"redis多数据源\",{\"1\":{\"7\":1}}],[\"redis\",{\"0\":{\"21\":1},\"1\":{\"2\":1,\"7\":2,\"51\":1}}],[\"redis设计与实现\",{\"1\":{\"1\":1}}],[\"rectangle\",{\"1\":{\"77\":3,\"82\":5}}],[\"remixicon\",{\"1\":{\"41\":1}}],[\"react项目路由配置\",{\"1\":{\"35\":1}}],[\"react项目\",{\"1\":{\"35\":1}}],[\"react插件\",{\"1\":{\"35\":1}}],[\"react开发者必备vscode插件\",{\"1\":{\"35\":1}}],[\"react\",{\"0\":{\"35\":1,\"38\":1},\"1\":{\"35\":8,\"38\":1}}],[\"requires\",{\"1\":{\"8\":1}}],[\"required\",{\"1\":{\"8\":1}}],[\"rpc\",{\"1\":{\"4\":1}}],[\"rjmeteor\",{\"1\":{\"4\":1}}],[\"rsa为加密算法\",{\"1\":{\"4\":1}}],[\"rsa\",{\"1\":{\"4\":2}}],[\"treeitem<string>\",{\"1\":{\"81\":5}}],[\"treeview<string>\",{\"1\":{\"81\":2}}],[\"treeview\",{\"0\":{\"96\":1},\"1\":{\"67\":1,\"81\":3}}],[\"true\",{\"1\":{\"80\":1}}],[\"transition\",{\"1\":{\"71\":2}}],[\"transfer\",{\"1\":{\"51\":1}}],[\"text=\",{\"1\":{\"99\":2,\"101\":2}}],[\"text\",{\"1\":{\"76\":1,\"99\":1}}],[\"textarea\",{\"0\":{\"87\":1},\"1\":{\"67\":1}}],[\"textfield\",{\"0\":{\"86\":1},\"1\":{\"67\":1,\"76\":6,\"77\":3,\"80\":4}}],[\"tablecolumn\",{\"1\":{\"101\":1}}],[\"tablecolumn<person\",{\"1\":{\"101\":2}}],[\"tableview>\",{\"1\":{\"101\":1}}],[\"tableview<person>\",{\"1\":{\"101\":1}}],[\"tableview\",{\"0\":{\"95\":1},\"1\":{\"67\":1,\"101\":4}}],[\"tab2\",{\"1\":{\"81\":3}}],[\"tab1\",{\"1\":{\"81\":3}}],[\"tab\",{\"1\":{\"81\":6}}],[\"tabpane\",{\"1\":{\"81\":7}}],[\"tauri\",{\"1\":{\"44\":1}}],[\"tailwindcss\",{\"1\":{\"40\":1}}],[\"tailwind\",{\"1\":{\"35\":2,\"40\":1}}],[\"timeline\",{\"1\":{\"71\":1}}],[\"timeagejs格式化日期时间\",{\"1\":{\"40\":1}}],[\"tilepane\",{\"1\":{\"68\":1}}],[\"tiddlyhost\",{\"1\":{\"40\":1}}],[\"this\",{\"1\":{\"101\":4}}],[\"throws\",{\"1\":{\"74\":3,\"76\":3,\"77\":3,\"79\":3,\"80\":3,\"81\":3,\"82\":3,\"99\":2,\"101\":1,\"102\":1}}],[\"thread中几个比较重要的方法\",{\"1\":{\"10\":1}}],[\"the\",{\"1\":{\"51\":1}}],[\"theme\",{\"1\":{\"40\":1}}],[\"typeof\",{\"1\":{\"42\":1}}],[\"typescript的值类型\",{\"1\":{\"42\":1}}],[\"typescript官网\",{\"1\":{\"42\":1}}],[\"typescript\",{\"0\":{\"42\":1}}],[\"type=repositories\",{\"1\":{\"8\":1}}],[\"typora安装教程\",{\"1\":{\"51\":1}}],[\"typora1\",{\"1\":{\"51\":1}}],[\"typora\",{\"1\":{\"40\":1}}],[\"tuniao\",{\"1\":{\"37\":1}}],[\"tdesign\",{\"1\":{\"37\":1}}],[\"ts在项目中的使用\",{\"1\":{\"42\":1}}],[\"ts之keyof\",{\"1\":{\"42\":1}}],[\"ts\",{\"1\":{\"30\":1}}],[\"top\",{\"1\":{\"81\":1}}],[\"togglebutton\",{\"0\":{\"90\":1},\"1\":{\"67\":1}}],[\"toolkit\",{\"1\":{\"51\":1}}],[\"tool\",{\"1\":{\"51\":2}}],[\"to\",{\"1\":{\"14\":2,\"26\":1,\"51\":1}}],[\"t\",{\"1\":{\"4\":1}}],[\"keycode\",{\"1\":{\"99\":8}}],[\"keyevent\",{\"1\":{\"99\":2}}],[\"keys将项目部署到远程服务器\",{\"1\":{\"57\":1}}],[\"keygen\",{\"1\":{\"4\":1}}],[\"kafka并不难学\",{\"1\":{\"1\":1}}],[\"size=\",{\"1\":{\"99\":1}}],[\"shape\",{\"1\":{\"77\":1,\"82\":2,\"102\":1}}],[\"show\",{\"1\":{\"76\":1,\"77\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"99\":2,\"101\":1,\"102\":1}}],[\"shiro源码全面分析\",{\"1\":{\"27\":1}}],[\"shiro并发请求\",{\"1\":{\"27\":1}}],[\"shiro之并发在线篇\",{\"1\":{\"27\":1}}],[\"shiro之注解篇\",{\"1\":{\"27\":1}}],[\"shiro常用注解\",{\"1\":{\"27\":1}}],[\"shiro超详细学习笔记\",{\"1\":{\"27\":1}}],[\"shiro安全框架详解及springboot使用示例\",{\"1\":{\"27\":1}}],[\"shiro框架\",{\"1\":{\"27\":1}}],[\"shiro授权认证原理分析\",{\"1\":{\"27\":1}}],[\"shiro\",{\"0\":{\"27\":1},\"1\":{\"8\":1,\"27\":3}}],[\"super\",{\"1\":{\"74\":2,\"76\":2,\"77\":2,\"79\":2,\"80\":2,\"81\":2,\"82\":2}}],[\"supported\",{\"1\":{\"8\":1}}],[\"supports\",{\"1\":{\"8\":1}}],[\"swing\",{\"1\":{\"73\":2}}],[\"slider\",{\"0\":{\"91\":1},\"1\":{\"67\":1}}],[\"scaletransition\",{\"1\":{\"71\":1}}],[\"scrollbar\",{\"0\":{\"93\":1},\"1\":{\"67\":1}}],[\"scene\",{\"0\":{\"100\":1},\"1\":{\"65\":1,\"76\":11,\"77\":15,\"79\":9,\"80\":12,\"81\":12,\"82\":11,\"99\":13,\"100\":1,\"101\":4,\"102\":11}}],[\"schema\",{\"1\":{\"6\":1}}],[\"sandbox\",{\"1\":{\"61\":1}}],[\"sspuoj\",{\"1\":{\"61\":1}}],[\"ssh工具\",{\"1\":{\"51\":1}}],[\"ssh下的公钥文件id\",{\"1\":{\"4\":1}}],[\"ssh\",{\"1\":{\"4\":1,\"57\":1}}],[\"stroketype=\",{\"1\":{\"102\":1}}],[\"stroke=\",{\"1\":{\"102\":1}}],[\"string>\",{\"1\":{\"101\":2}}],[\"string\",{\"1\":{\"74\":1,\"76\":1,\"77\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"99\":2,\"101\":5,\"102\":1}}],[\"stream流\",{\"1\":{\"10\":1}}],[\"stackpane\",{\"1\":{\"82\":8}}],[\"static\",{\"1\":{\"74\":1,\"76\":1,\"77\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"99\":2,\"101\":1,\"102\":1}}],[\"stage\",{\"1\":{\"74\":3,\"76\":3,\"77\":3,\"79\":3,\"80\":3,\"81\":3,\"82\":3,\"99\":2,\"101\":1,\"102\":1}}],[\"start\",{\"1\":{\"66\":1,\"74\":1,\"76\":1,\"77\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"99\":2,\"101\":1,\"102\":1}}],[\"stop\",{\"1\":{\"66\":1,\"74\":2,\"76\":2,\"77\":2,\"79\":2,\"80\":2,\"81\":2,\"82\":2}}],[\"steampp\",{\"1\":{\"51\":1}}],[\"steam++官网\",{\"1\":{\"51\":1}}],[\"softonic\",{\"1\":{\"51\":1}}],[\"sqlyog\",{\"1\":{\"51\":1}}],[\"skin\",{\"1\":{\"70\":1}}],[\"skeleton\",{\"1\":{\"40\":3}}],[\"sky\",{\"1\":{\"14\":1}}],[\"spel表达式总结\",{\"1\":{\"18\":1}}],[\"spring官网\",{\"1\":{\"18\":1}}],[\"spring事务\",{\"1\":{\"8\":1}}],[\"springcloudlearning\",{\"1\":{\"8\":1}}],[\"springsecurity\",{\"1\":{\"8\":1}}],[\"springsecurity源码\",{\"1\":{\"8\":1}}],[\"springaop源码\",{\"1\":{\"8\":1}}],[\"springall\",{\"1\":{\"8\":1}}],[\"spring源码编译\",{\"1\":{\"18\":1}}],[\"spring源码\",{\"1\":{\"8\":1}}],[\"spring源码深度解析\",{\"1\":{\"1\":1}}],[\"springboot集成minio入门教程\",{\"1\":{\"25\":1}}],[\"springboot集成rabbitmq实现消息重试机制\",{\"1\":{\"24\":1}}],[\"springboot集成elasticsearch\",{\"1\":{\"7\":1}}],[\"springboot源码\",{\"1\":{\"8\":1}}],[\"springboot\",{\"1\":{\"7\":2,\"24\":3,\"28\":1}}],[\"springboot实现事务\",{\"1\":{\"7\":1}}],[\"springboot整合shiro后对登录session超时自动跳转登录页\",{\"1\":{\"27\":1}}],[\"springboot整合spring事务详解以及实战\",{\"1\":{\"7\":1}}],[\"springboot整合jedis和redisson布隆过滤器处理缓存穿透\",{\"1\":{\"7\":1}}],[\"springboot整合elasticsearch实战\",{\"1\":{\"7\":1}}],[\"spring\",{\"0\":{\"8\":1,\"18\":1},\"1\":{\"1\":1,\"7\":1,\"8\":8,\"14\":3}}],[\"springmvc\",{\"1\":{\"1\":1}}],[\"setitems\",{\"1\":{\"101\":1}}],[\"setage\",{\"1\":{\"101\":1}}],[\"setalignment\",{\"1\":{\"80\":1,\"81\":2,\"82\":1}}],[\"setname\",{\"1\":{\"101\":1}}],[\"setonkeyreleased\",{\"1\":{\"99\":1}}],[\"setonaction\",{\"1\":{\"99\":1}}],[\"setorientation\",{\"1\":{\"81\":1}}],[\"setfont\",{\"1\":{\"99\":1}}],[\"setlocation\",{\"1\":{\"102\":1}}],[\"setlayouty\",{\"1\":{\"99\":6}}],[\"setlayoutx\",{\"1\":{\"99\":2}}],[\"setleft\",{\"1\":{\"81\":1}}],[\"setright\",{\"1\":{\"81\":1}}],[\"setbottom\",{\"1\":{\"81\":1}}],[\"setcellvaluefactory\",{\"1\":{\"101\":2}}],[\"setcenter\",{\"1\":{\"81\":1}}],[\"setcontent\",{\"1\":{\"81\":2}}],[\"setgridlinesvisible\",{\"1\":{\"80\":1}}],[\"settop\",{\"1\":{\"81\":1}}],[\"settopanchor\",{\"1\":{\"79\":1}}],[\"settitle\",{\"1\":{\"76\":1}}],[\"setmargin\",{\"1\":{\"77\":1}}],[\"setstyle\",{\"1\":{\"79\":1,\"81\":4}}],[\"setspacing\",{\"1\":{\"77\":1}}],[\"setscene\",{\"1\":{\"76\":1,\"77\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"99\":2,\"101\":1,\"102\":1}}],[\"sethalignment\",{\"1\":{\"80\":2}}],[\"sethgrow\",{\"1\":{\"77\":1}}],[\"sethgap\",{\"1\":{\"76\":1,\"80\":1}}],[\"setheight\",{\"1\":{\"76\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1}}],[\"setwidth\",{\"1\":{\"76\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1}}],[\"setprefwidth\",{\"1\":{\"76\":1,\"81\":1}}],[\"setprefsize\",{\"1\":{\"76\":1,\"79\":1}}],[\"setpadding\",{\"1\":{\"76\":1,\"77\":1,\"80\":1,\"82\":1}}],[\"setvgap\",{\"1\":{\"76\":1,\"80\":1}}],[\"send\",{\"1\":{\"51\":1}}],[\"segmentfault\",{\"1\":{\"28\":1,\"35\":1}}],[\"serializable\",{\"1\":{\"10\":1}}],[\"se\",{\"1\":{\"9\":1}}],[\"search\",{\"1\":{\"8\":1}}],[\"security\",{\"1\":{\"8\":2,\"51\":1}}],[\"sechemaloacation的具体含义是什么\",{\"1\":{\"6\":1}}],[\"sequence\",{\"1\":{\"6\":1}}],[\"生成密钥对\",{\"1\":{\"4\":1}}],[\"进度条\",{\"0\":{\"92\":1},\"1\":{\"67\":1}}],[\"进度条使用\",{\"1\":{\"40\":1}}],[\"进行版本控制\",{\"1\":{\"57\":1}}],[\"进入设置面板\",{\"1\":{\"4\":1}}],[\"进大厂必看\",{\"1\":{\"2\":1}}],[\"进阶\",{\"1\":{\"1\":1}}],[\"builder\",{\"1\":{\"100\":1}}],[\"builder里构建fxml布局文件\",{\"0\":{\"100\":1}}],[\"bu\",{\"1\":{\"99\":2}}],[\"button=new\",{\"1\":{\"79\":1}}],[\"button2\",{\"1\":{\"76\":4}}],[\"button\",{\"0\":{\"84\":1},\"1\":{\"67\":1,\"76\":4,\"77\":1,\"79\":6,\"80\":3,\"81\":5,\"82\":6,\"99\":8}}],[\"black\",{\"1\":{\"102\":1}}],[\"blue\",{\"1\":{\"81\":1,\"82\":1}}],[\"blog\",{\"1\":{\"40\":1}}],[\"bottom\",{\"1\":{\"81\":1}}],[\"box\",{\"1\":{\"76\":1}}],[\"borderpane\",{\"1\":{\"68\":1,\"81\":3}}],[\"boot\",{\"1\":{\"7\":1,\"8\":2,\"14\":1}}],[\"boot技术内幕架\",{\"1\":{\"1\":1}}],[\"best\",{\"1\":{\"51\":1}}],[\"brush\",{\"1\":{\"40\":1}}],[\"bind\",{\"1\":{\"102\":2}}],[\"bilibili\",{\"1\":{\"27\":1,\"28\":1,\"51\":1,\"59\":1}}],[\"bigdecimal\",{\"1\":{\"10\":1}}],[\"basic\",{\"0\":{\"105\":1}}],[\"baseline\",{\"1\":{\"80\":1}}],[\"background\",{\"1\":{\"79\":1,\"81\":4}}],[\"batch\",{\"1\":{\"8\":1}}],[\"batj2023面试题汇总及详解\",{\"1\":{\"2\":1}}],[\"baidu\",{\"1\":{\"7\":1,\"16\":1,\"53\":1}}],[\"咕泡教育80万字大厂面试真题深度解析\",{\"1\":{\"2\":1}}],[\"阅读笔记\",{\"1\":{\"2\":1}}],[\"jar\",{\"1\":{\"73\":1}}],[\"javafxapplication\",{\"1\":{\"102\":1}}],[\"javafx应用里的事件驱动编程\",{\"1\":{\"69\":1}}],[\"javafx\",{\"1\":{\"65\":4,\"70\":1,\"73\":6,\"74\":2,\"76\":9,\"77\":13,\"79\":6,\"80\":12,\"81\":13,\"82\":10,\"99\":9,\"101\":7,\"102\":6}}],[\"javascript\",{\"0\":{\"31\":1},\"1\":{\"31\":1,\"55\":1}}],[\"javasourcecodelearning\",{\"1\":{\"8\":1}}],[\"java序列化系列之protobuf\",{\"1\":{\"16\":1}}],[\"java工具\",{\"0\":{\"16\":1}}],[\"java后端技术\",{\"1\":{\"14\":1}}],[\"javaguide\",{\"1\":{\"14\":1}}],[\"java学到什么程度可以找工作\",{\"1\":{\"14\":1}}],[\"java处理并发编程工具集合\",{\"1\":{\"11\":1}}],[\"java多线程\",{\"1\":{\"11\":1}}],[\"java多线程二\",{\"1\":{\"10\":1}}],[\"java类加载策略之双亲委派机制全面分析讲解\",{\"1\":{\"10\":1}}],[\"java函数式编程入门\",{\"1\":{\"10\":1}}],[\"java中使用protobuf的实例\",{\"1\":{\"16\":1}}],[\"java中compareto\",{\"1\":{\"10\":1}}],[\"java中的juc并发包\",{\"1\":{\"11\":1}}],[\"java中的\",{\"1\":{\"10\":1}}],[\"java精确除法运算\",{\"1\":{\"10\":1}}],[\"java\",{\"0\":{\"9\":1,\"106\":1},\"1\":{\"8\":1,\"9\":1,\"10\":2,\"11\":3,\"12\":1,\"13\":1,\"14\":2,\"99\":2}}],[\"java流行框架源码分析\",{\"1\":{\"8\":1}}],[\"java面试常见问题总结\",{\"1\":{\"2\":1}}],[\"jprofiler的使用\",{\"1\":{\"51\":1}}],[\"jprofiler\",{\"1\":{\"51\":1}}],[\"jpg\",{\"1\":{\"14\":1}}],[\"jemeter\",{\"1\":{\"51\":1}}],[\"jetbrains\",{\"1\":{\"28\":1}}],[\"jmeter压测工具详解\",{\"1\":{\"51\":1}}],[\"js是一个轻量级的javascript类库\",{\"1\":{\"40\":1}}],[\"js\",{\"1\":{\"40\":4}}],[\"juejin\",{\"1\":{\"27\":1,\"33\":1,\"35\":1}}],[\"juc详解\",{\"1\":{\"11\":1}}],[\"juc\",{\"0\":{\"11\":1},\"1\":{\"11\":5}}],[\"jianli\",{\"1\":{\"14\":1}}],[\"jianshu\",{\"1\":{\"6\":1,\"32\":1}}],[\"jb51\",{\"1\":{\"10\":1}}],[\"jdk\",{\"1\":{\"9\":1}}],[\"jdk源码\",{\"1\":{\"8\":1}}],[\"jvm\",{\"1\":{\"51\":1}}],[\"jvm之问\",{\"1\":{\"2\":1}}],[\"jvm高级特性与最佳实践\",{\"1\":{\"1\":1}}],[\"商业实战\",{\"1\":{\"1\":1}}],[\"入门到实战\",{\"1\":{\"27\":1}}],[\"入门\",{\"1\":{\"1\":1,\"31\":1}}],[\"深入理解\",{\"1\":{\"13\":1}}],[\"深入理解java中的aqs\",{\"1\":{\"11\":1}}],[\"深入理解java虚拟机\",{\"1\":{\"1\":1}}],[\"深入理解spring\",{\"1\":{\"1\":1}}],[\"深入浅出mysql++数据库开发优化与管理维护\",{\"1\":{\"1\":1}}],[\"算法\",{\"0\":{\"48\":1},\"1\":{\"1\":1,\"48\":1}}]],\"version\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
